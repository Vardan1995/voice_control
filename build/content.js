/*! For license information please see content.js.LICENSE.txt */
(()=>{var t={6307:(t,e,n)=>{n(1631),n(9002),n(975),n(3530),n(5448),n(1262),n(9006),n(5808),n(3876),n(8190),n(2722),n(1761),n(7354),n(3097),n(5645)},4963:t=>{t.exports=function(t){if("function"!=typeof t)throw TypeError(t+" is not a function!");return t}},7007:(t,e,n)=>{var r=n(5286);t.exports=function(t){if(!r(t))throw TypeError(t+" is not an object!");return t}},9315:(t,e,n)=>{var r=n(2110),s=n(875),i=n(2337);t.exports=function(t){return function(e,n,a){var o,l=r(e),u=s(l.length),c=i(a,u);if(t&&n!=n){for(;u>c;)if((o=l[c++])!=o)return!0}else for(;u>c;c++)if((t||c in l)&&l[c]===n)return t||c||0;return!t&&-1}}},1488:(t,e,n)=>{var r=n(2032),s=n(6314)("toStringTag"),i="Arguments"==r(function(){return arguments}());t.exports=function(t){var e,n,a;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(n=function(t,e){try{return t[e]}catch(t){}}(e=Object(t),s))?n:i?r(e):"Object"==(a=r(e))&&"function"==typeof e.callee?"Arguments":a}},2032:t=>{var e={}.toString;t.exports=function(t){return e.call(t).slice(8,-1)}},5645:t=>{var e=t.exports={version:"2.6.12"};"number"==typeof __e&&(__e=e)},741:(t,e,n)=>{var r=n(4963);t.exports=function(t,e,n){if(r(t),void 0===e)return t;switch(n){case 1:return function(n){return t.call(e,n)};case 2:return function(n,r){return t.call(e,n,r)};case 3:return function(n,r,s){return t.call(e,n,r,s)}}return function(){return t.apply(e,arguments)}}},1355:t=>{t.exports=function(t){if(null==t)throw TypeError("Can't call method on  "+t);return t}},7057:(t,e,n)=>{t.exports=!n(4253)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},2457:(t,e,n)=>{var r=n(5286),s=n(3816).document,i=r(s)&&r(s.createElement);t.exports=function(t){return i?s.createElement(t):{}}},4430:t=>{t.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},2985:(t,e,n)=>{var r=n(3816),s=n(5645),i=n(7728),a=n(7234),o=n(741),l=function(t,e,n){var u,c,h,d,p=t&l.F,f=t&l.G,m=t&l.S,g=t&l.P,y=t&l.B,b=f?r:m?r[e]||(r[e]={}):(r[e]||{}).prototype,x=f?s:s[e]||(s[e]={}),v=x.prototype||(x.prototype={});for(u in f&&(n=e),n)h=((c=!p&&b&&void 0!==b[u])?b:n)[u],d=y&&c?o(h,r):g&&"function"==typeof h?o(Function.call,h):h,b&&a(b,u,h,t&l.U),x[u]!=h&&i(x,u,d),g&&v[u]!=h&&(v[u]=h)};r.core=s,l.F=1,l.G=2,l.S=4,l.P=8,l.B=16,l.W=32,l.U=64,l.R=128,t.exports=l},4253:t=>{t.exports=function(t){try{return!!t()}catch(t){return!0}}},3531:(t,e,n)=>{var r=n(741),s=n(8851),i=n(6555),a=n(7007),o=n(875),l=n(9002),u={},c={},h=t.exports=function(t,e,n,h,d){var p,f,m,g,y=d?function(){return t}:l(t),b=r(n,h,e?2:1),x=0;if("function"!=typeof y)throw TypeError(t+" is not iterable!");if(i(y)){for(p=o(t.length);p>x;x++)if((g=e?b(a(f=t[x])[0],f[1]):b(t[x]))===u||g===c)return g}else for(m=y.call(t);!(f=m.next()).done;)if((g=s(m,b,f.value,e))===u||g===c)return g};h.BREAK=u,h.RETURN=c},18:(t,e,n)=>{t.exports=n(3825)("native-function-to-string",Function.toString)},3816:t=>{var e=t.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=e)},9181:t=>{var e={}.hasOwnProperty;t.exports=function(t,n){return e.call(t,n)}},7728:(t,e,n)=>{var r=n(9275),s=n(681);t.exports=n(7057)?function(t,e,n){return r.f(t,e,s(1,n))}:function(t,e,n){return t[e]=n,t}},639:(t,e,n)=>{var r=n(3816).document;t.exports=r&&r.documentElement},1734:(t,e,n)=>{t.exports=!n(7057)&&!n(4253)((function(){return 7!=Object.defineProperty(n(2457)("div"),"a",{get:function(){return 7}}).a}))},7242:t=>{t.exports=function(t,e,n){var r=void 0===n;switch(e.length){case 0:return r?t():t.call(n);case 1:return r?t(e[0]):t.call(n,e[0]);case 2:return r?t(e[0],e[1]):t.call(n,e[0],e[1]);case 3:return r?t(e[0],e[1],e[2]):t.call(n,e[0],e[1],e[2]);case 4:return r?t(e[0],e[1],e[2],e[3]):t.call(n,e[0],e[1],e[2],e[3])}return t.apply(n,e)}},9797:(t,e,n)=>{var r=n(2032);t.exports=Object("z").propertyIsEnumerable(0)?Object:function(t){return"String"==r(t)?t.split(""):Object(t)}},6555:(t,e,n)=>{var r=n(2803),s=n(6314)("iterator"),i=Array.prototype;t.exports=function(t){return void 0!==t&&(r.Array===t||i[s]===t)}},5286:t=>{t.exports=function(t){return"object"==typeof t?null!==t:"function"==typeof t}},8851:(t,e,n)=>{var r=n(7007);t.exports=function(t,e,n,s){try{return s?e(r(n)[0],n[1]):e(n)}catch(e){var i=t.return;throw void 0!==i&&r(i.call(t)),e}}},9988:(t,e,n)=>{"use strict";var r=n(2503),s=n(681),i=n(2943),a={};n(7728)(a,n(6314)("iterator"),(function(){return this})),t.exports=function(t,e,n){t.prototype=r(a,{next:s(1,n)}),i(t,e+" Iterator")}},2923:(t,e,n)=>{"use strict";var r=n(4461),s=n(2985),i=n(7234),a=n(7728),o=n(2803),l=n(9988),u=n(2943),c=n(468),h=n(6314)("iterator"),d=!([].keys&&"next"in[].keys()),p="keys",f="values",m=function(){return this};t.exports=function(t,e,n,g,y,b,x){l(n,e,g);var v,w,k,I=function(t){if(!d&&t in $)return $[t];switch(t){case p:case f:return function(){return new n(this,t)}}return function(){return new n(this,t)}},C=e+" Iterator",S=y==f,E=!1,$=t.prototype,N=$[h]||$["@@iterator"]||y&&$[y],R=N||I(y),T=y?S?I("entries"):R:void 0,A="Array"==e&&$.entries||N;if(A&&(k=c(A.call(new t)))!==Object.prototype&&k.next&&(u(k,C,!0),r||"function"==typeof k[h]||a(k,h,m)),S&&N&&N.name!==f&&(E=!0,R=function(){return N.call(this)}),r&&!x||!d&&!E&&$[h]||a($,h,R),o[e]=R,o[C]=m,y)if(v={values:S?R:I(f),keys:b?R:I(p),entries:T},x)for(w in v)w in $||i($,w,v[w]);else s(s.P+s.F*(d||E),e,v);return v}},5436:t=>{t.exports=function(t,e){return{value:e,done:!!t}}},2803:t=>{t.exports={}},5200:(t,e,n)=>{var r=n(7184),s=n(2110);t.exports=function(t,e){for(var n,i=s(t),a=r(i),o=a.length,l=0;o>l;)if(i[n=a[l++]]===e)return n}},4461:t=>{t.exports=!1},5345:(t,e,n)=>{"use strict";var r=n(7057),s=n(7184),i=n(4548),a=n(4682),o=n(508),l=n(9797),u=Object.assign;t.exports=!u||n(4253)((function(){var t={},e={},n=Symbol(),r="abcdefghijklmnopqrst";return t[n]=7,r.split("").forEach((function(t){e[t]=t})),7!=u({},t)[n]||Object.keys(u({},e)).join("")!=r}))?function(t,e){for(var n=o(t),u=arguments.length,c=1,h=i.f,d=a.f;u>c;)for(var p,f=l(arguments[c++]),m=h?s(f).concat(h(f)):s(f),g=m.length,y=0;g>y;)p=m[y++],r&&!d.call(f,p)||(n[p]=f[p]);return n}:u},2503:(t,e,n)=>{var r=n(7007),s=n(5588),i=n(4430),a=n(9335)("IE_PROTO"),o=function(){},l=function(){var t,e=n(2457)("iframe"),r=i.length;for(e.style.display="none",n(639).appendChild(e),e.src="javascript:",(t=e.contentWindow.document).open(),t.write("<script>document.F=Object<\/script>"),t.close(),l=t.F;r--;)delete l.prototype[i[r]];return l()};t.exports=Object.create||function(t,e){var n;return null!==t?(o.prototype=r(t),n=new o,o.prototype=null,n[a]=t):n=l(),void 0===e?n:s(n,e)}},3004:(t,e,n)=>{var r=n(9275),s=n(8693),i=n(7643),a=n(2110);t.exports=function(t,e){for(var n,o=i(a(e)),l=o.length,u=0;l>u;)r.f(t,n=o[u++],s.f(e,n));return t}},9275:(t,e,n)=>{var r=n(7007),s=n(1734),i=n(1689),a=Object.defineProperty;e.f=n(7057)?Object.defineProperty:function(t,e,n){if(r(t),e=i(e,!0),r(n),s)try{return a(t,e,n)}catch(t){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(t[e]=n.value),t}},5588:(t,e,n)=>{var r=n(9275),s=n(7007),i=n(7184);t.exports=n(7057)?Object.defineProperties:function(t,e){s(t);for(var n,a=i(e),o=a.length,l=0;o>l;)r.f(t,n=a[l++],e[n]);return t}},8693:(t,e,n)=>{var r=n(4682),s=n(681),i=n(2110),a=n(1689),o=n(9181),l=n(1734),u=Object.getOwnPropertyDescriptor;e.f=n(7057)?u:function(t,e){if(t=i(t),e=a(e,!0),l)try{return u(t,e)}catch(t){}if(o(t,e))return s(!r.f.call(t,e),t[e])}},616:(t,e,n)=>{var r=n(189),s=n(4430).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(t){return r(t,s)}},4548:(t,e)=>{e.f=Object.getOwnPropertySymbols},468:(t,e,n)=>{var r=n(9181),s=n(508),i=n(9335)("IE_PROTO"),a=Object.prototype;t.exports=Object.getPrototypeOf||function(t){return t=s(t),r(t,i)?t[i]:"function"==typeof t.constructor&&t instanceof t.constructor?t.constructor.prototype:t instanceof Object?a:null}},189:(t,e,n)=>{var r=n(9181),s=n(2110),i=n(9315)(!1),a=n(9335)("IE_PROTO");t.exports=function(t,e){var n,o=s(t),l=0,u=[];for(n in o)n!=a&&r(o,n)&&u.push(n);for(;e.length>l;)r(o,n=e[l++])&&(~i(u,n)||u.push(n));return u}},7184:(t,e,n)=>{var r=n(189),s=n(4430);t.exports=Object.keys||function(t){return r(t,s)}},4682:(t,e)=>{e.f={}.propertyIsEnumerable},7643:(t,e,n)=>{var r=n(616),s=n(4548),i=n(7007),a=n(3816).Reflect;t.exports=a&&a.ownKeys||function(t){var e=r.f(i(t)),n=s.f;return n?e.concat(n(t)):e}},6423:(t,e,n)=>{"use strict";var r=n(9313),s=n(7242),i=n(4963);t.exports=function(){for(var t=i(this),e=arguments.length,n=new Array(e),a=0,o=r._,l=!1;e>a;)(n[a]=arguments[a++])===o&&(l=!0);return function(){var r,i=this,a=arguments.length,u=0,c=0;if(!l&&!a)return s(t,n,i);if(r=n.slice(),l)for(;e>u;u++)r[u]===o&&(r[u]=arguments[c++]);for(;a>c;)r.push(arguments[c++]);return s(t,r,i)}}},9313:(t,e,n)=>{t.exports=n(3816)},681:t=>{t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},7234:(t,e,n)=>{var r=n(3816),s=n(7728),i=n(9181),a=n(3953)("src"),o=n(18),l="toString",u=(""+o).split(l);n(5645).inspectSource=function(t){return o.call(t)},(t.exports=function(t,e,n,o){var l="function"==typeof n;l&&(i(n,"name")||s(n,"name",e)),t[e]!==n&&(l&&(i(n,a)||s(n,a,t[e]?""+t[e]:u.join(String(e)))),t===r?t[e]=n:o?t[e]?t[e]=n:s(t,e,n):(delete t[e],s(t,e,n)))})(Function.prototype,l,(function(){return"function"==typeof this&&this[a]||o.call(this)}))},4398:t=>{t.exports=function(t,e){var n=e===Object(e)?function(t){return e[t]}:e;return function(e){return String(e).replace(t,n)}}},2943:(t,e,n)=>{var r=n(9275).f,s=n(9181),i=n(6314)("toStringTag");t.exports=function(t,e,n){t&&!s(t=n?t:t.prototype,i)&&r(t,i,{configurable:!0,value:e})}},9335:(t,e,n)=>{var r=n(3825)("keys"),s=n(3953);t.exports=function(t){return r[t]||(r[t]=s(t))}},3825:(t,e,n)=>{var r=n(5645),s=n(3816),i="__core-js_shared__",a=s[i]||(s[i]={});(t.exports=function(t,e){return a[t]||(a[t]=void 0!==e?e:{})})("versions",[]).push({version:r.version,mode:n(4461)?"pure":"global",copyright:"© 2020 Denis Pushkarev (zloirock.ru)"})},2337:(t,e,n)=>{var r=n(1467),s=Math.max,i=Math.min;t.exports=function(t,e){return(t=r(t))<0?s(t+e,0):i(t,e)}},1467:t=>{var e=Math.ceil,n=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(t>0?n:e)(t)}},2110:(t,e,n)=>{var r=n(9797),s=n(1355);t.exports=function(t){return r(s(t))}},875:(t,e,n)=>{var r=n(1467),s=Math.min;t.exports=function(t){return t>0?s(r(t),9007199254740991):0}},508:(t,e,n)=>{var r=n(1355);t.exports=function(t){return Object(r(t))}},1689:(t,e,n)=>{var r=n(5286);t.exports=function(t,e){if(!r(t))return t;var n,s;if(e&&"function"==typeof(n=t.toString)&&!r(s=n.call(t)))return s;if("function"==typeof(n=t.valueOf)&&!r(s=n.call(t)))return s;if(!e&&"function"==typeof(n=t.toString)&&!r(s=n.call(t)))return s;throw TypeError("Can't convert object to primitive value")}},3953:t=>{var e=0,n=Math.random();t.exports=function(t){return"Symbol(".concat(void 0===t?"":t,")_",(++e+n).toString(36))}},6314:(t,e,n)=>{var r=n(3825)("wks"),s=n(3953),i=n(3816).Symbol,a="function"==typeof i;(t.exports=function(t){return r[t]||(r[t]=a&&i[t]||(a?i:s)("Symbol."+t))}).store=r},5448:(t,e,n)=>{var r=n(3816),s=n(5645),i=n(2985),a=n(6423);i(i.G+i.F,{delay:function(t){return new(s.Promise||r.Promise)((function(e){setTimeout(a.call(e,!0),t)}))}})},1631:(t,e,n)=>{"use strict";var r=n(741),s=n(2985),i=n(681),a=n(5345),o=n(2503),l=n(468),u=n(7184),c=n(9275),h=n(5200),d=n(4963),p=n(3531),f=n(3530),m=n(9988),g=n(5436),y=n(5286),b=n(2110),x=n(7057),v=n(9181),w=function(t){var e=1==t,n=4==t;return function(s,i,a){var o,l,u,c=r(i,a,3),h=b(s),d=e||7==t||2==t?new("function"==typeof this?this:S):void 0;for(o in h)if(v(h,o)&&(u=c(l=h[o],o,s),t))if(e)d[o]=u;else if(u)switch(t){case 2:d[o]=l;break;case 3:return!0;case 5:return l;case 6:return o;case 7:d[u[0]]=u[1]}else if(n)return!1;return 3==t||n?n:d}},k=w(6),I=function(t){return function(e){return new C(e,t)}},C=function(t,e){this._t=b(t),this._a=u(t),this._i=0,this._k=e};function S(t){var e=o(null);return null!=t&&(f(t)?p(t,!0,(function(t,n){e[t]=n})):a(e,t)),e}m(C,"Dict",(function(){var t,e=this,n=e._t,r=e._a,s=e._k;do{if(e._i>=r.length)return e._t=void 0,g(1)}while(!v(n,t=r[e._i++]));return g(0,"keys"==s?t:"values"==s?n[t]:[t,n[t]])})),S.prototype=null,s(s.G+s.F,{Dict:S}),s(s.S,"Dict",{keys:I("keys"),values:I("values"),entries:I("entries"),forEach:w(0),map:w(1),filter:w(2),some:w(3),every:w(4),find:w(5),findKey:k,mapPairs:w(7),reduce:function(t,e,n){d(e);var r,s,i=b(t),a=u(i),o=a.length,l=0;if(arguments.length<3){if(!o)throw TypeError("Reduce of empty object with no initial value");r=i[a[l++]]}else r=Object(n);for(;o>l;)v(i,s=a[l++])&&(r=e(r,i[s],s,t));return r},keyOf:h,includes:function(t,e){return void 0!==(e==e?h(t,e):k(t,(function(t){return t!=t})))},has:v,get:function(t,e){if(v(t,e))return t[e]},set:function(t,e,n){return x&&e in Object?c.f(t,e,i(0,n)):t[e]=n,t},isDict:function(t){return y(t)&&l(t)===S.prototype}})},1262:(t,e,n)=>{var r=n(9313),s=n(2985);n(5645)._=r._=r._||{},s(s.P+s.F,"Function",{part:n(6423)})},9002:(t,e,n)=>{var r=n(1488),s=n(6314)("iterator"),i=n(2803);t.exports=n(5645).getIteratorMethod=function(t){if(null!=t)return t[s]||t["@@iterator"]||i[r(t)]}},975:(t,e,n)=>{var r=n(7007),s=n(9002);t.exports=n(5645).getIterator=function(t){var e=s(t);if("function"!=typeof e)throw TypeError(t+" is not iterable!");return r(e.call(t))}},3530:(t,e,n)=>{var r=n(1488),s=n(6314)("iterator"),i=n(2803);t.exports=n(5645).isIterable=function(t){var e=Object(t);return void 0!==e[s]||"@@iterator"in e||i.hasOwnProperty(r(e))}},2722:(t,e,n)=>{"use strict";n(2923)(Number,"Number",(function(t){this._l=+t,this._i=0}),(function(){var t=this._i++,e=!(t<this._l);return{done:e,value:e?void 0:t}}))},5808:(t,e,n)=>{var r=n(2985);r(r.S+r.F,"Object",{classof:n(1488)})},3876:(t,e,n)=>{var r=n(2985),s=n(3004);r(r.S+r.F,"Object",{define:s})},9006:(t,e,n)=>{var r=n(2985);r(r.S+r.F,"Object",{isObject:n(5286)})},8190:(t,e,n)=>{var r=n(2985),s=n(3004),i=n(2503);r(r.S+r.F,"Object",{make:function(t,e){return s(i(t),e)}})},1761:(t,e,n)=>{var r=n(2985),s=n(4398)(/[\\^$*+?.()|[\]{}]/g,"\\$&");r(r.S,"RegExp",{escape:function(t){return s(t)}})},7354:(t,e,n)=>{"use strict";var r=n(2985),s=n(4398)(/[&<>"']/g,{"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&apos;"});r(r.P+r.F,"String",{escapeHTML:function(){return s(this)}})},3097:(t,e,n)=>{"use strict";var r=n(2985),s=n(4398)(/&(?:amp|lt|gt|quot|apos);/g,{"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&apos;":"'"});r(r.P+r.F,"String",{unescapeHTML:function(){return s(this)}})},5666:t=>{var e=function(t){"use strict";var e,n=Object.prototype,r=n.hasOwnProperty,s="function"==typeof Symbol?Symbol:{},i=s.iterator||"@@iterator",a=s.asyncIterator||"@@asyncIterator",o=s.toStringTag||"@@toStringTag";function l(t,e,n){return Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{l({},"")}catch(t){l=function(t,e,n){return t[e]=n}}function u(t,e,n,r){var s=e&&e.prototype instanceof g?e:g,i=Object.create(s.prototype),a=new N(r||[]);return i._invoke=function(t,e,n){var r=h;return function(s,i){if(r===p)throw new Error("Generator is already running");if(r===f){if("throw"===s)throw i;return T()}for(n.method=s,n.arg=i;;){var a=n.delegate;if(a){var o=S(a,n);if(o){if(o===m)continue;return o}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(r===h)throw r=f,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r=p;var l=c(t,e,n);if("normal"===l.type){if(r=n.done?f:d,l.arg===m)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(r=f,n.method="throw",n.arg=l.arg)}}}(t,n,a),i}function c(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}t.wrap=u;var h="suspendedStart",d="suspendedYield",p="executing",f="completed",m={};function g(){}function y(){}function b(){}var x={};x[i]=function(){return this};var v=Object.getPrototypeOf,w=v&&v(v(R([])));w&&w!==n&&r.call(w,i)&&(x=w);var k=b.prototype=g.prototype=Object.create(x);function I(t){["next","throw","return"].forEach((function(e){l(t,e,(function(t){return this._invoke(e,t)}))}))}function C(t,e){function n(s,i,a,o){var l=c(t[s],t,i);if("throw"!==l.type){var u=l.arg,h=u.value;return h&&"object"==typeof h&&r.call(h,"__await")?e.resolve(h.__await).then((function(t){n("next",t,a,o)}),(function(t){n("throw",t,a,o)})):e.resolve(h).then((function(t){u.value=t,a(u)}),(function(t){return n("throw",t,a,o)}))}o(l.arg)}var s;this._invoke=function(t,r){function i(){return new e((function(e,s){n(t,r,e,s)}))}return s=s?s.then(i,i):i()}}function S(t,n){var r=t.iterator[n.method];if(r===e){if(n.delegate=null,"throw"===n.method){if(t.iterator.return&&(n.method="return",n.arg=e,S(t,n),"throw"===n.method))return m;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return m}var s=c(r,t.iterator,n.arg);if("throw"===s.type)return n.method="throw",n.arg=s.arg,n.delegate=null,m;var i=s.arg;return i?i.done?(n[t.resultName]=i.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,m):i:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,m)}function E(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function $(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function N(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(E,this),this.reset(!0)}function R(t){if(t){var n=t[i];if(n)return n.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var s=-1,a=function n(){for(;++s<t.length;)if(r.call(t,s))return n.value=t[s],n.done=!1,n;return n.value=e,n.done=!0,n};return a.next=a}}return{next:T}}function T(){return{value:e,done:!0}}return y.prototype=k.constructor=b,b.constructor=y,y.displayName=l(b,o,"GeneratorFunction"),t.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===y||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,b):(t.__proto__=b,l(t,o,"GeneratorFunction")),t.prototype=Object.create(k),t},t.awrap=function(t){return{__await:t}},I(C.prototype),C.prototype[a]=function(){return this},t.AsyncIterator=C,t.async=function(e,n,r,s,i){void 0===i&&(i=Promise);var a=new C(u(e,n,r,s),i);return t.isGeneratorFunction(n)?a:a.next().then((function(t){return t.done?t.value:a.next()}))},I(k),l(k,o,"Generator"),k[i]=function(){return this},k.toString=function(){return"[object Generator]"},t.keys=function(t){var e=[];for(var n in t)e.push(n);return e.reverse(),function n(){for(;e.length;){var r=e.pop();if(r in t)return n.value=r,n.done=!1,n}return n.done=!0,n}},t.values=R,N.prototype={constructor:N,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach($),!t)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function s(r,s){return o.type="throw",o.arg=t,n.next=r,s&&(n.method="next",n.arg=e),!!s}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],o=a.completion;if("root"===a.tryLoc)return s("end");if(a.tryLoc<=this.prev){var l=r.call(a,"catchLoc"),u=r.call(a,"finallyLoc");if(l&&u){if(this.prev<a.catchLoc)return s(a.catchLoc,!0);if(this.prev<a.finallyLoc)return s(a.finallyLoc)}else if(l){if(this.prev<a.catchLoc)return s(a.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return s(a.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var s=this.tryEntries[n];if(s.tryLoc<=this.prev&&r.call(s,"finallyLoc")&&this.prev<s.finallyLoc){var i=s;break}}i&&("break"===t||"continue"===t)&&i.tryLoc<=e&&e<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=t,a.arg=e,i?(this.method="next",this.next=i.finallyLoc,m):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),m},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),$(n),m}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var r=n.completion;if("throw"===r.type){var s=r.arg;$(n)}return s}}throw new Error("illegal catch attempt")},delegateYield:function(t,n,r){return this.delegate={iterator:R(t),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=e),m}},t}(t.exports);try{regeneratorRuntime=e}catch(t){Function("r","regeneratorRuntime = r")(e)}},6377:(t,e,n)=>{var r=n(4832),s=n(8652),i=n(801),a=n(2030),o=n(3618),l=n(9049),u=n(1971);u.alea=r,u.xor128=s,u.xorwow=i,u.xorshift7=a,u.xor4096=o,u.tychei=l,t.exports=u},4832:function(t,e,n){var r;!function(t,s,i){function a(t){var e,n=this,r=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function l(t,e){var n=new a(t),r=e&&e.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.alea=l}(0,t=n.nmd(t),n.amdD)},9049:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.tychei=l}(0,t=n.nmd(t),n.amdD)},8652:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xor128=l}(0,t=n.nmd(t),n.amdD)},3618:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this;e.next=function(){var t,n,r=e.w,s=e.X,i=e.i;return e.w=r=r+1640531527|0,n=s[i+34&127],t=s[i=i+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=s[i]=n^t,e.i=i,n+(r^r>>>16)|0},function(t,e){var n,r,s,i,a,o=[],l=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,l=Math.max(l,e.length)),s=0,i=-32;i<l;++i)e&&(r^=e.charCodeAt((i+32)%e.length)),0===i&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(a=a+1640531527|0,s=0==(n=o[127&i]^=r+a)?s+1:0);for(s>=128&&(o[127&(e&&e.length||0)]=-1),s=127,i=512;i>0;--i)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;t.w=a,t.X=o,t.i=s}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xor4096=l}(0,t=n.nmd(t),n.amdD)},2030:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this;e.next=function(){var t,n,r=e.x,s=e.i;return t=r[s],n=(t^=t>>>7)^t<<24,n^=(t=r[s+1&7])^t>>>10,n^=(t=r[s+3&7])^t>>>3,n^=(t=r[s+4&7])^t<<7,t=r[s+7&7],n^=(t^=t<<13)^t<<9,r[s]=n,e.i=s+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xorshift7=l}(0,t=n.nmd(t),n.amdD)},801:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xorwow=l}(0,t=n.nmd(t),n.amdD)},1971:(t,e,n)=>{var r;!function(s,i){var a,o=this,l=256,u=i.pow(l,6),c=i.pow(2,52),h=2*c,d=255;function p(t,e,n){var r=[],d=y(g((e=1==e?{entropy:!0}:e||{}).entropy?[t,b(s)]:null==t?function(){try{var t;return a&&(t=a.randomBytes)?t=t(l):(t=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(t)),b(t)}catch(t){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,b(s)]}}():t,3),r),p=new f(r),x=function(){for(var t=p.g(6),e=u,n=0;t<c;)t=(t+n)*l,e*=l,n=p.g(1);for(;t>=h;)t/=2,e/=2,n>>>=1;return(t+n)/e};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,y(b(p.S),s),(e.pass||n||function(t,e,n,r){return r&&(r.S&&m(r,p),t.state=function(){return m(p,{})}),n?(i.random=t,e):t})(x,d,"global"in e?e.global:this==i,e.state)}function f(t){var e,n=t.length,r=this,s=0,i=r.i=r.j=0,a=r.S=[];for(n||(t=[n++]);s<l;)a[s]=s++;for(s=0;s<l;s++)a[s]=a[i=d&i+t[s%n]+(e=a[s])],a[i]=e;(r.g=function(t){for(var e,n=0,s=r.i,i=r.j,a=r.S;t--;)e=a[s=d&s+1],n=n*l+a[d&(a[s]=a[i=d&i+e])+(a[i]=e)];return r.i=s,r.j=i,n})(l)}function m(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function g(t,e){var n,r=[],s=typeof t;if(e&&"object"==s)for(n in t)try{r.push(g(t[n],e-1))}catch(t){}return r.length?r:"string"==s?t:t+"\0"}function y(t,e){for(var n,r=t+"",s=0;s<r.length;)e[d&s]=d&(n^=19*e[d&s])+r.charCodeAt(s++);return b(e)}function b(t){return String.fromCharCode.apply(0,t)}if(i.seedrandom=p,y(i.random(),s),t.exports){t.exports=p;try{a=n(3906)}catch(t){}}else void 0===(r=function(){return p}.call(e,n,e,t))||(t.exports=r)}([],Math)},3906:()=>{},2993:()=>{},8352:()=>{},4589:()=>{},1758:()=>{}},e={};function n(r){if(e[r])return e[r].exports;var s=e[r]={id:r,loaded:!1,exports:{}};return t[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.nmd=t=>(t.paths=[],t.children||(t.children=[]),t),(()=>{"use strict";var t={};n.r(t),n.d(t,{assertParamsValid:()=>Xr,computeFlatOffset:()=>ls,computeOutShape:()=>Jr,getNormalizedAxes:()=>es,isSliceContinous:()=>os,maskToAxes:()=>Yr,parseSliceParams:()=>us,startForAxis:()=>is,startIndicesWithElidedDims:()=>ns,stopForAxis:()=>as,stopIndicesWithElidedDims:()=>rs,stridesForAxis:()=>ss,stridesWithElidedDims:()=>Zr});var e={};n.r(e),n.d(e,{collectGatherOpShapeInfo:()=>Mi,computeOutShape:()=>Oi,segOpComputeOptimalWindowSize:()=>_i});var r={};n.r(r),n.d(r,{ERF_A1:()=>al,ERF_A2:()=>ol,ERF_A3:()=>ll,ERF_A4:()=>ul,ERF_A5:()=>cl,ERF_P:()=>il,PARALLELIZE_THRESHOLD:()=>Fi,SELU_SCALE:()=>sl,SELU_SCALEALPHA:()=>rl,applyActivation:()=>eo,assertAndGetBroadcastShape:()=>Ci,assertAxesAreInnerMostDims:()=>Ts,assertParamsConsistent:()=>ai,assignToTypedArray:()=>bl,axesAreInnerMostDims:()=>Es,calculateShapes:()=>nl,castTensor:()=>wl,combineLocations:()=>$s,complexWithEvenIndex:()=>ml,complexWithOddIndex:()=>gl,computeConv2DInfo:()=>Us,computeConv3DInfo:()=>Vs,computeDefaultPad:()=>Gs,computeDilation2DInfo:()=>Bs,computeOptimalWindowSize:()=>Di,computeOutAndReduceShapes:()=>Ns,computeOutShape:()=>oi,computePool2DInfo:()=>Ps,computePool3DInfo:()=>Ws,convertConv2DDataFormat:()=>Js,eitherStridesOrDilationsAreOne:()=>Ys,expandShapeToKeepDim:()=>Rs,exponent:()=>vl,exponents:()=>xl,getAxesPermutation:()=>As,getBroadcastDims:()=>ki,getComplexWithIndex:()=>yl,getFusedBiasGradient:()=>to,getFusedDyActivation:()=>Qa,getImageCenter:()=>qo,getInnerMostAxes:()=>Ds,getPermuted:()=>Xo,getReductionAxes:()=>Ii,getReshaped:()=>Ko,getReshapedPermuted:()=>Yo,getSliceBeginCoords:()=>Jo,getSliceSize:()=>Zo,getUndoAxesPermutation:()=>Fs,linspaceImpl:()=>Il,log:()=>dl,mergeRealAndImagArrays:()=>pl,prepareAndValidate:()=>Qo,prepareSplitSize:()=>Fa,reshapeTensor:()=>kl,segment_util:()=>e,shouldFuse:()=>no,slice_util:()=>t,splitRealAndImagArrays:()=>fl,tupleValuesAreOne:()=>Xs,upcastType:()=>Mn,validateInput:()=>el,validateUpdateShape:()=>tl,warn:()=>hl});var s={};n.r(s),n.d(s,{addImpl:()=>Xy,ceilImpl:()=>Cb,expImpl:()=>lx,expm1Impl:()=>hx,floorImpl:()=>Ax,logImpl:()=>Vx,maxImpl:()=>Yx,multiplyImpl:()=>fx,notEqualImpl:()=>ov,rsqrtImpl:()=>gv,simpleAbsImpl:()=>sb,sliceImpl:()=>bx,squaredDifferenceImpl:()=>Pv,subImpl:()=>wx,transposeImpl:()=>Jx,uniqueImpl:()=>Kv}),n(6307),n(5666);class i{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class a{time(t){return o("time")}read(t){return o("read")}readSync(t){return o("readSync")}numDataIds(){return o("numDataIds")}disposeData(t){return o("disposeData")}write(t,e,n){return o("write")}move(t,e,n,r){return o("move")}memory(){return o("memory")}floatPrecision(){return o("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(t,e,n,r){return o("batchMatMul")}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:s,activation:i,preluActivationWeights:a}){return o("fusedBatchMatMul")}slice(t,e,n){return o("slice")}stridedSlice(t,e,n,r){return o("stridedSlice")}unstack(t,e){return o("unstack")}reverse(t,e){return o("reverse")}concat(t,e){return o("concat")}neg(t){return o("neg")}add(t,e){return o("add")}addN(t){return o("addN")}subtract(t,e){return o("subtract")}multiply(t,e){return o("multiply")}realDivide(t,e){return o("realDivide")}floorDiv(t,e){return o("floorDiv")}sum(t,e){return o("sum")}prod(t,e){return o("prod")}unsortedSegmentSum(t,e,n){return o("unsortedSegmentSum")}argMin(t,e){return o("argMin")}argMax(t,e){return o("argMax")}equal(t,e){return o("equal")}notEqual(t,e){return o("notEqual")}less(t,e){return o("less")}lessEqual(t,e){return o("lessEqual")}greater(t,e){return o("greater")}greaterEqual(t,e){return o("greaterEqual")}logicalNot(t){return o("logicalNot")}logicalAnd(t,e){return o("logicalAnd")}logicalOr(t,e){return o("logicalOr")}where(t){return o("where")}select(t,e,n){return o("select")}topk(t,e,n){return o("topk")}min(t,e){return o("min")}minimum(t,e){return o("minimum")}mod(t,e){return o("mod")}max(t,e){return o("max")}maximum(t,e){return o("maximum")}all(t,e){return o("all")}any(t,e){return o("any")}squaredDifference(t,e){return o("squaredDifference")}ceil(t){return o("ceil")}floor(t){return o("floor")}round(t){return o("round")}sign(t){return o("sign")}isNaN(t){return o("isNaN")}isInf(t){return o("isInf")}isFinite(t){return o("isFinite")}pow(t,e){return o("pow")}exp(t){return o("exp")}expm1(t){return o("expm1")}softmax(t,e){return o("softmax")}log(t){return o("log")}log1p(t){return o("log1p")}sqrt(t){return o("sqrt")}rsqrt(t){return o("rsqrt")}square(t){return o("square")}reciprocal(t){return o("reciprocal")}relu(t){return o("relu")}relu6(t){return o("relu6")}prelu(t,e){return o("prelu")}elu(t){return o("elu")}eluDer(t,e){return o("eluDer")}selu(t){return o("selu")}int(t){return o("int")}clip(t,e,n){return o("clip")}abs(t){return o("abs")}complexAbs(t){return o("complexAbs")}sigmoid(t){return o("sigmoid")}softplus(t){return o("softplus")}sin(t){return o("sin")}cos(t){return o("cos")}tan(t){return o("tan")}asin(t){return o("asin")}acos(t){return o("acos")}atan(t){return o("atan")}atan2(t,e){return o("atan2")}sinh(t){return o("sinh")}cosh(t){return o("cosh")}tanh(t){return o("tanh")}asinh(t){return o("asinh")}acosh(t){return o("acosh")}atanh(t){return o("atanh")}erf(t){return o("erf")}step(t,e){return o("step")}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){return o("fusedConv2d")}conv2d(t,e,n){return o("conv2d")}conv2dDerInput(t,e,n){return o("conv2dDerInput")}conv2dDerFilter(t,e,n){return o("conv2dDerFilter")}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){return o("fusedDepthwiseConv2D")}depthwiseConv2D(t,e,n){return o("depthwiseConv2D")}depthwiseConv2DDerInput(t,e,n){return o("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,n){return o("depthwiseConv2DDerFilter")}conv3d(t,e,n){return o("conv3d")}conv3dDerInput(t,e,n){return o("conv3dDerInput")}conv3dDerFilter(t,e,n){return o("conv3dDerFilter")}maxPool(t,e){return o("maxPool")}maxPoolBackprop(t,e,n,r){return o("maxPoolBackprop")}avgPool(t,e){return o("avgPool")}avgPoolBackprop(t,e,n){return o("avgPoolBackprop")}avgPool3d(t,e){return o("avgPool3d")}avgPool3dBackprop(t,e,n){return o("avgPool3dBackprop")}maxPool3d(t,e){return o("maxPool3d")}maxPool3dBackprop(t,e,n,r){return o("maxPool3dBackprop")}reshape(t,e){return o("reshape")}cast(t,e){return o("cast")}tile(t,e){return o("tile")}pad(t,e,n){return o("pad")}transpose(t,e){return o("transpose")}gather(t,e,n){return o("gather")}gatherND(t,e){return o("gatherND")}scatterND(t,e,n){return o("scatterND")}batchToSpaceND(t,e,n){return o("batchToSpaceND")}spaceToBatchND(t,e,n){return o("spaceToBatchND")}resizeBilinear(t,e,n,r){return o("resizeBilinear")}resizeBilinearBackprop(t,e,n){return o("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,n,r){return o("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,n){return o("resizeNearestNeighborBackprop")}batchNorm(t,e,n,r,s,i){return o("batchNorm")}localResponseNormalization4D(t,e,n,r,s){return o("localResponseNormalization4D")}LRNGrad(t,e,n,r,s,i,a){return o("LRNGrad")}multinomial(t,e,n,r){return o("multinomial")}oneHot(t,e,n,r){return o("oneHot")}cumsum(t,e,n,r){return o("cumsum")}nonMaxSuppression(t,e,n,r,s){return o("nonMaxSuppression")}fft(t){return o("fft")}ifft(t){return o("ifft")}complex(t,e){return o("complex")}real(t){return o("real")}imag(t){return o("imag")}cropAndResize(t,e,n,r,s,i){return o("cropAndResize")}depthToSpace(t,e,n){return o("depthToSpace")}split(t,e,n){return o("split")}sparseToDense(t,e,n,r){return o("sparseToDense")}diag(t){return o("diag")}fill(t,e,n){return o("fill")}onesLike(t){return o("onesLike")}zerosLike(t){return o("zerosLike")}linspace(t,e,n){return o("linspace")}dispose(){return o("dispose")}}function o(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function l(t){let e=t.length,n=0,r=0;for(;e>0;)r=Math.random()*e|0,e--,n=t[e],t[e]=t[r],t[r]=n}function u(t,e,n){return Math.max(t,Math.min(e,n))}function c(t){return t%2==0?t:t+1}function h(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function d(t,e,n=""){h(g(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}function p(t){h(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function f(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||$(t)&&!n)for(let r=0;r<t.length;++r)f(t[r],e,n);else e.push(t);return e}function m(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function g(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function y(t){return t%1==0}function b(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function x(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function v(t,e=(t=>0),n){return new Promise(((r,s)=>{let i=0;const a=()=>{if(t())return void r();i++;const o=e(i);null!=n&&i>=n?s():setTimeout(a,o)};a()}))}function w(t,e){let n=1,r=-1;for(let e=0;e<t.length;++e)if(t[e]>=0)n*=t[e];else if(-1===t[e]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${e}`);r=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const s=t.slice();return s[r]=e/n,s}function k(t,e){const n=e.length;return h((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+t)),h(t.every((t=>y(t))),(()=>"All values in axis param must be integers but got axis "+t)),t.map((t=>t<0?n+t:t))}function I(t,e){const n=[],r=[],s=null!=e&&Array.isArray(e)&&0===e.length,i=null==e||s?null:k(e,t).sort();let a=0;for(let e=0;e<t.length;++e){if(null!=i){if(i[a]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==i[a]||i[a]>e)&&1===t[e]&&(n.push(t[e]),r.push(e)),i[a]<=e&&a++}1!==t[e]&&(n.push(t[e]),r.push(e))}return{newShape:n,keptDims:r}}function C(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error("Unknown data type "+t);n=new Uint8Array(e)}return n}function S(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error("Unknown data type "+t);n=new Array(e)}return n}function E(t,e){return!("complex64"===e||"float32"===e&&"complex64"!==t||"int32"===e&&"float32"!==t&&"complex64"!==t||"bool"===e&&"bool"===t)}function $(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function N(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error("Unknown dtype "+t)}function R(t){return"string"==typeof t||t instanceof String}function T(t){return"number"==typeof t}function A(t){return Array.isArray(t)?A(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":T(t)?"float32":R(t)?"string":"boolean"==typeof t?"bool":"float32"}function F(t){return!!(t&&t.constructor&&t.call&&t.apply)}function D(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function _(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function O(t,e,n){const r=new Array;if(1===e.length){const s=e[0];for(let e=0;e<s;e++)r[e]=n[t+e]}else{const s=e[0],i=e.slice(1),a=i.reduce(((t,e)=>t*e));for(let e=0;e<s;e++)r[e]=O(t+e*a,i,n)}return r}function M(t,e){if(0===t.length)return e[0];const n=t.reduce(((t,e)=>t*e));if(0===n)return[];if(n!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}.`);return O(0,t,e)}function L(t,e){const n=z(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function z(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error("Unknown data type "+e)}function B(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return M(t,new Float32Array(n));if("int32"===e)return M(t,new Int32Array(n));if("bool"===e)return M(t,new Uint8Array(n));throw new Error("Unknown data type "+e)}function P(t){t.forEach((e=>{h(Number.isInteger(e)&&e>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`))}))}function W(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let e=0;e<t.length-1;++e)r+=n[e]*t[e];return r}function U(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let e=0;e<r.length-1;++e)r[e]=Math.floor(t/n[e]),t-=r[e]*n[e];return r[r.length-1]=t,r}function V(t){return t&&t.then&&"function"==typeof t.then}class G{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(V(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")))),e}(this.global.location.search);"tfjsflags"in t&&t.tfjsflags.split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)}))}}function H(){return q}let j,q=null;function K(){if(null==j){let t;if("undefined"!=typeof window)t=window;else if(void 0!==n.g)t=n.g;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}j=t}return j}function X(t,e){const n=function(){const t=K();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}const Y="Abs",J="Acos",Z="Acosh",Q="Add",tt="ArgMax",et="ArgMin",nt="Asin",rt="Asinh",st="Atan",it="Atanh",at="Atan2",ot="AvgPool",lt="AvgPoolBackprop",ut="AvgPool3D",ct="BatchMatMul",ht="BatchToSpaceND",dt="BroadcastTo",pt="Cast",ft="Ceil",mt="ClipByValue",gt="Complex",yt="Concat",bt="Conv2D",xt="Conv2DBackpropFilter",vt="Conv2DBackpropInput",wt="Conv3D",kt="Conv3DBackpropFilterV2",It="Conv3DBackpropInputV2",Ct="Cos",St="Cosh",Et="Cumsum",$t="DepthwiseConv2dNative",Nt="DepthwiseConv2dNativeBackpropFilter",Rt="DepthwiseConv2dNativeBackpropInput",Tt="Dilation2D",At="Dilation2DBackpropInput",Ft="Dilation2DBackpropFilter",Dt="Div",_t="Elu",Ot="Erf",Mt="Exp",Lt="Expm1",zt="FFT",Bt="Fill",Pt="FlipLeftRight",Wt="Floor",Ut="FloorDiv",Vt="FusedBatchNorm",Gt="GatherV2",Ht="GreaterEqual",jt="Identity",qt="IFFT",Kt="Imag",Xt="IsFinite",Yt="IsInf",Jt="IsNan",Zt="Log",Qt="Log1p",te="LogicalNot",ee="LogSoftmax",ne="Max",re="Maximum",se="MaxPool",ie="MaxPoolBackprop",ae="MaxPool3D",oe="MaxPoolWithArgmax",le="Mean",ue="Minimum",ce="MirrorPad",he="Multiply",de="Negate",pe="NotEqual",fe="NonMaxSuppressionV3",me="NonMaxSuppressionV4",ge="NonMaxSuppressionV5",ye="OnesLike",be="OneHot",xe="PadV2",ve="Prelu",we="Real",ke="Reciprocal",Ie="Relu",Ce="Reshape",Se="ResizeNearestNeighbor",Ee="ResizeBilinear",$e="Relu6",Ne="Reverse",Re="Round",Te="Rsqrt",Ae="SelectV2",Fe="Selu",De="Slice",_e="Sin",Oe="Sinh",Me="Sign",Le="Sigmoid",ze="Softplus",Be="Sqrt",Pe="SpaceToBatchND",We="SplitV",Ue="Softmax",Ve="SquaredDifference",Ge="Square",He="Sub",je="Tan",qe="Tanh",Ke="Tile",Xe="Transpose",Ye="Unique",Je="Unpack",Ze="UnsortedSegmentSum",Qe="ZerosLike",tn="Step",en="RotateWithOffset",nn="_FusedMatMul",rn="FusedConv2D",sn=X("kernelRegistry",(()=>new Map)),an=X("gradRegistry",(()=>new Map));function on(t){return an.get(t)}function ln(t){const e=sn.entries(),n=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[i,a]=s,[o]=i.split("_");o===t&&n.push(a)}return n}function un(t){const{kernelName:e,backendName:n}=t,r=hn(e,n);sn.has(r)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),sn.set(r,t)}function cn(t){const{kernelName:e}=t;an.has(e)&&H().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),an.set(e,t)}function hn(t,e){return`${e}_${t}`}class dn{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new fn)}profileKernel(t,e,n){let r;const s=this.backendTimer.time((()=>{r=n()}));for(let e=0;e<r.length;e++){const n=r[e];n.data().then((e=>{pn(e,n.dtype,t)}))}return{kernelName:t,outputs:r,inputs:e,timeMs:s.then((t=>t.kernelMs)),extraInfo:s.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:s,extraInfo:i}=t;n.forEach((t=>{Promise.all([t.data(),r,i]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],s,n[2])}))}))}}function pn(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const r=t[e];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class fn{logKernelProfile(t,e,n,r,s,i){const a="number"==typeof r?x(r+"ms",9):r.error,o=x(t,25),l=e.rank,u=e.size,c=x(e.shape.toString(),14);let h="";for(const t in s){const n=s[t];if(null!=n){const r=n.shape||e.shape,s=r.length;h+=`${t}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${a}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function mn(t,e,n,r){const s=_(e),i=function(t,e,n,r){const s=m(e),i=r[r.length-1],a=new Array(i).fill(0),o=e.length,l="complex64"===n?xn(t):t;if(o>1)for(let t=0;t<s/i;t++){const e=t*i;for(let t=0;t<i;t++)a[t]=Math.max(a[t],gn(l[e+t],0,n).length)}return a}(t,e,n,s),a=e.length,o=bn(t,e,n,s,i),l=["Tensor"];return r&&(l.push("  dtype: "+n),l.push("  rank: "+a),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(o.map((t=>"    "+t)).join("\n")),l.join("\n")}function gn(t,e,n){let r;return r=Array.isArray(t)?parseFloat(t[0].toFixed(7))+" + "+parseFloat(t[1].toFixed(7))+"j":R(t)?`'${t}'`:"bool"===n?yn(t):parseFloat(t.toFixed(7)).toString(),x(r,e)}function yn(t){return 0===t?"false":"true"}function bn(t,e,n,r,s,i=!0){const a="complex64"===n?2:1,o=e[0],l=e.length;if(0===l)return"complex64"===n?[gn(xn(t)[0],0,n)]:"bool"===n?[yn(t[0])]:[t[0].toString()];if(1===l){if(o>20){const e=3*a;let r=Array.from(t.slice(0,e)),i=Array.from(t.slice((o-3)*a,o*a));return"complex64"===n&&(r=xn(r),i=xn(i)),["["+r.map(((t,e)=>gn(t,s[e],n))).join(", ")+", ..., "+i.map(((t,e)=>gn(t,s[o-3+e],n))).join(", ")+"]"]}return["["+("complex64"===n?xn(t):Array.from(t)).map(((t,e)=>gn(t,s[e],n))).join(", ")+"]"]}const u=e.slice(1),c=r.slice(1),h=r[0]*a,d=[];if(o>20){for(let e=0;e<3;e++){const r=e*h,i=r+h;d.push(...bn(t.slice(r,i),u,n,c,s,!1))}d.push("...");for(let e=o-3;e<o;e++){const r=e*h,i=r+h;d.push(...bn(t.slice(r,i),u,n,c,s,e===o-1))}}else for(let e=0;e<o;e++){const r=e*h,i=r+h;d.push(...bn(t.slice(r,i),u,n,c,s,e===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let t=1;t<d.length-1;t++)d[t]=" "+d[t]+p;let f=",\n";for(let t=2;t<l;t++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function xn(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}function vn(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=f(t)),H().getBool("DEBUG")&&function(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error("Unknown data type "+e)}function wn(){return H().platform.now()}function kn(t,e="utf-8"){return e=e||"utf-8",H().platform.encode(t,e)}function In(t,e="utf-8"){return e=e||"utf-8",H().platform.decode(t,e)}class Cn{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=m(t),null!=n){const t=n.length;h(t===this.size,(()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||S(e,this.size),this.strides=_(t)}set(t,...e){0===e.length&&(e=[0]),h(e.length===this.rank,(()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=`+this.shape;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Sn().makeTensor(this.values,this.shape,this.dtype)}}let Sn=null,En=null,$n=null;class Nn{constructor(t,e,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=m(t),this.strides=_(t),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return En.buffer(this.shape,this.dtype,t)}bufferSync(){return En.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return M(this.shape,t)}arraySync(){return M(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=Sn().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map((t=>In(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=Sn().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>In(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Sn().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(Sn().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return En.print(this,t)}clone(){return this.throwIfDisposed(),En.clone(this)}toString(t=!1){return mn(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),En.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),Sn().makeVariable(this,t,e,n)}}Object.defineProperty(Nn,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed});class Rn extends Nn{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!g(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Sn().disposeTensor(this),this.dataId=t.dataId,Sn().incRef(this,null)}dispose(){Sn().disposeVariable(this),this.isDisposedInternal=!0}}var Tn,An,Fn,Dn,_n;Object.defineProperty(Rn,Symbol.hasInstance,{value:t=>t instanceof Nn&&null!=t.assign&&t.assign instanceof Function}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(Tn||(Tn={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(An||(An={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(Fn||(Fn={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(Dn||(Dn={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(_n||(_n={}));const On={float32:Dn,int32:An,bool:Fn,complex64:_n};function Mn(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return On[t][e]}function Ln(t){return Mn(t,"int32")}function zn(t,e){if(t.dtype===e.dtype)return[t,e];const n=Mn(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function Bn(t,e){return e.some((e=>e.id===t.id))}function Pn(t){const e=[];return Wn(t,e,new Set),e}function Wn(t,e,n){if(null==t)return;if(t instanceof Nn)return void e.push(t);if(r=t,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=t;for(const t in s){const r=s[t];n.has(r)||(n.add(r),Wn(r,e,n))}}class Un{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class Vn{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Un}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(t+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new dn(this.backendInstance),!0}setupRegisteredKernels(){ln(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){ln(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof a||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,r=n.then((n=>!(e<this.pendingBackendInitId||(this.registry[t]=n,this.pendingBackendInit=null,0)))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(e){return console.warn(`Initialization of backend ${t} failed`),console.warn(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(t+" backend not found in registry");this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,s=this.readSync(e);r.disposeData(e),n.backend=t,t.move(e,s,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return Vn.nextTensorId++}nextVariableId(){return Vn.nextVariableId++}clone(t){const e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e="float32",n={x:t},r={dtype:e};return Hn.runKernelFunc((n=>n.cast(t,e)),n,null,pt,r)}})),[],{}),e}runKernel(t,e,n,r,s){return this.runKernelFunc(null,e,null,t,n,r,s)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let s=0;n.forEach((t=>{s+="complex64"===t.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-e-s-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t,e,n,r,s,i,a){let o,l=[];const u=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const c=this.state.numBytes,h=this.state.numTensors;let d;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const p=function(t,e){const n=hn(t,e);return sn.get(n)}(r,this.backendName);let f,m;if(null!=p)d=()=>{const t=this.backend.numDataIds();f=p.kernelFunc({inputs:e,attrs:s,backend:this.backend});const n=Array.isArray(f)?f:[f];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,t,n);const o=n.map((({dataId:t,shape:e,dtype:n})=>this.makeTensorFromDataId(t,e,n)));if(u){let t=this.getTensorsForGradient(r,e,o);if(null==t){null==a&&(a=[]);const e=o.filter(((t,e)=>a[e]));t=(i||[]).slice().concat(e)}l=this.saveTensorsForBackwardMode(t)}return o};else{const e=t=>{u&&(l=t.map((t=>this.keep(this.clone(t)))))};d=()=>{const n=this.backend.numDataIds();f=this.tidy((()=>t(this.backend,e)));const s=Array.isArray(f)?f:[f];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,s),s}}return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(m=this.profiler.profileKernel(r,e,(()=>d())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(m),o=m.outputs):o=d()})),u&&this.addTapeNode(r,e,o,n,l,s),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-c,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-h,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map((t=>null!=e[t]?e[t].shape:null)),outputShapes:o.map((t=>t.shape)),kernelTimeMs:m.timeMs,extraInfo:m.extraInfo}),Array.isArray(f)?o:o[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const r=on(t);if(null!=r){const t=r.inputsToSave||[],s=r.outputsToSave||[];let i;r.saveAllInputs?(h(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(e).map((t=>e[t]))):i=t.map((t=>e[t]));const a=n.filter(((t,e)=>s[e]));return i.concat(a)}return null}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=t;"string"===n&&R(t[0])&&(s=t.map((t=>kn(t))));const i=r.write(s,e,n),a=new Nn(e,n,i,this.nextTensorId());if(this.incRef(a,r),"string"===n){const t=this.state.tensorInfo.get(i),e=function(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}(s);this.state.numBytes+=e-t.bytes,t.bytes=e}return a}makeTensorFromDataId(t,e,n,r){const s=new Nn(e,n=n||"float32",t,this.nextTensorId());return this.incRef(s,r),s}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const s=new Rn(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}incRef(t,e){const n=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*N(t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof Rn||this.track(t)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;this.state.numTensors--,"string"===t.dtype&&this.state.numStringTensors--;const e=this.state.tensorInfo.get(t.dataId);e.refCount<=1?("complex64"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):this.state.tensorInfo.get(t.dataId).refCount--}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,s,i){const a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},o=on(t);null!=o&&(r=o.gradFunc),null!=r&&(a.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],r=z(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t})),r(t.length>1?t:t[0],s,i))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Pn(t),n=new Set(e.map((t=>t.id)));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==r.id||this.track(t)}))}gradients(t,e,n,r=!1){if(h(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));h(s instanceof Nn,(()=>"The result y returned by f() must be a tensor."));const i=function(t,e,n){const r={},s={};for(let t=0;t<e.length;t++)r[e[t].id]=!0;for(let n=0;n<t.length;n++){const i=t[n],a=i.inputs;for(const t in a){const n=a[t];let o=!1;for(let t=0;t<e.length;t++)if(r[n.id]){i.outputs.forEach((t=>r[t.id]=!0)),o=!0,s[i.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const a={};for(let e=t.length-1;e>=0;e--){const n=t[e],r=n.inputs;for(let t=0;t<n.outputs.length;t++)if(i[n.outputs[t].id]){for(const t in r)i[r[t].id]=!0,a[n.id]=!0;break}}const o=[];for(let e=0;e<t.length;e++){const n=t[e];if(s[n.id]&&a[n.id]){const t={};for(const e in n.inputs){const s=n.inputs[e];r[s.id]&&(t[e]=s)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,o.push(e)}}return o}(this.state.activeTape,e,s);if(!r&&0===i.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[s.id]=null==n?function(t){const e=L(m(t),"float32");return Hn.makeTensor(e,t,"float32")}(s.shape):n,function(t,e,n,r){for(let s=e.length-1;s>=0;s--){const i=e[s],a=[];if(i.outputs.forEach((e=>{const n=t[e.id];null!=n?a.push(n):a.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(a);for(const e in i.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[e]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${s.dtype}'`);const a=i.inputs[e];if(!g(s.shape,a.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${e}' has shape '${s.shape}', which does not match the shape of the input '${a.shape}'`);if(null==t[a.id])t[a.id]=s;else{const e=t[a.id];t[a.id]=r(e,s),e.dispose()}}}}(t,i,(t=>this.tidy(t)),jn);const r=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(t){return h(F(t),(()=>"The f passed in customGrad(f) must be a function.")),(...e)=>{let n;h(e.every((t=>t instanceof Nn)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return e.forEach(((t,e)=>{r[e]=t})),this.runKernelFunc(((r,s)=>(n=t(...e,s),h(n.value instanceof Nn,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),h(F(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value)),r,((t,r)=>{const s=n.gradFunc(t,r),i=Array.isArray(s)?s:[s];h(i.length===e.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),h(i.every((t=>t instanceof Nn)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const a={};return i.forEach(((t,e)=>{a[e]=()=>t})),a}))}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=wn(),n=await this.backend.time(t);return n.wallMs=wn()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Un;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Gn(){const t=K();if(null==t._tfengine){const e=new G(t);t._tfengine=new Vn(e)}var e;return e=t._tfengine.ENV,q=e,Sn=()=>t._tfengine,t._tfengine}Vn.nextTensorId=0,Vn.nextVariableId=0;const Hn=Gn();function jn(t,e){const n={a:t,b:e};return Hn.runKernelFunc(((n,r)=>{const s=n.add(t,e);return r([t,e]),s}),n,null,Q)}function qn(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Kn=H();function Xn(t,e){let n=t;if($(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||$(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&H().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Yn(t,r,[]),r}function Yn(t,e,n){if(n=n||[],!Array.isArray(t)&&!$(t))return void h(0===e.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`));h(e.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`)),h(t.length===e[0],(()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`));const r=e.slice(1);for(let e=0;e<t.length;++e)Yn(t[e],r,n.concat(e))}function Jn(t,e,n,r){if(null!=t&&("numeric"!==t&&t!==e||"numeric"===t&&"string"===e))throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}function Zn(t,e,n,r="numeric"){if(t instanceof Nn)return Jn(r,t.dtype,e,n),t;let s=A(t);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Jn(r,s,e,n),null==t||!$(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const i=Xn(t,s);$(t)||Array.isArray(t)||(t=[t]);const a="string"!==s?vn(t,s):f(t,[],!0);return Hn.makeTensor(a,i,s)}function Qn(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map(((t,r)=>Zn(t,`${e}[${r}]`,n)),r)}function tr(t){const e=Object.keys(t);if(1!==e.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+e.length+" keys.");let n=e[0];const r=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...t)=>{Hn.startScope(n);try{const e=r(...t);return V(e)&&console.error("Cannot return a Promise inside of tidy."),Hn.endScope(e),e}catch(t){throw Hn.endScope(null),t}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}Kn.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Kn.registerFlag("IS_BROWSER",(()=>qn())),Kn.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Kn.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Kn.registerFlag("PROD",(()=>!1)),Kn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Kn.getBool("DEBUG"))),Kn.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Kn.registerFlag("IS_TEST",(()=>!1));const er=tr({complex_:function(t,e){const n=Zn(t,"real","complex"),r=Zn(e,"imag","complex");d(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return Hn.runKernelFunc((t=>t.complex(n,r)),s,null,gt)}});function nr(t,e,n,r){if(null==r&&(r=A(t)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!$(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){P(e);const t=m(e),r=m(n);h(t===r,(()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`));for(let t=0;t<n.length;++t){const r=n[t],s=t!==n.length-1||r!==m(e.slice(t));h(n[t]===e[t]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `))}}return $(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==r?vn(t,r):f(t,[],!0),Hn.makeTensor(t,e,r)}function rr(t,e,n){return nr(t,e,Xn(t,n),n)}const sr={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function ir(t,e){const n=[],r=[],s=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let i=0;i<s.length;++i){const a=s[i],o=Array.isArray(t)?t[i].tensor:t[a];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${o.dtype}`);const l={name:a,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const t=new Promise((async t=>{const e=await o.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+4*e.length,r=new Uint8Array(n);let s=0;for(let t=0;t<e.length;t++){const n=e[t],i=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(i,s),s+=4,r.set(n,s),s+=n.length}t(r)}));r.push(t)}else r.push(o.data());null!=e&&(l.group=e),n.push(l)}return{data:ar(await Promise.all(r)),specs:n}}function ar(t){if(null===t)throw new Error("Invalid input value: "+JSON.stringify(t));let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+t.constructor.name)}));const r=new Uint8Array(e);let s=0;return n.forEach((t=>{r.set(new Uint8Array(t.buffer),s),s+=t.byteLength})),r.buffer}const or="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function lr(t){return or?Buffer.byteLength(t):new Blob([t]).size}function ur(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let r=0;return t.forEach((t=>{n.set(new Uint8Array(t),r),r+=t.byteLength})),n.buffer}function cr(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:lr(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:lr(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function hr(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0==(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return r=>{const s=new ArrayBuffer(4*r.length),i=new Uint32Array(s);for(let s=0;s<r.length;s++){const a=r[s],o=t[n[a>>10]+(1023&a)]+e[a>>10];i[s]=o}return new Float32Array(s)}}class dr{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==dr.instance&&(dr.instance=new dr),dr.instance}static registerSaveRouter(t){dr.getInstance().saveRouters.push(t)}static registerLoadRouter(t){dr.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return dr.getHandlers(t,"save")}static getLoadHandlers(t,e){return dr.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?dr.getInstance().loadRouters:dr.getInstance().saveRouters).forEach((e=>{const s=e(t,n);null!==s&&r.push(s)})),r}}const pr="tensorflowjs",fr="models_store",mr="model_info_store";function gr(){if(!H().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function yr(t){const e=t.result;e.createObjectStore(fr,{keyPath:"modelPath"}),e.createObjectStore(mr,{keyPath:"modelPath"})}class br{constructor(t){if(this.indexedDB=gr(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const r=this.indexedDB.open(pr,1);r.onupgradeneeded=()=>yr(r),r.onsuccess=()=>{const s=r.result;if(null==e){const e=s.transaction(fr,"readonly"),r=e.objectStore(fr).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(s.close(),n(r.error)),e.oncomplete=()=>s.close()}else{const r=cr(e),i=s.transaction(mr,"readwrite");let a=i.objectStore(mr);const o=a.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=s.transaction(fr,"readwrite");const o=l.objectStore(fr).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});o.onsuccess=()=>t({modelArtifactsInfo:r}),o.onerror=t=>{a=i.objectStore(mr);const e=a.delete(this.modelPath);e.onsuccess=()=>(s.close(),n(o.error)),e.onerror=t=>(s.close(),n(o.error))}},o.onerror=t=>(s.close(),n(o.error)),i.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=t=>n(r.error)}))}}br.URL_SCHEME="indexeddb://";const xr=t=>{return H().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(br.URL_SCHEME)?(e=t.slice(br.URL_SCHEME.length),new br(e)):null;var e};dr.registerSaveRouter(xr),dr.registerLoadRouter(xr);class vr{constructor(){this.indexedDB=gr()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(pr,1);n.onupgradeneeded=()=>yr(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(mr,"readonly"),i=s.objectStore(mr).getAll();i.onsuccess=()=>{const e={};for(const t of i.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},i.onerror=t=>(r.close(),e(i.error)),s.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(br.URL_SCHEME)?e.slice(br.URL_SCHEME.length):e,new Promise(((e,n)=>{const r=this.indexedDB.open(pr,1);r.onupgradeneeded=()=>yr(r),r.onsuccess=()=>{const s=r.result,i=s.transaction(mr,"readwrite"),a=i.objectStore(mr),o=a.get(t);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=a.delete(t),i=()=>{l=s.transaction(fr,"readwrite");const r=l.objectStore(fr).delete(t);r.onsuccess=()=>e(o.result.modelArtifactsInfo),r.onerror=t=>n(o.error)};r.onsuccess=i,r.onerror=t=>(i(),s.close(),n(o.error))}},o.onerror=t=>(s.close(),n(o.error)),i.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=t=>n(r.error)}))}}const wr="/",kr="tensorflowjs_models",Ir="info",Cr="model_topology",Sr="weight_specs",Er="weight_data",$r="model_metadata";function Nr(t){return{info:[kr,t,Ir].join(wr),topology:[kr,t,Cr].join(wr),weightSpecs:[kr,t,Sr].join(wr),weightData:[kr,t,Er].join(wr),modelMetadata:[kr,t,$r].join(wr)}}function Rr(t){const e=t.split(wr);if(e.length<3)throw new Error("Invalid key format: "+t);return e.slice(1,e.length-1).join(wr)}class Tr{constructor(t){if(!H().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=Nr(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),r=cr(t);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){if(or)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let t=0,r=e.length;t<r;t++)n+=String.fromCharCode(e[t]);return btoa(n)}(t.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata})),{modelArtifactsInfo:r}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const t=JSON.parse(s);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,e.userDefinedMetadata=t.userDefinedMetadata}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(t){if(or){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n.set([e.charCodeAt(t)],t);return n.buffer}(i),e}}Tr.URL_SCHEME="localstorage://";const Ar=t=>{return H().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Tr.URL_SCHEME)?(e=t.slice(Tr.URL_SCHEME.length),new Tr(e)):null;var e};dr.registerSaveRouter(Ar),dr.registerLoadRouter(Ar);class Fr{constructor(){h(H().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),h("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=kr+wr,n=wr+Ir;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(e)&&s.endsWith(n)&&(t[Rr(s)]=JSON.parse(this.LS.getItem(s)))}return t}async removeModel(t){var e;const n=Nr(t=(e=t).startsWith(Tr.URL_SCHEME)?e.slice(Tr.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class Dr{constructor(){this.managers={}}static getInstance(){return null==Dr.instance&&(Dr.instance=new Dr),Dr.instance}static registerManager(t,e){h(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),h(t.length>0,(()=>"scheme must not be an empty string."));const n=Dr.getInstance();h(null==n.managers[t],(()=>`A model store manager is already registered for scheme '${t}'.`)),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}class _r{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Browser's encoder only supports utf-8, but got "+e);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(H().get("IS_BROWSER")){H().setPlatform("browser",new _r);try{Dr.registerManager(Tr.URL_SCHEME,new Fr)}catch(t){}try{Dr.registerManager(br.URL_SCHEME,new vr)}catch(t){}}let Or;function Mr(t,e="float32",n){return e=e||"float32",P(t),new Cn(t,e,n)}H().get("IS_NODE")&&H().setPlatform("node",new class{constructor(){this.util=n(1758),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=H().global.fetch?H().global.fetch(t,e):(null==Or&&(Or=n(8352)),Or(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Node built-in encoder only supports utf-8, but got "+e);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}});const Lr=tr({cast_:function(t,e){const n=Zn(t,"x","cast");if(!function(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}(e))throw new Error("Failed to cast to unknown dtype "+e);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:e};return Hn.runKernelFunc((t=>t.cast(n,e)),r,null,pt,s)}}),zr=tr({clone_:function(t){const e=Zn(t,"x","clone",null),n={x:e};return Hn.runKernelFunc((()=>Hn.makeTensorFromDataId(e.dataId,e.shape,e.dtype)),n,null,jt)}});function Br(t){return new Promise((t=>setTimeout(t))).then(t)}Gn(),En={buffer:Mr,cast:Lr,clone:zr,print:function(t,e=!1){console.log(t.toString(e))}};class Pr{constructor(t){if(!H().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Pr.URL_SCHEME)&&(t=t.slice(Pr.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n},s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),i=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(i.download=this.modelTopologyFileName,i.href=s,await Br((()=>i.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await Br((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:cr(t)}}}}function Wr(t,e,n,r){!function(t){h(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){h(t>=0&&t<=1,(()=>"Progress fraction must be in range [0, 1], but got startFraction "+t)),h(e>=0&&e<=1,(()=>"Progress fraction must be in range [0, 1], but got endFraction "+e)),h(e>=t,(()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction `+e))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(t.map((i=>(i.then((i=>{const a=n+ ++s/t.length*(r-n);return e(a),i})),i))))}async function Ur(t,e){null==e&&(e={});const n=null==e.fetchFunc?H().platform.fetch:e.fetchFunc,r=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),s=(null==e.onProgress?await Promise.all(r):await Wr(r,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(s):await Wr(s,e.onProgress,.5,1)}Pr.URL_SCHEME="downloads://",dr.registerSaveRouter((t=>H().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Pr.URL_SCHEME)?function(t="model"){return new Pr(t)}(t.slice(Pr.URL_SCHEME.length)):null));class Vr{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(h("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=H().platform.fetch,h(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&h(2===t.length,(()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`)),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata,weightsManifest:n};e.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:cr(t),responses:[s]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+s.status+".")}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code `+t.status+". Please verify this URL points to the model JSON of the model to load.");let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,r=e.weightsManifest,s=e.generatedBy,i=e.convertedBy,a=e.format,o=e.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let l,u;if(null!=r){const t=await this.loadWeights(r);[l,u]=t}const c={modelTopology:n,weightSpecs:l,weightData:u,userDefinedMetadata:o,generatedBy:s,convertedBy:i,format:a},h=e.modelInitializer;return h&&(c.modelInitializer=h),c}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?");return[t.substring(0,e)+"/",n>e?t.substring(n):""]}(e),s=this.weightPathPrefix||n,i=[];for(const e of t)i.push(...e.weights);const a=[],o=[];for(const e of t)for(const t of e.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):a.push(s+t+r);return this.weightUrlConverter&&a.push(...await Promise.all(o)),[i,ur(await Ur(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Gr(t){return null!=t.match(Vr.URL_SCHEME_REGEX)}Vr.URL_SCHEME_REGEX=/^https?:\/\//;const Hr=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>Gr(t))):Gr(t),n)return jr(t,e)}return null};function jr(t,e){return new Vr(t,e)}dr.registerSaveRouter(Hr),dr.registerLoadRouter(Hr);class qr{constructor(t){this.modelArtifacts=t}async load(){return this.modelArtifacts}}function Kr(t,e,n,r){return 1===arguments.length?null!=t.modelTopology||null!=t.weightSpecs?new qr(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new qr({modelTopology:t})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new qr({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:r}))}function Xr(t,e,n){const r=t.shape.length;h(r===e.length,(()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`)),h(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)h(e[s]+n[s]<=t.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+n[s]}) would overflow input.shape[${s}] (${t.shape[s]})`))}function Yr(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function Jr(t,e,n){const r=[];for(let s=0;s<t.length;s++)r[s]=Math.ceil((e[s]-t[s])/n[s]);return r}function Zr(t,e,n,r){const s=[...t];for(let t=s.length;t<r.length;t++)s.push(1);for(let t=0;t<n;t++)0===t?s[e]=1:(s.splice(e,0,1),s.pop());return s}function Qr(t,e,n){return n<=t?n:n-(e-1)}function ts(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function es(t,e,n,r,s,i,a,o,l){const u=t.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(e.length&&n>0){const l=e[0],u=n+1;c=ns(a,l,u,r,t),h=rs(o,l,u,s,t),d=Zr(i,l,u,t)}else for(let e=0;e<u;e++)c[e]=is(a,r,i,t,e,l),h[e]=as(o,s,i,t,e,l),d[e]=ss(i,e,l);return{begin:c,end:h,strides:d}}function ns(t,e,n,r,s){const i=[...s],a=ts(n,e);for(let s=0;s<i.length;s++)if(a.indexOf(s)>-1)i[s]=0;else{const a=Qr(e,n,s);let o=r[a];t&1<<a&&(o=0),i[s]=o}return i}function rs(t,e,n,r,s){const i=[...s],a=ts(n,e);for(let s=0;s<i.length;s++)if(a.indexOf(s)>-1)i[s]=Number.MAX_SAFE_INTEGER;else{const a=Qr(e,n,s);let o=r[a];t&1<<a&&(o=Number.MAX_SAFE_INTEGER),i[s]=o}for(let t=0;t<i.length;t++){const e=s[t];i[t]<0&&(i[t]+=e),i[t]=u(0,i[t],s[t])}return i}function ss(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function is(t,e,n,r,s,i){let a=e[s];const o=n[s]||1;(t&1<<s||i&1<<s||null==a)&&(a=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return a<0&&(a+=l),a=u(0,a,l-1),a}function as(t,e,n,r,s,i){let a=e[s];const o=n[s]||1;(t&1<<s||i&1<<s||null==a)&&(a=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return a<0&&(a+=l),a=o>0?u(0,a,l):u(-1,a,l-1),a}function os(t,e,n){let r=n.length;for(let t=0;t<n.length;t++)if(n[t]>1){r=t;break}for(let s=r+1;s<n.length;s++)if(e[s]>0||n[s]!==t[s])return!1;return!0}function ls(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function us(t,e,n){let r;const s=t.shape.length;let i;return r="number"==typeof e?[e,...new Array(s-1).fill(0)]:e.length<s?e.concat(new Array(s-e.length).fill(0)):e.slice(),r.forEach((t=>{h(-1!==t,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map(((e,n)=>e>=0?e:(h(-1===e,(()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`)),t.shape[n]-r[n]))),[r,i]}class cs{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class hs{constructor(){this.classNameMap={}}static getMap(){return null==hs.instance&&(hs.instance=new hs),hs.instance}static register(t){hs.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function ds(t){h(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),h("string"==typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),h(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),hs.register(t)}function ps(t){H().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function fs(){return Hn}function ms(){return Hn.memory()}function gs(t,e){return Hn.tidy(t,e)}function ys(t){Pn(t).forEach((t=>t.dispose()))}function bs(t){return Hn.keep(t)}function xs(t,e,n=1){return Hn.registerBackend(t,e,n)}function vs(){return Hn.backend}function ws(t){return Hn.customGrad(t)}function ks(t,e){if(($(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&$(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return nr(t,[],[],e)}$n=ps;class Is extends cs{minimize(t,e=!1,n){const{value:r,grads:s}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:s[t.name]})));this.applyGradients(t)}else this.applyGradients(s);return ys(s),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function(t,e){h(F(t),(()=>"The f passed in variableGrads(f) must be a function")),h(null==e||Array.isArray(e)&&e.every((t=>t instanceof Rn)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in Hn.registeredVariables)e.push(Hn.registeredVariables[t])}const r=n?e.filter((t=>!t.trainable)):null,s=e.length;h((e=e.filter((t=>t.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:i,grads:a}=Hn.gradients(t,e,null,!0);h(a.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),h(0===i.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`));const o={};return e.forEach(((t,e)=>{null!=a[e]&&(o[t.name]=a[e])})),null!=r&&r.forEach((t=>o[t.name]=null)),{value:i,grads:o}}(t,e)}dispose(){null!=this.iterations_&&ys(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:ks(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Is,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});const Cs=tr({abs_:function(t){const e=Zn(t,"x","abs"),n={x:e};return Hn.runKernelFunc(((t,n)=>(n([e]),"complex64"===e.dtype?t.complexAbs(e):t.abs(e))),n,null,Y)}}),Ss=tr({add_:function(t,e){let n=Zn(t,"a","add"),r=Zn(e,"b","add");[n,r]=zn(n,r);const s={a:n,b:r};return Hn.runKernelFunc(((t,e)=>{const s=t.add(n,r);return e([n,r]),s}),s,null,Q)}});function Es(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function $s(t,e,n){const r=t.length+e.length,s=[];let i=0,a=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(t[i++]):s.push(e[a++]);return s}function Ns(t,e){const n=[],r=t.length;for(let s=0;s<r;s++)-1===e.indexOf(s)&&n.push(t[s]);return[n,e.map((e=>t[e]))]}function Rs(t,e){return $s(t,e.map((t=>1)),e)}function Ts(t,e,n){h(Es(e,n),(()=>t+" supports only inner-most axes for now. "+`Got axes ${e} and rank-${n} input.`))}function As(t,e){if(Es(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach((t=>n.push(t))),n}function Fs(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function Ds(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}const _s=tr({reshape_:function(t,e){const n=Zn(t,"x","reshape",null),r={x:n},s={shape:e};return Hn.runKernelFunc(((t,r)=>(e=w(e,n.size),h(n.size===m(e),(()=>"new shape and old shape must have the same number of elements.")),r([n]),t.reshape(n,e))),r,null,Ce,s)}}),Os=tr({transpose_:function(t,e){const n=Zn(t,"x","transpose");if(null==e&&(e=n.shape.map(((t,e)=>e)).reverse()),h(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`)),e.forEach((t=>{h(t>=0&&t<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+e))})),n.rank<=1)return n.clone();const r={x:n},s={perm:e};return Hn.runKernelFunc((t=>t.transpose(n,e)),r,null,Xe,s)}}),Ms=tr({all_:function(t,e=null,n=!1){let r=Zn(t,"x","all","bool");const s={x:r},i={axis:e,keepDims:n};return Hn.runKernelFunc((t=>{const s=k(e,r.shape);let i=s;const a=As(i,r.rank);null!=a&&(r=Os(r,a),i=Ds(i.length,r.rank));const o=t.all(r,i);if(n){const t=Rs(o.shape,s);return _s(o,t)}return o}),s,null,"All",i)}}),Ls=tr({any_:function(t,e=null,n=!1){let r=Zn(t,"x","any","bool");const s={x:r},i={axis:e,keepDims:n};return Hn.runKernelFunc((t=>{const s=k(e,r.shape);let i=s;const a=As(i,r.rank);null!=a&&(r=Os(r,a),i=Ds(i.length,r.rank));const o=t.any(r,i);if(n){const t=Rs(o.shape,s);return _s(o,t)}return o}),s,null,"Any",i)}}),zs=tr({argMax_:function(t,e=0){let n=Zn(t,"x","argMax");const r={x:n},s={axis:e};return Hn.runKernelFunc(((t,r)=>{r([n]);let s=k(e,n.shape);const i=As(s,n.rank);return null!=i&&(n=Os(n,i),s=Ds(s.length,n.rank)),t.argMax(n,s[0])}),r,null,tt,s)}});function Bs(t,e,n,r,s="NHWC",i){return Us(t,[...e,t[3]],n,i,r,null,null,Js(s))}function Ps(t,e,n,r,s,i,a="channelsLast"){const[o,l]=Hs(e);let u;if("channelsLast"===a)u=[o,l,t[3],t[3]];else{if("channelsFirst"!==a)throw new Error("Unknown dataFormat "+a);u=[o,l,t[1],t[1]]}return Us(t,u,n,r,s,i,!1,a)}function Ws(t,e,n,r,s,i,a="NDHWC"){const[o,l,u]=js(e);let c,h;if("NDHWC"===a)h="channelsLast",c=[o,l,u,t[4],t[4]];else{if("NCDHW"!==a)throw new Error("Unknown dataFormat "+a);h="channelsFirst",c=[o,l,u,t[1],t[1]]}return Vs(t,c,n,r,s,!1,h,i)}function Us(t,e,n,r,s,i,a=!1,o="channelsLast"){let[l,u,c,d]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,d]=t;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);[l,d,u,c]=t}const[p,f,,m]=e,[g,b]=Hs(n),[x,v]=Hs(r),w=qs(p,x),k=qs(f,v),{padInfo:I,outHeight:C,outWidth:S}=function(t,e,n,r,s,i,a,o,l){let u,c,d;if("number"==typeof t){u={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,r,s){null==r&&(r=Gs(t,e,n));const i=t[1],a=Ks((t[0]-e+2*r)/n+1,s);h(y(a),(()=>`The output # of rows (${a}) must be an integer. Change the stride and/or zero pad parameters`));const o=Ks((i-e+2*r)/n+1,s);return h(y(o),(()=>`The output # of columns (${o}) must be an integer. Change the stride and/or zero pad parameters`)),[a,o]}([e,n],i,r,t,o);c=s[0],d=s[1]}else if("same"===t){c=Math.ceil(e/r),d=Math.ceil(n/s);const t=Math.max(0,(c-1)*r+i-e),o=Math.max(0,(d-1)*s+a-n),l=Math.floor(t/2),h=t-l,p=Math.floor(o/2);u={top:l,bottom:h,left:p,right:o-p,type:"SAME"}}else if("valid"===t)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-i+1)/r),d=Math.ceil((n-a+1)/s);else{if("object"!=typeof t)throw Error("Unknown padding parameter: "+t);{const h="channelsLast"===l?t[1][0]:t[2][0],p="channelsLast"===l?t[1][1]:t[2][1],f="channelsLast"===l?t[2][0]:t[3][0],m="channelsLast"===l?t[2][1]:t[3][1];u={top:h,bottom:p,left:f,right:m,type:0===h&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=Ks((e-i+h+p)/r+1,o),d=Ks((n-a+f+m)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:d}}(s,u,c,g,b,w,k,i,o),E=a?m*d:m;let $;return"channelsFirst"===o?$=[l,E,C,S]:"channelsLast"===o&&($=[l,C,S,E]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:d,outHeight:C,outWidth:S,outChannels:E,padInfo:I,strideHeight:g,strideWidth:b,filterHeight:p,filterWidth:f,effectiveFilterHeight:w,effectiveFilterWidth:k,dilationHeight:x,dilationWidth:v,inShape:t,outShape:$,filterShape:e}}function Vs(t,e,n,r,s,i=!1,a="channelsLast",o){let[l,u,c,d,p]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[l,u,c,d,p]=t;else{if("channelsFirst"!==a)throw new Error("Unknown dataFormat "+a);[l,p,u,c,d]=t}const[f,m,g,,b]=e,[x,v,w]=js(n),[k,I,C]=js(r),S=qs(f,k),E=qs(m,I),$=qs(g,C),{padInfo:N,outDepth:R,outHeight:T,outWidth:A}=function(t,e,n,r,s,i,a,o,l,u,c){let d,p,f,m;if("number"==typeof t){d={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const i=function(t,e,n,r,s,i){null==s&&(s=Gs(t,e,r));const a=t[1],o=t[2],l=Ks((t[0]-e+2*s)/r+1,i);h(y(l),(()=>`The output # of depths (${l}) must be an integer. Change the stride and/or zero pad parameters`));const u=Ks((a-e+2*s)/r+1,i);h(y(u),(()=>`The output # of rows (${u}) must be an integer. Change the stride and/or zero pad parameters`));const c=Ks((o-e+2*s)/r+1,i);return h(y(c),(()=>`The output # of columns (${c}) must be an integer. Change the stride and/or zero pad parameters`)),[l,u,c,1]}([e,n,r,1],o,0,s,t,c);p=i[0],f=i[1],m=i[2]}else if("same"===t){p=Math.ceil(e/s),f=Math.ceil(n/i),m=Math.ceil(r/a);const t=(p-1)*s+o-e,c=(f-1)*i+l-n,h=(m-1)*a+u-r,g=Math.floor(t/2),y=t-g,b=Math.floor(c/2),x=c-b,v=Math.floor(h/2);d={top:b,bottom:x,left:v,right:h-v,front:g,back:y,type:"SAME"}}else{if("valid"!==t)throw Error("Unknown padding parameter: "+t);d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((e-o+1)/s),f=Math.ceil((n-l+1)/i),m=Math.ceil((r-u+1)/a)}return{padInfo:d,outDepth:p,outHeight:f,outWidth:m}}(s,u,c,d,x,v,w,S,E,$,o),F=i?b*p:b;let D;return"channelsFirst"===a?D=[l,F,R,T,A]:"channelsLast"===a&&(D=[l,R,T,A,F]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:d,inChannels:p,outDepth:R,outHeight:T,outWidth:A,outChannels:F,padInfo:N,strideDepth:x,strideHeight:v,strideWidth:w,filterDepth:f,filterHeight:m,filterWidth:g,effectiveFilterDepth:S,effectiveFilterHeight:E,effectiveFilterWidth:$,dilationDepth:k,dilationHeight:I,dilationWidth:C,inShape:t,outShape:D,filterShape:e}}function Gs(t,e,n,r=1){const s=qs(e,r);return Math.floor((t[0]*(n-1)-n+s)/2)}function Hs(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function js(t){return"number"==typeof t?[t,t,t]:t}function qs(t,e){return e<=1?t:t+(t-1)*(e-1)}function Ks(t,e){if(!e)return t;switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error("Unknown roundingMode "+e)}}function Xs(t){const[e,n,r]=Hs(t);return 1===e&&1===n&&1===r}function Ys(t,e){return Xs(t)||Xs(e)}function Js(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error("Unknown dataFormat "+t)}const Zs=tr({avgPool_:function(t,e,n,r,s){const i=Zn(t,"x","avgPool","float32");h(Ys(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let a=i,o=!1;3===i.rank&&(o=!0,a=_s(i,[1,i.shape[0],i.shape[1],i.shape[2]])),h(4===a.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`)),null!=s&&h(y(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:a},u={filterSize:e,strides:n,pad:r,dimRoundingMode:s};let c=Hn.runKernelFunc(((t,i)=>{const o=Ps(a.shape,e,n,1,r,s);return i([a]),1===o.filterWidth&&1===o.filterHeight&&g(o.inShape,o.outShape)?a.clone():t.avgPool(a,o)}),l,null,ot,u);return c=Lr(c,i.dtype),o?_s(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Qs=tr({avgPool3d_:function(t,e,n,r,s,i="NDHWC",a){null==a?a=[1,1,1]:ps("dilations is deprecated, this field will be gone in v3.0.0.");const o=Zn(t,"x","avgPool3d","float32");let l=o,u=!1;4===o.rank&&(u=!0,l=_s(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),h(5===l.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`)),h("NDHWC"===i,(()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+i)),h(Ys(n,a),(()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=s&&h(y(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const c={x:l},d={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:i,dilations:a};let p=Hn.runKernelFunc(((t,o)=>{null==a&&(a=[1,1,1]);const u=Ws(l.shape,e,n,a,r,s,i);return o([l]),t.avgPool3d(l,u)}),c,null,ut,d);return p=Lr(p,l.dtype),u?_s(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});function ti(t){return null==t?null:0===t.rank?_s(t,[t.size]):1===t.rank?t:2===t.rank?_s(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?_s(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t}const ei=tr({batchNorm_:function(t,e,n,r,s,i){null==i&&(i=.001);const a=Zn(t,"x","batchNorm"),o=Zn(e,"mean","batchNorm"),l=Zn(n,"variance","batchNorm");let u,c;null!=s&&(u=Zn(s,"scale","batchNorm")),null!=r&&(c=Zn(r,"offset","batchNorm")),h(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),h(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),h(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const d=function(t){let e;return e=0===t.rank||1===t.rank?_s(t,[1,1,1,t.size]):2===t.rank?_s(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?_s(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(a),p={x:d,scale:u,offset:c,mean:o,variance:l},f={varianceEpsilon:i},m=Hn.runKernelFunc(((t,e)=>(e([d,o,l,u]),t.batchNorm(d,ti(o),ti(l),ti(c),ti(u),i))),p,null,Vt,f);return _s(m,a.shape)}}),ni=tr({batchNorm2d_:function(t,e,n,r,s,i){const a=Zn(t,"x","batchNorm"),o=Zn(e,"mean","batchNorm"),l=Zn(n,"variance","batchNorm");let u,c;return null!=s&&(u=Zn(s,"scale","batchNorm")),null!=r&&(c=Zn(r,"offset","batchNorm")),h(2===a.rank,(()=>"Error in batchNorm2D: x must be rank 2 but got rank "+a.rank+".")),h(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),h(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&h(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&h(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),ei(a,o,l,c,u,i)}}),ri=tr({batchNorm3d_:function(t,e,n,r,s,i){const a=Zn(t,"x","batchNorm"),o=Zn(e,"mean","batchNorm"),l=Zn(n,"variance","batchNorm");let u,c;return null!=s&&(u=Zn(s,"scale","batchNorm")),null!=r&&(c=Zn(r,"offset","batchNorm")),h(3===a.rank,(()=>"Error in batchNorm3D: x must be rank 3 but got rank "+a.rank+".")),h(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),h(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&h(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&h(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),ei(a,o,l,c,u,i)}}),si=tr({batchNorm4d_:function(t,e,n,r,s,i){const a=Zn(t,"x","batchNorm"),o=Zn(e,"mean","batchNorm"),l=Zn(n,"variance","batchNorm");let u,c;return null!=s&&(u=Zn(s,"scale","batchNorm")),null!=r&&(c=Zn(r,"offset","batchNorm")),h(4===a.rank,(()=>"Error in batchNorm4D: x must be rank 4 but got rank "+a.rank+".")),h(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),h(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&h(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&h(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),ei(a,o,l,c,u,i)}}),ii=tr({clipByValue_:function(t,e,n){const r=Zn(t,"x","clipByValue");h(e<=n,(()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`));const s={x:r},i={clipValueMin:e,clipValueMax:n};return Hn.runKernelFunc(((t,s)=>{const i=t.clip(r,e,n);return s([r]),i}),s,null,mt,i)}});function ai(t,e){const n=t[0].length;t.forEach(((t,e)=>{h(t.length===n,(()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`))})),h(e>=0&&e<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=t[0];t.forEach(((t,s)=>{for(let i=0;i<n;i++)h(i===e||t[i]===r[i],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function oi(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}const li=tr({concat_:function(t,e=0){h(t.length>=1,(()=>"Pass at least one tensor to concat"));let n=Qn(t,"tensors","concat");"complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)}));const r=n,s={axis:e};return Hn.runKernelFunc(((t,r)=>{const s=k(e,n[0].shape)[0],i=oi(n.map((t=>t.shape)),s);if(0===m(i))return rr([],i);if(n=n.filter((t=>t.size>0)),1===n.length)return n[0];ai(n.map((t=>t.shape)),s);const a=t.concat(n,s);return r(n),a}),r,null,yt,s)}}),ui=tr({concat1d_:function(t){return li(t,0)}}),ci=tr({concat2d_:function(t,e){return li(t,e)}}),hi=tr({concat3d_:function(t,e){return li(t,e)}}),di=tr({concat4d_:function(t,e){return li(t,e)}}),pi=tr({conv2d_:function(t,e,n,r,s="NHWC",i=[1,1],a){const o=Zn(t,"x","conv2d"),l=Zn(e,"filter","conv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=_s(o,[1,o.shape[0],o.shape[1],o.shape[2]])),h(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),h(4===l.rank,(()=>"Error in conv2d: filter must be rank 4, but got rank "+l.rank+".")),null!=a&&h(y(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const d="NHWC"===s?u.shape[3]:u.shape[1];h(d===l.shape[2],(()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${l.shape[2]}.`)),h(Ys(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const p={x:u,filter:l},f={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},m=Hn.runKernelFunc(((t,e)=>{const o=Js(s),c=Us(u.shape,l.shape,n,i,r,a,!1,o),h=t.conv2d(u,l,c);return e([u,l]),h}),p,null,bt,f);return c?_s(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),fi=tr({conv1d_:function(t,e,n,r,s="NWC",i=1,a){const o=Zn(t,"x","conv1d"),l=Zn(e,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=_s(o,[1,o.shape[0],o.shape[1]])),h(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),h(3===l.rank,(()=>"Error in conv1d: filter must be rank 3, but got rank "+l.rank+".")),null!=a&&h(y(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`)),h(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),h(Ys(n,i),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`)),h("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const d=_s(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=_s(u,[u.shape[0],1,u.shape[1],u.shape[2]]),f=pi(p,d,[1,n],r,"NHWC",[1,i],a);return _s(f,c?[f.shape[2],f.shape[3]]:[f.shape[0],f.shape[2],f.shape[3]])}}),mi=tr({conv2DBackpropInput_:function(t,e,n,r,s,i="NHWC",a){h(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let o=t,l=e,u=!1;3===e.rank&&(u=!0,l=_s(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),h(4===o.length,(()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+o.length+".")),h(4===l.rank,(()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+l.rank)),h(4===n.rank,(()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank));const c="NHWC"===i?o[3]:o[1],d="NHWC"===i?l.shape[3]:l.shape[1];h(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),h(d===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`)),null!=a&&h(y(s),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`));const p={dy:l,filter:n},f={strides:r,pad:s,dataFormat:i,dimRoundingMode:a,inputShape:o},m=Hn.runKernelFunc(((t,e)=>{const u=Js(i),c=Us(o,n.shape,r,1,s,a,!1,u),h=t.conv2dDerInput(l,n,c);return e([l,n]),h}),p,null,vt,f);return u?_s(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),gi=tr({conv2dTranspose_:function(t,e,n,r,s,i){const a=Zn(t,"x","conv2dTranspose"),o=Zn(e,"filter","conv2dTranspose");return mi(n,a,o,r,s,"NHWC",i)}}),yi=tr({conv3d_:function(t,e,n,r,s="NDHWC",i=[1,1,1]){const a=Zn(t,"x","conv3d"),o=Zn(e,"filter","conv3d");let l=a,u=!1;4===a.rank&&(u=!0,l=_s(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),h(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),h(5===o.rank,(()=>"Error in conv3d: filter must be rank 5, but got rank "+o.rank+".")),h(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),h(Ys(n,i),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),h("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const c={x:l,filter:o},d={strides:n,pad:r,dataFormat:s,dilations:i},p=Hn.runKernelFunc(((t,e)=>{const s=Vs(l.shape,o.shape,n,i,r),a=t.conv3d(l,o,s);return e([l,o]),a}),c,null,wt,d);return u?_s(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),bi=tr({depthwiseConv2d_:function(t,e,n,r,s="NHWC",i=[1,1],a){const o=Zn(t,"x","depthwiseConv2d"),l=Zn(e,"filter","depthwiseConv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=_s(o,[1,o.shape[0],o.shape[1],o.shape[2]])),h(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),h(4===l.rank,(()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+l.rank+".")),h(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),null!=a&&h(y(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},f=Hn.runKernelFunc(((t,e)=>{null==i&&(i=[1,1]),h(Ys(n,i),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const s=Us(u.shape,l.shape,n,i,r,a,!0),o=t.depthwiseConv2D(u,l,s);return e([u,l]),o}),d,null,$t,p);return c?_s(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),xi=tr({floorDiv_:function(t,e){let n=Zn(t,"a","floorDiv"),r=Zn(e,"b","floorDiv");[n,r]=zn(n,r);const s={a:n,b:r};return Hn.runKernelFunc(((t,e)=>{const s=t.floorDiv(n,r);return e([n,r]),s}),s,null,Ut)}}),vi=tr({div_:function(t,e){let n=Zn(t,"a","div"),r=Zn(e,"b","div");if([n,r]=zn(n,r),"int32"===n.dtype&&"int32"===r.dtype)return xi(n,r);const s={a:n,b:r};return Hn.runKernelFunc(((t,e)=>{const s=t.realDivide(n,r);return e([n,r]),s}),s,null,Dt,{})}}),wi=tr({elu_:function(t){const e=Zn(t,"x","elu"),n={x:e};return Hn.runKernelFunc(((t,n)=>{const r=t.elu(e);return n([r]),r}),n,null,_t)}});function ki(t,e){const n=t.length,r=[];for(let s=0;s<n;s++){const i=n-1-s,a=t[i]||1;(e[e.length-1-s]||1)>1&&1===a&&r.unshift(i)}return r}function Ii(t,e){const n=[];for(let r=0;r<e.length;r++){const s=t[t.length-r-1],i=e.length-r-1,a=e[i];(null==s||1===s&&a>1)&&n.unshift(i)}return n}function Ci(t,e){const n=[],r=Math.max(t.length,e.length);for(let s=0;s<r;s++){let r=t[t.length-s-1];null==r&&(r=1);let i=e[e.length-s-1];if(null==i&&(i=1),1===r)n.unshift(i);else if(1===i)n.unshift(r);else{if(r!==i)throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`);n.unshift(r)}}return n}const Si=tr({equal_:function(t,e){let n=Zn(t,"a","equal"),r=Zn(e,"b","equal");[n,r]=zn(n,r),Ci(n.shape,r.shape);const s={a:n,b:r};return Hn.runKernelFunc((t=>t.equal(n,r)),s,null,"Equal")}}),Ei=tr({exp_:function(t){const e=Zn(t,"x","exp"),n={x:e};return Hn.runKernelFunc(((t,n)=>{const r=t.exp(e);return n([r]),r}),n,null,Mt)}}),$i=tr({expandDims_:function(t,e=0){const n=Zn(t,"x","expandDims",null);h(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r=n.shape.slice();return e<0&&(h(-(n.rank+1)<=e,(()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`)),e=n.rank+e+1),r.splice(e,0,1),_s(n,r)}}),Ni=tr({tile_:function(t,e){const n=Zn(t,"x","tile",null);h(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`));const r=[n],s={x:n},i={reps:e};return Hn.runKernelFunc(((t,r)=>{const s=t.tile(n,e);return r([n]),s}),s,null,Ke,i,r)}}),Ri=tr({eye_:function(t,e,n,r="float32"){null==e&&(e=t);const s=Mr([t,e],r),i=t<=e?t:e;for(let t=0;t<i;++t)s.set(1,t,t);const a=_s(s.toTensor(),[t,e]);if(null==n)return a;if(1===n.length)return Ni($i(a,0),[n[0],1,1]);if(2===n.length)return Ni($i($i(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return Ni($i($i($i(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function Ti(t,e,n){const r={shape:t,value:e,dtype:n};return Hn.runKernelFunc((r=>r.fill(t,e,n)),{},null,Bt,r)}const Ai=tr({floor_:function(t){const e=Zn(t,"x","floor"),n={x:e};return Hn.runKernelFunc((t=>t.floor(e)),n,null,Wt)}}),Fi=30;function Di(t){return t<=Fi?t:D(t,Math.floor(Math.sqrt(t)))}function _i(t,e){let n,r=!1;for(t<=Fi?(n=t,r=!0):n=D(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=D(t,n+1);return n}function Oi(t,e,n){const r=[],s=t.length;for(let i=0;i<s;i++)i!==e?r.push(t[i]):r.push(n);return r}function Mi(t,e,n){const r=t.shape[n],s=[];let i=1,a=1;for(let e=0;e<n;e++)s.push(t.shape[e]),i*=t.shape[e];for(let t=0;t<e.rank;t++)s.push(e.shape[t]);for(let e=n+1;e<t.rank;e++)s.push(t.shape[e]),a*=t.shape[e];return{batchSize:i,sliceSize:a,dimSize:r,outputShape:s}}const Li=tr({gather_:function(t,e,n=0){const r=Zn(t,"x","gather"),s=Zn(e,"indices","gather","int32"),i={x:r,indices:s},a={axis:n};return Hn.runKernelFunc(((t,e)=>{const i=k(n,r.shape)[0],a=Mi(r,s,i),o=t.gather(r,_s(s,[s.size]),i);return e([r,s]),_s(o,a.outputShape)}),i,null,Gt,a)}}),zi=tr({greater_:function(t,e){let n=Zn(t,"a","greater"),r=Zn(e,"b","greater");[n,r]=zn(n,r),Ci(n.shape,r.shape);const s={a:n,b:r};return Hn.runKernelFunc((t=>t.greater(n,r)),s,null,"Greater")}}),Bi=tr({greaterEqual_:function(t,e){let n=Zn(t,"a","greaterEqual"),r=Zn(e,"b","greaterEqual");[n,r]=zn(n,r),Ci(n.shape,r.shape);const s={a:n,b:r};return Hn.runKernelFunc(((t,e)=>{const s=t.greaterEqual(n,r);return e([n,r]),s}),s,null,Ht)}}),Pi=tr({maximum_:function(t,e){let n=Zn(t,"a","maximum"),r=Zn(e,"b","maximum");[n,r]=zn(n,r),"bool"===n.dtype&&(n=Lr(n,"int32"),r=Lr(r,"int32")),Ci(n.shape,r.shape);const s={a:n,b:r};return Hn.runKernelFunc(((t,e)=>{const s=t.maximum(n,r);return e([n,r]),s}),s,null,re)}}),Wi=tr({mul_:function(t,e){let n=Zn(t,"a","mul"),r=Zn(e,"b","mul");[n,r]=zn(n,r);const s={a:n,b:r};return Hn.runKernelFunc(((t,e)=>{const s=t.multiply(n,r);return e([n,r]),s}),s,null,he)}}),Ui=tr({leakyRelu_:function(t,e=.2){const n=Zn(t,"x","leakyRelu");return Pi(Wi(ks(e),n),n)}}),Vi=tr({log_:function(t){const e=Zn(t,"x","log"),n={x:e};return Hn.runKernelFunc(((t,n)=>{const r=t.log(e);return n([e]),r}),n,null,Zt)}}),Gi=tr({max_:function(t,e=null,n=!1){const r=Zn(t,"x","max"),s={x:r},i={reductionIndices:e,keepDims:n};return Hn.runKernelFunc(((t,s)=>{let i=k(e,r.shape);const a=As(i,r.rank);let o=r;null!=a&&(o=Os(r,a),i=Ds(i.length,o.rank));const l=t.max(o,i);null!=a&&o.dispose();let u=l;if(n){const t=Rs(u.shape,k(e,r.shape));u=_s(u,t),l.dispose()}return s([r,u]),u}),s,null,ne,i)}}),Hi=tr({sub_:function(t,e){let n=Zn(t,"a","sub"),r=Zn(e,"b","sub");[n,r]=zn(n,r);const s={a:n,b:r};return Hn.runKernelFunc(((t,e)=>{const s=t.subtract(n,r);return e([n,r]),s}),s,null,He)}}),ji=tr({sum_:function(t,e=null,n=!1){let r=Zn(t,"x","sum");"bool"===r.dtype&&(r=Lr(r,"int32"));const s={x:r},i={axis:e,keepDims:n};return Hn.runKernelFunc(((t,s)=>{s([r]);const i=k(e,r.shape),a=As(i,r.rank);let o=i,l=r;null!=a&&(l=Os(r,a),o=Ds(o.length,r.rank));let u=t.sum(l,o);if(n){const t=Rs(u.shape,i);u=_s(u,t)}return u}),s,null,"Sum",i)}}),qi=tr({logSoftmax_:function(t,e=-1){const n=Zn(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);const r={logits:n},s={axis:e};return Hn.runKernelFunc(((n,r)=>{const s=Gi(t,e,!0),i=Hi(t,s),a=Hi(Lr(i,"float32"),Vi(ji(Ei(i),e,!0)));return r([a]),a}),r,null,ee,s)}}),Ki=tr({logicalAnd_:function(t,e){const n=Zn(t,"a","logicalAnd","bool"),r=Zn(e,"b","logicalAnd","bool");Ci(n.shape,r.shape);const s={a:n,b:r};return Hn.runKernelFunc((t=>t.logicalAnd(n,r)),s,null,"LogicalAnd")}}),Xi=tr({maxPool_:function(t,e,n,r,s){const i=Zn(t,"x","maxPool");let a=i,o=!1;3===i.rank&&(o=!0,a=_s(i,[1,i.shape[0],i.shape[1],i.shape[2]])),h(4===a.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`)),h(Ys(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=s&&h(y(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:a},u={filterSize:e,strides:n,pad:r,dimRoundingMode:s},c=Hn.runKernelFunc(((t,i)=>{const o=Ps(a.shape,e,n,1,r,s);let l;return l=1===o.filterWidth&&1===o.filterHeight&&g(o.inShape,o.outShape)?a.clone():t.maxPool(a,o),i([a,l]),l}),l,null,se,u);return o?_s(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Yi=tr({maxPool3d_:function(t,e=[1,1,1],n,r,s,i="NDHWC",a){null==a?a=[1,1,1]:ps("dilations is deprecated, this field will be gone in v3.0.0.");const o=Zn(t,"x","maxPool3d");let l=o,u=!1;4===o.rank&&(u=!0,l=_s(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),h(5===l.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`)),h("NDHWC"===i,(()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+i)),h(Ys(n,a),(()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=s&&h(y(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const c={x:l},d={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:i,dilations:a},p=Hn.runKernelFunc(((t,o)=>{null==a&&(a=[1,1,1]);const u=Ws(l.shape,e,n,a,r,s,i),c=t.maxPool3d(l,u);return o([l,c]),c}),c,null,ae,d);return u?_s(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});function Ji(t,e="float32"){if("complex64"===e){const e=Ji(t,"float32"),n=Ji(t,"float32");return er(e,n)}const n=z(m(t),e);return Hn.makeTensor(n,t,e)}function Zi(t,e="float32"){if("complex64"===e){const e=Zi(t,"float32"),n=Ji(t,"float32");return er(e,n)}const n=L(m(t),e);return Hn.makeTensor(n,t,e)}const Qi=tr({mean_:function(t,e=null,n=!1){const r=Zn(t,"x","mean"),s=k(e,r.shape),i=m(Ns(r.shape,s)[1]),a={x:r},o={axis:e,keepDims:n},l=()=>{const t=ks(i),s=t.dtype===r.dtype?r:Lr(r,t.dtype),a=vi(s,t);return ji(a,e,n)};return ws((t=>({value:Hn.runKernelFunc(l,a,null,le,o),gradFunc:e=>{const n=t.shape.slice();s.forEach((t=>{n[t]=1}));const r=_s(e,n);return vi(Wi(r,Zi(t.shape,"float32")),i)}})))(r)}}),ta=tr({min_:function(t,e=null,n=!1){const r=Zn(t,"x","min"),s={x:r},i={axis:e,keepDims:n};return Hn.runKernelFunc(((t,s)=>{const i=k(e,r.shape);let a=i;const o=As(a,r.rank);let l=r;null!=o&&(l=Os(r,o),a=Ds(a.length,r.rank));const u=t.min(l,a);null!=o&&l.dispose();let c=u;if(n){const t=Rs(c.shape,i);c=_s(u,t),u.dispose()}return s([r,c]),c}),s,null,"Min",i)}}),ea=tr({minimum_:function(t,e){let n=Zn(t,"a","minimum"),r=Zn(e,"b","minimum");[n,r]=zn(n,r),"bool"===n.dtype&&(n=Lr(n,"int32"),r=Lr(r,"int32")),Ci(n.shape,r.shape);const s={a:n,b:r};return Hn.runKernelFunc(((t,e)=>{const s=t.minimum(n,r);return e([n,r]),s}),s,null,ue)}}),na=tr({square_:function(t){const e=Zn(t,"x","square"),n=[e];return Hn.runKernelFunc(((t,n)=>(n([e]),t.square(e))),{x:e},null,"Square",{},n,[])}}),ra=tr({moments_:function(t,e=null,n=!1){const r=k(e,(t=Zn(t,"x","moments")).shape),s=Qi(t,r,n);let i=s.shape;n||(i=Rs(s.shape,r));const a=na(Hi(Lr(t,"float32"),_s(s,i)));return{mean:s,variance:Qi(a,r,n)}}}),sa=tr({neg_:function(t){const e=Zn(t,"x","neg"),n={x:e};return Hn.runKernelFunc((t=>t.neg(e)),n,null,de)}}),ia=tr({notEqual_:function(t,e){let n=Zn(t,"a","notEqual"),r=Zn(e,"b","notEqual");[n,r]=zn(n,r),Ci(n.shape,r.shape);const s={a:n,b:r};return Hn.runKernelFunc((t=>t.notEqual(n,r)),s,null,pe)}}),aa=tr({oneHot_:function(t,e,n=1,r=0){if(e<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+e);const s=Zn(t,"indices","oneHot","int32"),i=[...s.shape,e],a={indices:s},o={depth:e,onValue:n,offValue:r};return Hn.runKernelFunc(((t,a)=>(a([s]),_s(t.oneHot(_s(s,[s.size]),e,n,r),i))),a,null,be,o)}}),oa=tr({imag_:function(t){const e=Zn(t,"input","imag"),n={input:e};return Hn.runKernelFunc((t=>t.imag(e)),n,null,Kt)}}),la=tr({real_:function(t){const e=Zn(t,"input","real"),n={input:e};return Hn.runKernelFunc((t=>t.real(e)),n,null,we)}}),ua=tr({zerosLike_:function(t){const e=Zn(t,"x","zerosLike"),n={x:e};return Hn.runKernelFunc((t=>t.zerosLike(e)),n,null,Qe)}}),ca=tr({onesLike_:function(t){const e=Zn(t,"x","onesLike"),n={x:e};return Hn.runKernelFunc(((t,n)=>{if("complex64"===e.dtype){const t=ca(la(e)),n=ua(oa(e));return er(t,n)}return t.onesLike(e)}),n,null,ye)}}),ha=tr({pad_:function(t,e,n=0){const r=Zn(t,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:n},i={x:r};return Hn.runKernelFunc(((t,s)=>(s([r]),t.pad(r,e,n))),i,null,xe,s)}}),da=tr({prelu_:function(t,e){const n=Zn(t,"x","prelu"),r=Zn(e,"alpha","prelu"),s={x:n,alpha:r};return Hn.runKernelFunc(((t,e)=>{const s=t.prelu(n,r);return e([n,r]),s}),s,null,ve)}});var pa=n(6377);class fa{constructor(t,e,n,r,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=pa.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,s,i;do{r=2*this.random()-1,s=2*this.random()-1,i=r*r+s*s}while(i>=1||0===i);const a=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*r*a,e=this.mean+this.stdDev*s*a,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class ma{constructor(t=0,e=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=pa.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const ga=tr({randomNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const i=new fa(e,n,r,!1,s),a=Mr(t,r);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}}),ya=tr({randomUniform_:function(t,e=0,n=1,r="float32",s){const i=Mr(t,r),a=new ma(e,n,null,s);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}});function ba(t,e){p(t);const n=Xn(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return nr(t,null,n,e)}function xa(t,e,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:t,stop:e,step:n,dtype:r};return Hn.runKernelFunc((()=>{if(t===e||t<e&&n<0||e<t&&n>1)return Ji([0],r);const s=z(Math.abs(Math.ceil((e-t)/n)),r);e<t&&1===n&&(n=-1),s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+n;return ba(s,r)}),{},null,"Range",s)}const va=tr({relu_:function(t){const e=Zn(t,"x","relu"),n={x:e};return Hn.runKernelFunc(((t,n)=>(n([e]),"bool"===e.dtype?Lr(e,"int32"):t.relu(e))),n,null,Ie)}}),wa=tr({reverse_:function(t,e){const n=Zn(t,"x","reverse"),r={x:n},s={dims:e};return Hn.runKernelFunc((t=>{const r=k(e,n.shape);if(0===n.rank)return zr(n);const s=t.reverse(n,r);return _s(s,n.shape)}),r,null,Ne,s)}}),ka=tr({selu_:function(t){const e=Zn(t,"x","selu"),n={x:e};return Hn.runKernelFunc(((t,n)=>{const r=t.selu(e);return n([e]),r}),n,null,Fe)}}),Ia=tr({separableConv2d_:function(t,e,n,r,s,i=[1,1],a="NHWC"){const o=Zn(t,"x","separableConv2d"),l=Zn(e,"depthwiseFilter","separableConv2d"),u=Zn(n,"pointwiseFilter","separableConv2d");let c=o,d=!1;if(3===o.rank&&(d=!0,c=_s(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===a)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");h(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),h(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),h(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),h(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),h(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const p=l.shape[2],f=l.shape[3];h(u.shape[2]===p*f,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*f}, but got ${u.shape[2]}.`));const m=bi(c,l,r,s,a,i),g=pi(m,u,1,"valid",a);return d?_s(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),Ca=tr({sigmoid_:function(t){const e=Zn(t,"x","sigmoid"),n={x:e};return Hn.runKernelFunc(((t,n)=>{const r=t.sigmoid(e);return n([r]),r}),n,null,Le)}}),Sa=tr({slice_:function(t,e,n){const r=Zn(t,"x","slice");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},i={begin:e,size:n};return Hn.runKernelFunc(((t,s)=>{const[i,a]=us(r,e,n);return Xr(r,i,a),s([r]),t.slice(r,i,a)}),s,null,De,i)}}),Ea=tr({slice1d_:function(t,e,n){const r=Zn(t,"x","slice1d");return h(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Sa(r,[e],[n])}}),$a=tr({slice2d_:function(t,e,n){const r=Zn(t,"x","slice2d");return h(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Sa(r,e,n)}}),Na=tr({slice3d_:function(t,e,n){const r=Zn(t,"x","slice3d");return h(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Sa(r,e,n)}}),Ra=tr({slice4d_:function(t,e,n){const r=Zn(t,"x","slice4d");return h(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Sa(r,e,n)}}),Ta=tr({softmax_:function(t,e=-1){const n=Zn(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const r={logits:n},s={dim:e};return Hn.runKernelFunc(((t,r)=>{const s=t.softmax(n,e);return r([s]),s}),r,null,Ue,s)}}),Aa=tr({softplus_:function(t){const e=Zn(t,"x","softplus"),n={x:e};return Hn.runKernelFunc(((t,n)=>{const r=t.softplus(e);return n([e]),r}),n,null,ze)}});function Fa(t,e,n=0){let r=[];if("number"==typeof e)h(t.shape[n]%e==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(e).fill(t.shape[n]/e);else{h(e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0)<=1,(()=>"There should be only one negative value in split array."));const s=e.indexOf(-1);if(-1!==s){const r=e.reduce(((t,e)=>e>0?t+e:t));e[s]=t.shape[n]-r}h(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=e}return r}const Da=tr({split_:function(t,e,n=0){const r=Zn(t,"x","split"),s={x:r},i={numOrSizeSplits:e,axis:n};return Hn.runKernelFunc(((t,s)=>{const i=k(n,r.shape)[0],a=Fa(r,e,i);return t.split(r,a,i)}),s,null,We,i)}}),_a=tr({sqrt_:function(t){const e=Zn(t,"x","sqrt"),n={x:e};return Hn.runKernelFunc(((t,n)=>{const r=t.sqrt(e);return n([e]),r}),n,null,Be)}}),Oa=tr({squeeze_:function(t,e){const n=Zn(t,"x","squeeze");return _s(n,I(n.shape,e).newShape)}}),Ma=tr({stack_:function(t,e=0){const n=Qn(t,"tensors","stack");if(h(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),1===n.length)return $i(n[0],e);const r=n[0].rank,s=n[0].shape,i=n[0].dtype;h(e<=r,(()=>"Axis must be <= rank of the tensor")),n.forEach((t=>{d(s,t.shape,"All tensors passed to stack must have matching shapes"),h(i===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const a=n.map((t=>$i(t,e)));return li(a,e)}}),La=tr({tanh_:function(t){const e=Zn(t,"x","tanh"),n={x:e};return Hn.runKernelFunc(((t,n)=>{const r=t.tanh(e);return n([r]),r}),n,null,qe)}});function za(t,e,n){if(p(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Xn(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return nr(t,e,r,n)}function Ba(t,e,n){if(p(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Xn(t,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return nr(t,e,r,n)}function Pa(t,e,n){if(p(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Xn(t,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return nr(t,e,r,n)}const Wa=tr({truncatedNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const i=new fa(e,n,r,!0,s),a=Mr(t,r);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}}),Ua=tr({unstack_:function(t,e=0){const n=Zn(t,"x","unstack");h(e>=-n.shape.length&&e<n.shape.length,(()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`)),e<0&&(e+=n.shape.length);const r={value:n},s={axis:e};return Hn.runKernelFunc((t=>t.unstack(n,e)),r,null,Je,s)}}),Va=tr({broadcastTo_:function(t,e){let n=Zn(t,"broadcastTo","x");const r=n.shape;if(e.some((t=>!(t>0)||t%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=_s(n,t)}const s=n.shape,i=Array.from(e);for(let t=e.length-1;t>=0;t--)if(s[t]===e[t])i[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(0===i.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return zr(n);const a={x:n},o={shape:e,inputShape:s};return Hn.runKernelFunc((t=>t.tile(n,i)),a,null,dt,o)}}),Ga=tr({where_:function(t,e,n){const r=Zn(e,"a","where"),s=Zn(n,"b","where"),i=Zn(t,"condition","where","bool"),a=Ci(r.shape,s.shape),o=Va(r,a),l=Va(s,a);1===i.rank&&h(i.shape[0]===r.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==i.rank&&d(i.shape,l.shape,"Error in where: ");const u={condition:i,t:o,e:l};return Hn.runKernelFunc(((t,e)=>{const n=t.select(i,o,l);return e([i]),n}),u,null,Ae)}}),Ha=tr({dropout_:function(t,e,n,r){const s=Zn(t,"x","dropout");if(h("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),h(e>=0&&e<1,(()=>`rate must be a float in the range [0, 1), but got ${e}.`)),0===e)return t instanceof Nn?s.clone():s;const i=function(t,e){if(null==e)return t.shape.slice();if(g(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(s,n),a=1-e,o=vi(Ai(Ss(ya(i,0,1,"float32",r),a)),a);return Wi(s,o)}}),ja=tr({fft_:function(t){h("complex64"===t.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`));const e={input:t};return Hn.runKernelFunc((e=>{const n=t.shape[t.shape.length-1],r=t.size/n,s=t.as2D(r,n);return e.fft(s).reshape(t.shape)}),e,null,zt)}}),qa=tr({rfft_:function(t,e){h("float32"===t.dtype,(()=>"The dtype for rfft() must be real value but got "+t.dtype));let n=t.shape[t.shape.length-1];const r=t.size/n;let s;if(null!=e&&e<n){const r=t.shape.map((t=>0)),i=t.shape.map((t=>t));i[t.shape.length-1]=e,s=Sa(t,r,i),n=e}else if(null!=e&&e>n){const r=t.shape.map((t=>t));r[t.shape.length-1]=e-n,s=li([t,Ji(r)],t.shape.length-1),n=e}else s=t;const i=ua(s),a=_s(er(s,i),[r,n]),o=ja(a),l=Math.floor(n/2)+1,u=la(o),c=oa(o),d=Da(u,[l,n-l],u.shape.length-1),p=Da(c,[l,n-l],c.shape.length-1),f=s.shape.slice();return f[s.shape.length-1]=l,_s(er(d[0],p[0]),f)}}),Ka=tr({ifft_:function(t){h("complex64"===t.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`));const e={input:t};return Hn.runKernelFunc((e=>{const n=t.shape[t.shape.length-1],r=t.size/n,s=_s(t,[r,n]),i=e.ifft(s);return _s(i,t.shape)}),e,null,qt)}}),Xa=tr({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let r;if(e<=2){const s=_s(t,[n,e]);r=Ka(s)}else{const s=[n,2*(e-1)],i=_s(la(t),[n,e]),a=_s(oa(t),[n,e]),o=wa(Sa(i,[0,1],[n,e-2]),1),l=Wi(wa(Sa(a,[0,1],[n,e-2]),1),ks(-1)),u=li([i,o],1),c=li([a,l],1),h=_s(er(u,c),[s[0],s[1]]);r=Ka(h)}if(r=la(r),3===t.rank&&0!==t.shape[0]){const e=r,n=t.shape[0];r=_s(r,[n,r.shape[0]/n,r.shape[1]]),e.dispose()}return r}}),Ya=tr({conv2DBackpropFilter_:function(t,e,n,r,s,i="NHWC",a){let o=t;3===t.rank&&(o=_s(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=_s(e,[1,e.shape[0],e.shape[1],e.shape[2]])),h(4===o.rank,(()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+o.shape+".")),h(4===l.rank,(()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+l.shape+".")),h(4===n.length,(()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+"."));const u="NHWC"===i?o.shape[3]:o.shape[1],c="NHWC"===i?l.shape[3]:l.shape[1];h(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),h(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=a&&h(y(s),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`));const d={x:o,dy:l},p={strides:r,pad:s,dataFormat:i,dimRoundingMode:a,filterShape:n};return Hn.runKernelFunc((t=>{const e=Js(i),u=Us(o.shape,n,r,1,s,a,!1,e);return t.conv2dDerFilter(o,l,u)}),d,null,xt,p)}}),Ja=tr({relu6_:function(t){const e=Zn(t,"x","relu6"),n={x:e};return Hn.runKernelFunc(((t,n)=>(n([e]),"bool"===e.dtype?Lr(e,"int32"):t.relu6(e))),n,null,$e)}}),Za=tr({step_:function(t,e=0){const n=Zn(t,"x","step"),r={x:n},s={alpha:e};return Hn.runKernelFunc((t=>t.step(n,e)),r,null,tn,s)}});function Qa(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return Wi(t,Za(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function to(t,e){let n=e;const r=Ii(t.shape,e.shape);return r.length>0&&(n=ji(n,r)),_s(n,t.shape)}function eo(t,e,n){if("linear"===e)return t;if("relu"===e)return va(t);if("elu"===e)return wi(t);if("relu6"===e)return Ja(t);if("prelu"===e)return da(t,n);throw new Error(`Unknown fused activation ${e}.`)}const no=(t,e)=>!(t>0)||"linear"===e,ro=tr({fusedConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u}){if(l=l||"linear",!1===no(Hn.state.gradientDepth,l)){let c=pi(t,e,n,r,s,i,a);return null!=o&&(c=Ss(c,o)),eo(c,l,u)}const c=Zn(t,"x","conv2d"),d=Zn(e,"filter","conv2d");let p=c,f=!1;3===c.rank&&(f=!0,p=_s(c,[1,c.shape[0],c.shape[1],c.shape[2]])),h(4===p.rank,(()=>"Error in fused conv2d: input must be rank 4, but got rank "+p.rank+".")),h(4===d.rank,(()=>"Error in fused conv2d: filter must be rank 4, but got rank "+d.rank+".")),null!=a&&h(y(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`)),h(p.shape[3]===d.shape[2],(()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${d.shape[2]}.`)),h(Ys(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),h("NHWC"===s,(()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`));const m=Us(p.shape,d.shape,n,i,r,a);let g,b;null!=o&&(g=Zn(o,"bias","fused conv2d"),[g]=zn(g,c),Ci(m.outShape,g.shape)),null!=u&&(b=Zn(u,"prelu weights","fused conv2d"));const x=(t,e)=>{const[s,a,o,u]=e,c=Qa(t,o,l);h(Xs(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const d=[mi(a.shape,c,s,n,r),Ya(a,c,s.shape,n,r)];if(null!=u){const t=to(u,c);d.push(t)}return d},v=t=>t.fusedConv2d({input:p,filter:d,convInfo:m,bias:g,activation:l,preluActivationWeights:b}),w={x:p,filter:d,bias:g,preluActivationWeights:b},k={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a,activation:l};return null==o?ws(((t,e,n)=>{let r=Hn.runKernelFunc(v,w,null,rn,k);return n([e,t,r]),f&&(r=_s(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}))(p,d):ws(((t,e,n,r)=>{let s=Hn.runKernelFunc(v,w,null,rn,k);return r([e,t,s,n]),f&&(s=_s(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}}))(p,d,g)}}),so=tr({matMul_:function(t,e,n=!1,r=!1){let s=Zn(t,"a","matMul"),i=Zn(e,"b","matMul");[s,i]=zn(s,i);const a={a:s,b:i},o={transposeA:n,transposeB:r};return Hn.runKernelFunc(((t,e)=>{e([s,i]);const a=n?s.shape[s.rank-2]:s.shape[s.rank-1],o=r?i.shape[i.rank-1]:i.shape[i.rank-2],l=n?s.shape[s.rank-1]:s.shape[s.rank-2],u=r?i.shape[i.rank-2]:i.shape[i.rank-1],c=s.shape.slice(0,-2),d=i.shape.slice(0,-2),p=m(c),f=m(d),g=p===f||1===p||1===f;h(s.rank>=2&&i.rank>=2&&g,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${c}) and (${d}).`)),h(a===o,(()=>`Error in matMul: inner shapes (${a}) and (${o}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${n} and transposeB=${r} must match.`));const y=(p>f?c:d).concat([l,u]),b=_s(s,n?[p,a,l]:[p,l,a]),x=_s(i,r?[f,u,o]:[f,o,u]),v=t.batchMatMul(b,x,n,r);return _s(v,y)}),a,null,ct,o)}}),io=tr({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:s,activation:i="linear",preluActivationWeights:a}){if(!1===no(Hn.state.gradientDepth,i)){let o=so(t,e,n,r);return null!=s&&(o=Ss(o,s)),eo(o,i,a)}let o=Zn(t,"a","fused matMul"),l=Zn(e,"b","fused matMul");[o,l]=zn(o,l);const u=n?o.shape[o.rank-2]:o.shape[o.rank-1],c=r?l.shape[l.rank-1]:l.shape[l.rank-2],d=n?o.shape[o.rank-1]:o.shape[o.rank-2],p=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=o.shape.slice(0,-2),y=l.shape.slice(0,-2),b=m(f),x=m(y);h(o.rank>=2&&l.rank>=2&&o.rank===l.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${o.rank} and ${l.rank}.`)),h(g(f,y),(()=>`Error in fused matMul: outer dimensions (${f}) and (${y}) of Tensors with shapes ${o.shape} and `+l.shape+" must match.")),h(u===c,(()=>`Error in fused matMul: inner shapes (${u}) and (${c}) of Tensors with shapes ${o.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const v=o.shape.slice(0,-2).concat([d,p]),w=_s(o,n?[b,u,d]:[b,d,u]),k=_s(l,r?[x,p,c]:[x,c,p]);let I,C;null!=s&&(I=Zn(s,"bias","fused matMul"),[I]=zn(I,o),Ci(v,I.shape)),null!=a&&(C=Zn(a,"prelu weights","fused matMul"));const S=(t,e)=>{const[a,o,l,u]=e,c=Qa(_s(t,l.shape),l,i);let h,d;return n||r?!n&&r?(h=so(c,o,!1,!1),d=so(c,a,!0,!1)):n&&!r?(h=so(o,c,!1,!0),d=so(a,c,!1,!1)):(h=so(o,c,!0,!0),d=so(c,a,!0,!0)):(h=so(c,o,!1,!0),d=so(a,c,!0,!1)),null!=s?[h,d,to(u,c)]:[h,d]},E=t=>t.fusedBatchMatMul({a:w,b:k,transposeA:n,transposeB:r,bias:I,activation:i,preluActivationWeights:C}),$={a:w,b:k,bias:I,preluActivationWeights:C},N={transposeA:n,transposeB:r,activation:i};return null==s?ws(((t,e,n)=>{const r=Hn.runKernelFunc(E,$,null,nn,N);return n([t,e,r]),{value:_s(r,v),gradFunc:S}}))(w,k):ws(((t,e,n,r)=>{const s=Hn.runKernelFunc(E,$,null,nn,N);return r([t,e,s,n]),{value:_s(s,v),gradFunc:S}}))(w,k,I)}});function ao(t,e,n){const r=1-t%2,s=new Float32Array(t);for(let i=0;i<t;++i){const a=2*Math.PI*i/(t+r-1);s[i]=e-n*Math.cos(a)}return ba(s,"float32")}tr({hammingWindow_:function(t){return ao(t,.54,.46)}});const oo=tr({hannWindow_:function(t){return ao(t,.5,.5)}}),lo=tr({frame_:function(t,e,n,r=!1,s=0){let i=0;const a=[];for(;i+e<=t.size;)a.push(Sa(t,i,e)),i+=n;if(r)for(;i<t.size;){const r=i+e-t.size,o=li([Sa(t,i,e-r),Ti([r],s)]);a.push(o),i+=n}return 0===a.length?za([],[0,e]):_s(li(a),[a.length,e])}});function uo(t,e,n,r,s,i){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==i&&(i=0);const a=t.shape[0];return n=Math.min(n,a),h(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),h(2===t.rank,(()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`)),h(4===t.shape[1],(()=>"boxes must have 4 columns, but 2nd dimension was "+t.shape[1])),h(1===e.rank,(()=>"scores must be a 1D tensor")),h(e.shape[0]===a,(()=>`scores has incompatible shape with boxes. Expected ${a}, but was `+e.shape[0])),h(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:i}}function co(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,s=t.length,i=0,a=!1;for(;r<s;){i=r+(s-r>>>1);const o=n(e,t[i]);o>0?r=i+1:(s=i,a=!o)}return a?r:-r-1}(t,e,n||ho)}(t,e,n),s=r<0?-(r+1):r;t.splice(s,0,e)}function ho(t,e){return t>e?1:t<e?-1:0}function po(t,e,n,r,s){return go(t,e,n,r,s,0).selectedIndices}function fo(t,e,n,r,s,i){return go(t,e,n,r,s,0,!1,i,!0)}function mo(t,e,n,r,s,i){return go(t,e,n,r,s,i,!0)}function go(t,e,n,r,s,i,a=!1,o=!1,l=!1){const u=[];for(let t=0;t<e.length;t++)e[t]>s&&u.push({score:e[t],boxIndex:t,suppressBeginIndex:0});u.sort(xo);const c=i>0?-.5/i:0,h=[],d=[];for(;h.length<n&&u.length>0;){const e=u.pop(),{score:n,boxIndex:i,suppressBeginIndex:a}=e;if(n<s)break;let o=!1;for(let n=h.length-1;n>=a;--n){const a=yo(t,i,h[n]);if(a>=r){o=!0;break}if(e.score=e.score*bo(r,c,a),e.score<=s)break}e.suppressBeginIndex=h.length,o||(e.score===n?(h.push(i),d.push(e.score)):e.score>s&&co(u,e,xo))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:ba(h,"int32")};return a&&(m.selectedScores=ba(d,"float32")),l&&(m.validOutputs=ks(p,"int32")),m}function yo(t,e,n){const r=t.subarray(4*e,4*e+4),s=t.subarray(4*n,4*n+4),i=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-i)*(l-a),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(i,u),g=Math.max(a,c),y=Math.min(o,h),b=Math.min(l,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(p+f-x)}function bo(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function xo(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}tr({stft_:function(t,e,n,r,s=oo){var i;null==r&&(i=e,r=Math.floor(Math.pow(2,Math.ceil(Math.log(i)/Math.log(2)))));const a=lo(t,e,n),o=Wi(a,s(e)),l=[];for(let t=0;t<a.shape[0];t++)l.push(qa(Sa(o,[t,0],[1,e]),r));return li(l)}}),tr({cropAndResize_:function(t,e,n,r,s,i){const a=Zn(t,"image","cropAndResize"),o=Zn(e,"boxes","cropAndResize","float32"),l=Zn(n,"boxInd","cropAndResize","int32");s=s||"bilinear",i=i||0;const u=o.shape[0];h(4===a.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`)),h(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),h(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),h(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),h(r[0]>=1&&r[1]>=1,(()=>"cropSize must be atleast [1,1], but was "+r)),h("bilinear"===s||"nearest"===s,(()=>"method must be bilinear or nearest, but was "+s));const c={image:a,boxes:o,boxInd:l},d={method:s,extrapolationValue:i,cropSize:r};return Hn.runKernelFunc((t=>t.cropAndResize(a,o,l,r,s,i)),c,null,"CropAndResize",d)}}),tr({flipLeftRight_:function(t){const e=Zn(t,"image","flipLeftRight","float32");h(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const n={image:e};return Hn.runKernel(Pt,n,{})}}),tr({rotateWithOffset_:function(t,e,n=0,r=.5){const s=Zn(t,"image","rotateWithOffset","float32");h(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const i={image:s},a={radians:e,fillValue:n,center:r};return Hn.runKernel(en,i,a)}}),tr({nonMaxSuppression_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const i=Zn(t,"boxes","nonMaxSuppression"),a=Zn(e,"scores","nonMaxSuppression"),o=uo(i,a,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l={maxOutputSize:n,iouThreshold:r,scoreThreshold:s};return Hn.runKernelFunc((t=>t.nonMaxSuppression(i,a,n,r,s)),{boxes:i,scores:a},null,fe,l)}}),tr({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const a=Zn(t,"boxes","nonMaxSuppression"),o=Zn(e,"scores","nonMaxSuppression"),l=uo(a,o,n,r,s,i),u={boxes:a,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:i=l.softNmsSigma},h=Hn.runKernel(ge,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),tr({nonMaxSuppressionPadded_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const a=Zn(t,"boxes","nonMaxSuppression"),o=Zn(e,"scores","nonMaxSuppression"),l=uo(a,o,n,r,s,null),u={boxes:a,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:i},h=Hn.runKernel(me,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const vo=tr({resizeBilinear_:function(t,e,n=!1){const r=Zn(t,"images","resizeBilinear");h(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),h(2===e.length,(()=>"Error in resizeBilinear: new shape must 2D, but got shape "+e+"."));let s=r,i=!1;3===r.rank&&(i=!0,s=_s(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[a,o]=e,l={images:s},u={alignCorners:n,size:e},c=Hn.runKernelFunc(((t,e)=>(e([s]),t.resizeBilinear(s,a,o,n))),l,null,Ee,u);return i?_s(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),wo=tr({resizeNearestNeighbor_:function(t,e,n=!1){const r=Zn(t,"images","resizeNearestNeighbor");h(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),h(2===e.length,(()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+e+".")),h("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype"));let s=r,i=!1;3===r.rank&&(i=!0,s=_s(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[a,o]=e,l={images:s},u={alignCorners:n,size:e},c=Hn.runKernelFunc(((t,e)=>(e([s]),t.resizeNearestNeighbor(s,a,o,n))),l,null,Se,u);return i?_s(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),ko=tr({lessEqual_:function(t,e){let n=Zn(t,"a","lessEqual"),r=Zn(e,"b","lessEqual");[n,r]=zn(n,r),Ci(n.shape,r.shape);const s={a:n,b:r};return Hn.runKernelFunc(((t,e)=>{const s=t.lessEqual(n,r);return e([n,r]),s}),s,null,"LessEqual")}}),Io=tr({bandPart_:function(t,e,n){h(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),h(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Zn(t,"a","bandPart");h(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[i,a]=r.shape.slice(-2);if(!(e<=i))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${i}).`);if(!(n<=a))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`);e<0&&(e=i),n<0&&(n=a);const o=_s(xa(0,i,1,"int32"),[-1,1]),l=xa(0,a,1,"int32"),u=Hi(o,l),c=Ki(ko(u,ks(+e,"int32")),Bi(u,ks(-n,"int32"))),d=Ji([i,a],r.dtype);return _s(Ma(Ua(_s(r,[-1,i,a])).map((t=>Ga(c,t,d)))),s)}}),Co=tr({pow_:function(t,e){let n=Zn(t,"base","pow"),r=Zn(e,"exp","pow");[n,r]=zn(n,r);const s={a:n,b:r};return Hn.runKernelFunc(((t,e)=>{const s=t.pow(n,r);return e([n,r,s]),s}),s,null,"Pow")}});function So(t,e,n=null){if(0===t.rank)return Cs(t);if(1!==t.rank&&null===n)return So(_s(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return ji(Cs(t),n);if(e===1/0)return Gi(Cs(t),n);if(e===-1/0)return ta(Cs(t),n);if("euclidean"===e||2===e)return _a(ji(Co(Cs(t),ks(2,"int32")),n));throw new Error("Error in norm: invalid ord value: "+e)}if(Array.isArray(n)&&2===n.length){if(1===e)return Gi(ji(Cs(t),n[0]),n[1]-1);if(e===1/0)return Gi(ji(Cs(t),n[1]),n[0]);if(e===-1/0)return ta(ji(Cs(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return _a(ji(na(t),n));throw new Error("Error in norm: invalid ord value: "+e)}throw new Error("Error in norm: invalid axis: "+n)}const Eo=tr({norm_:function(t,e="euclidean",n=null,r=!1){const s=So(t=Zn(t,"x","norm"),e,n);let i=s.shape;if(r){const e=k(n,t.shape);i=Rs(s.shape,e)}return _s(s,i)}}),$o=tr({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,h(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)h(t[e].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`))}else e=!0,t=Da(t,t.shape[0],0).map((t=>Oa(t,[0])));h(t.length<=t[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`));const n=[],r=t;for(let e=0;e<t.length;++e)n.push(Hn.tidy((()=>{let t=r[e];if(e>0)for(let r=0;r<e;++r){const e=Wi(ji(Wi(n[r],t)),n[r]);t=Hi(t,e)}return vi(t,Eo(t,"euclidean"))})));return e?Ma(n,0):n}});function No(t,e=!1){return Hn.tidy((()=>{h(2===t.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`));const n=t.shape[0],r=t.shape[1];let s=Ri(n),i=zr(t);const a=za([[1]],[1,1]);let o=zr(a);const l=n>=r?r:n;for(let t=0;t<l;++t){const e=i,l=o,u=s;[o,i,s]=Hn.tidy((()=>{const e=Sa(i,[t,t],[n-t,1]),l=Eo(e),u=Sa(i,[t,t],[1,1]),c=Ga(zi(u,0),za([[-1]]),za([[1]])),h=Hi(u,Wi(c,l)),d=vi(e,h);o=1===d.shape[0]?zr(a):li([a,Sa(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=sa(vi(so(c,h),l)),f=Sa(i,[t,0],[n-t,r]),m=Wi(p,o),g=Os(o);if(0===t)i=Hi(f,so(m,so(g,f)));else{const e=Hi(f,so(m,so(g,f)));i=li([Sa(i,[0,0],[t,r]),e],0)}const y=Os(m),b=Sa(s,[0,t],[n,s.shape[1]-t]);if(0===t)s=Hi(b,so(so(b,o),y));else{const e=Hi(b,so(so(b,o),y));s=li([Sa(s,[0,0],[n,t]),e],1)}return[o,i,s]})),ys([e,l,u])}return!e&&n>r&&(s=Sa(s,[0,0],[n,r]),i=Sa(i,[0,0],[r,r])),[s,i]}))}const Ro=tr({qr_:function(t,e=!1){if(h(t.rank>=2,(()=>"qr() requires input tensor to have a rank >= 2, but got rank "+t.rank)),2===t.rank)return No(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),r=Ua(_s(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),s=[],i=[];return r.forEach((t=>{const[n,r]=No(t,e);s.push(n),i.push(r)})),[_s(Ma(s,0),t.shape),_s(Ma(i,0),t.shape)]}}});var To;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(To||(To={}));const Ao=tr({computeWeightedLoss_:function(t,e,n=To.SUM_BY_NONZERO_WEIGHTS){const r=Zn(t,"losses","computeWeightedLoss");let s=null;null!=e&&(s=Zn(e,"weights","computeWeightedLoss"));const i=null==s?r:Wi(r,s);if(n===To.NONE)return i;if(n===To.SUM)return ji(i);if(n===To.MEAN){if(null==s)return Qi(i);{const t=r.size/s.size,e=vi(ji(i),ji(s));return t>1?vi(e,ks(t)):e}}if(n===To.SUM_BY_NONZERO_WEIGHTS){if(null==s)return vi(ji(i),ks(r.size));{const t=Wi(s,Zi(r.shape)),e=Lr(ji(ia(t,ks(0))),"float32");return vi(ji(i),e)}}throw Error("Unknown reduction: "+n)}});tr({absoluteDifference_:function(t,e,n,r=To.SUM_BY_NONZERO_WEIGHTS){const s=Zn(t,"labels","absoluteDifference"),i=Zn(e,"predictions","absoluteDifference");let a=null;null!=n&&(a=Zn(n,"weights","absoluteDifference")),d(s.shape,i.shape,"Error in absoluteDifference: ");const o=Cs(Hi(s,i));return Ao(o,a,r)}}),tr({cosineDistance_:function(t,e,n,r,s=To.SUM_BY_NONZERO_WEIGHTS){const i=Zn(t,"labels","cosineDistance"),a=Zn(e,"predictions","cosineDistance");let o=null;null!=r&&(o=Zn(r,"weights","cosineDistance")),d(i.shape,a.shape,"Error in cosineDistance: ");const l=ks(1),u=Hi(l,ji(Wi(i,a),n,!0));return Ao(u,o,s)}}),tr({hingeLoss_:function(t,e,n,r=To.SUM_BY_NONZERO_WEIGHTS){let s=Zn(t,"labels","hingeLoss");const i=Zn(e,"predictions","hingeLoss");let a=null;null!=n&&(a=Zn(n,"weights","hingeLoss")),d(s.shape,i.shape,"Error in hingeLoss: ");const o=ks(1);s=Hi(Wi(ks(2),s),o);const l=va(Hi(o,Wi(s,i)));return Ao(l,a,r)}}),tr({huberLoss_:function(t,e,n,r=1,s=To.SUM_BY_NONZERO_WEIGHTS){const i=Zn(t,"labels","huberLoss"),a=Zn(e,"predictions","huberLoss");let o=null;null!=n&&(o=Zn(n,"weights","huberLoss")),d(i.shape,a.shape,"Error in huberLoss: ");const l=ks(r),u=Cs(Hi(a,i)),c=ea(u,l),h=Hi(u,c),p=Ss(Wi(ks(.5),na(c)),Wi(l,h));return Ao(p,o,s)}}),tr({logLoss_:function(t,e,n,r=1e-7,s=To.SUM_BY_NONZERO_WEIGHTS){const i=Zn(t,"labels","logLoss"),a=Zn(e,"predictions","logLoss");let o=null;null!=n&&(o=Zn(n,"weights","logLoss")),d(i.shape,a.shape,"Error in logLoss: ");const l=ks(1),u=ks(r),c=sa(Wi(i,Vi(Ss(a,u)))),h=Wi(Hi(l,i),Vi(Ss(Hi(l,a),u))),p=Hi(c,h);return Ao(p,o,s)}});const Fo=tr({squaredDifference_:function(t,e){let n=Zn(t,"a","squaredDifference"),r=Zn(e,"b","squaredDifference");[n,r]=zn(n,r),Ci(n.shape,r.shape);const s={a:n,b:r};return Hn.runKernelFunc(((t,e)=>{const s=t.squaredDifference(n,r);return e([n,r]),s}),s,null,Ve,{})}});tr({meanSquaredError_:function(t,e,n,r=To.SUM_BY_NONZERO_WEIGHTS){const s=Zn(t,"labels","meanSquaredError"),i=Zn(e,"predictions","meanSquaredError");let a=null;null!=n&&(a=Zn(n,"weights","meanSquaredError")),d(s.shape,i.shape,"Error in meanSquaredError: ");const o=Fo(s,i);return Ao(o,a,r)}});const Do=tr({log1p_:function(t){const e=Zn(t,"x","log1p"),n={x:e};return Hn.runKernelFunc(((t,n)=>{const r=t.log1p(e);return n([e]),r}),n,null,Qt)}});tr({sigmoidCrossEntropy_:function(t,e,n,r=0,s=To.SUM_BY_NONZERO_WEIGHTS){let i=Zn(t,"multiClassLabels","sigmoidCrossEntropy");const a=Zn(e,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Zn(n,"weights","sigmoidCrossEntropy")),d(i.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=ks(r),e=ks(1),n=ks(.5);i=Ss(Wi(i,Hi(e,t)),Wi(n,t))}const l=function(t,e){const n=Zn(t,"labels","sigmoidCrossEntropyWithLogits"),r=Zn(e,"logits","sigmoidCrossEntropyWithLogits");d(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=va(r),i=Wi(r,n),a=Do(Ei(sa(Cs(r))));return Ss(Hi(s,i),a)}(i,a);return Ao(l,o,s)}});const _o=tr({logSumExp_:function(t,e=null,n=!1){const r=Zn(t,"x","logSumExp"),s=k(e,r.shape),i=Gi(r,s,!0),a=Hi(r,i),o=Ei(a),l=ji(o,s),u=Vi(l),c=Ss(_s(i,u.shape),u);if(n){const t=Rs(c.shape,s);return _s(c,t)}return c}});tr({softmaxCrossEntropy_:function(t,e,n,r=0,s=To.SUM_BY_NONZERO_WEIGHTS){let i=Zn(t,"onehotLabels","softmaxCrossEntropy");const a=Zn(e,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Zn(n,"weights","softmaxCrossEntropy")),d(i.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const t=ks(r),e=ks(1),n=ks(i.shape[1]);i=Ss(Wi(i,Hi(e,t)),vi(t,n))}const l=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was `+n);return ws(((t,e,r)=>{const s=_o(e,[n],!0),i=Hi(Lr(e,"float32"),s);r([t,i]);const a=sa(Wi(i,t));return{value:ji(a,[n]),gradFunc:(t,e)=>{const[r,s]=e,i=Rs(t.shape,[n]);return[Wi(_s(t,i),Hi(Lr(r,"float32"),Ei(s))),Wi(_s(t,i),Hi(Ei(s),Lr(r,"float32")))]}}}))(t,e)}(i,a);return Ao(l,o,s)}});const Oo={bandPart:Io,gramSchmidt:$o,qr:Ro};class Mo extends Is{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Hn.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Hn.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:e+"/accum_grad",variable:gs((()=>ua(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:e+"/accum_var",variable:gs((()=>ua(r).variable(!1)))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const i=this.accumulatedGrads[n].variable,a=this.accumulatedUpdates[n].variable;gs((()=>{const t=Ss(Wi(i,this.rho),Wi(na(s),1-this.rho)),e=Wi(vi(_a(Ss(a,this.epsilon)),_a(Ss(i,this.epsilon))),s),n=Ss(Wi(a,this.rho),Wi(na(e),1-this.rho));i.assign(t),a.assign(n);const o=Ss(Wi(e,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(ys(this.accumulatedGrads.map((t=>t.variable))),ys(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}Mo.className="Adadelta",ds(Mo);class Lo extends Is{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Hn.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:e+"/accumulator",variable:gs((()=>Ti(r.shape,this.initialAccumulatorValue).variable(t)))}}const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const i=this.accumulatedGrads[n].variable;gs((()=>{const t=Ss(i,na(s));i.assign(t);const e=Ss(Wi(vi(s,_a(Ss(t,Hn.backend.epsilon()))),-this.learningRate),r);r.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&ys(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}Lo.className="Adagrad",ds(Lo);class zo extends Is{constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],gs((()=>{this.accBeta1=ks(e).variable(),this.accBeta2=ks(n).variable()})),null==r&&(this.epsilon=Hn.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);gs((()=>{const n=Hi(1,this.accBeta1),r=Hi(1,this.accBeta2);e.forEach(((e,s)=>{const i=Hn.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:e+"/m",variable:gs((()=>ua(i).variable(!1)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:e+"/v",variable:gs((()=>ua(i).variable(!1)))});const a=Array.isArray(t)?t[s].tensor:t[e];if(null==a)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=Ss(Wi(o,this.beta1),Wi(a,1-this.beta1)),c=Ss(Wi(l,this.beta2),Wi(na(a),1-this.beta2)),h=vi(u,n),d=vi(c,r);o.assign(u),l.assign(c);const p=Ss(Wi(vi(h,Ss(_a(d),this.epsilon)),-this.learningRate),i);i.assign(p)})),this.accBeta1.assign(Wi(this.accBeta1,this.beta1)),this.accBeta2.assign(Wi(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&ys(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&ys(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),gs((()=>{this.accBeta1.assign(Co(this.beta1,this.iterations_+1)),this.accBeta2.assign(Co(this.beta2,this.iterations_+1))}));const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}zo.className="Adam",ds(zo);class Bo extends Is{constructor(t,e,n,r=null,s=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],gs((()=>{this.iteration=ks(0).variable(),this.accBeta1=ks(e).variable()})),null==r&&(this.epsilon=Hn.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);gs((()=>{const n=Hi(1,this.accBeta1),r=vi(-this.learningRate,Ss(Wi(this.iteration,this.decay),1));e.forEach(((e,s)=>{const i=Hn.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:e+"/m",variable:ua(i).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:e+"/v",variable:ua(i).variable(!1)});const a=Array.isArray(t)?t[s].tensor:t[e];if(null==a)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=Ss(Wi(o,this.beta1),Wi(a,1-this.beta1)),c=Wi(l,this.beta2),h=Cs(a),d=Pi(c,h);o.assign(u),l.assign(d);const p=Ss(Wi(vi(r,n),vi(u,Ss(d,this.epsilon))),i);i.assign(p)})),this.iteration.assign(Ss(this.iteration,1)),this.accBeta1.assign(Wi(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&ys(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&ys(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}Bo.className="Adamax",ds(Bo);class Po extends Is{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const s=Hn.registeredVariables[e];gs((()=>{const t=Ss(Wi(this.c,r),s);s.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=bs(ks(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}Po.className="SGD",ds(Po);class Wo extends Po{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=ks(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Hn.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:e+"/momentum",variable:gs((()=>ua(r).variable(t)))}}const s=this.accumulations[n].variable,i=Array.isArray(t)?t[n].tensor:t[e];null!=i&&gs((()=>{let t;const e=Ss(Wi(this.m,s),i);t=this.useNesterov?Ss(Wi(this.c,Ss(i,Wi(e,this.m))),r):Ss(Wi(this.c,e),r),s.assign(e),r.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&ys(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}Wo.className="Momentum",ds(Wo);class Uo extends Is{constructor(t,e=.9,n=0,r=null,s=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=Hn.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Hn.registeredVariables[e],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:e+"/rms",variable:gs((()=>ua(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:e+"/momentum",variable:gs((()=>ua(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:e+"/mg",variable:gs((()=>ua(r).variable(s)))});const i=Array.isArray(t)?t[n].tensor:t[e];if(null==i)return;const a=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;gs((()=>{const t=Ss(Wi(a,this.decay),Wi(na(i),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,s=Ss(Wi(e,this.decay),Wi(i,1-this.decay)),l=vi(Wi(i,this.learningRate),_a(Hi(t,Ss(na(s),this.epsilon)))),u=Ss(Wi(o,this.momentum),l);a.assign(t),e.assign(s),o.assign(u);const c=Hi(r,u);r.assign(c)}else{const t=Ss(Wi(a,this.decay),Wi(na(i),1-this.decay)),e=Ss(Wi(o,this.momentum),vi(Wi(i,this.learningRate),_a(Ss(t,this.epsilon))));a.assign(t),o.assign(e);const n=Hi(r,e);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&ys(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&ys(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&ys(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}Uo.className="RMSProp",ds(Uo);class Vo{static sgd(t){return new Po(t)}static momentum(t,e,n=!1){return new Wo(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,s=!1){return new Uo(t,e,n,r,s)}static adam(t=.001,e=.9,n=.999,r=null){return new zo(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new Mo(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,s=0){return new Bo(t,e,n,r,s)}static adagrad(t,e=.1){return new Lo(t,e)}}const Go={sgd:Vo.sgd,momentum:Vo.momentum,adadelta:Vo.adadelta,adagrad:Vo.adagrad,rmsprop:Vo.rmsprop,adamax:Vo.adamax,adam:Vo.adam},Ho="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();function jo(){return new Promise((t=>Ho((()=>t()))))}function qo(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function Ko(t,e,n,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(t[0]/n),s=s.concat(t.slice(1));else{s=s.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)s=s.concat([t[r+1]/e[r],e[r]]);s=s.concat(t.slice(n+1))}return s}function Xo(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<t;++r)r>=2*e+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Yo(t,e,n,r=!0){const s=[];r?s.push(t[0]/n):s.push(t[0]*n);for(let n=1;n<t.length;++n)n<=e.length?r?s.push(e[n-1]*t[n]):s.push(t[n]/e[n-1]):s.push(t[n]);return s}function Jo(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function Zo(t,e,n){const r=t.slice(0,1);for(let s=0;s<n;++s)r.push(t[s+1]-e[s][0]-e[s][1]);return r}function Qo(t,e){if(t.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[e.rank-1]>t.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[e.rank-1]} vs. ${t.rank}`);if(0===t.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const n=e.shape,r=n[n.length-1];let s=1;for(let t=0;t<n.length-1;++t)s*=n[t];const i=t.shape,a=n.slice();a.pop();let o=1;for(let e=r;e<t.rank;++e)o*=i[e],a.push(i[e]);const l=[..._(t.shape).map((t=>t/o)),1].slice(0,r);return[a,s,o,l]}function tl(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,i="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${e.shape}, shape: ${t}`+`, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(i+` update.rank < ${s}. `);if(t.length<r+(n.rank-s))throw new Error(i+" Output shape length < "+(r+(n.rank-s)));if(n.rank!==s+t.length-r)throw new Error(i+" update.rank != "+(s+t.length-r));for(let t=0;t<s;++t)if(n.shape[t]!==e.shape[t])throw new Error(i+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-s;++e)if(n.shape[e+s]!==t[e+r])throw new Error(i+` updates.shape[${e+s}] (${n.shape[e+s]}) != shape[${e+s}] (${t[e+s]})`)}function el(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+e.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===e.size)throw new Error("Indices specified for empty output. indices shape: "+e.shape);if(0===t.size)throw new Error("Updates specified for empty output. updates shape: "+t.shape)}tl(n,e,t)}function nl(t,e,n){const r=e.shape.length,s=r>1?e.shape[r-1]:1,i=n.length;let a=1;for(let t=s;t<i;++t)a*=n[t];const o=s<1?1:s;return{sliceRank:s,numUpdates:m(e.shape)/o,sliceSize:a,strides:[..._(n.slice(0,s)),1],outputSize:m(n)}}const rl=1.7580993408473768,sl=1.0507009873554805,il=.3275911,al=.254829592,ol=-.284496736,ll=1.421413741,ul=-1.453152027,cl=1.061405429;function hl(...t){H().getBool("IS_TEST")||console.warn(...t)}function dl(...t){H().getBool("IS_TEST")||console.log(...t)}function pl(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function fl(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function ml(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function gl(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function yl(t,e){return{real:t[2*e],imag:t[2*e+1]}}function bl(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function xl(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let s=0;s<Math.ceil(t/2);s++){const i=(e?2:-2)*Math.PI*(s/t);n[s]=Math.cos(i),r[s]=Math.sin(i)}return{real:n,imag:r}}function vl(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}function wl(t,e,n){if("complex64"===e){if("complex64"===t.dtype)return t.clone();const e=Ji(t.shape),r=Lr(t,"float32"),s=n.complex(r,e);return e.dispose(),r.dispose(),s}if(!E(t.dtype,e))return Hn.makeTensorFromDataId(t.dataId,t.shape,e);if("complex64"===t.dtype){const r=n.real(t),s=Lr(r,e);return r.dispose(),s}if("int32"===e)return n.int(t);if("bool"===e){const e=ks(0,t.dtype),r=n.notEqual(t,e);return e.dispose(),r}throw new Error(`Error in Cast: failed to cast ${t.dtype} to ${e}`)}function kl(t,e){return Hn.makeTensorFromDataId(t.dataId,e,t.dtype)}function Il(t,e,n){const r=(e-t)/(n-1),s=z(n,"float32");s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+r;return ba(s,"float32")}function Cl(t,e,n){const r=new Array(t.rank).fill(0),s=t.shape.slice();return e.map((e=>{const i=[...s];i[n]=e;const a=Sa(t,r,i);return r[n]+=e,a}))}function Sl(t,e){const n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];const r=Mr(n,t.dtype);for(let e=0;e<r.values.length;++e){const n=r.indexToLoc(e),s=new Array(t.rank);for(let e=0;e<s.length;e++)s[e]=n[e]%t.shape[e];const i=t.locToIndex(s);r.values[e]=t.values[i]}return r.toTensor()}function El(t,e,n,r,s){const i=e[e.length-1],[a,o]=[t.length/i,i],l=C(n,a*r),u=C("int32",a*r);for(let e=0;e<a;e++){const n=e*o,s=t.subarray(n,n+o),i=[];for(let t=0;t<s.length;t++)i.push({value:s[t],index:t});i.sort(((t,e)=>e.value-t.value));const a=e*r,c=l.subarray(a,a+r),h=u.subarray(a,a+r);for(let t=0;t<r;t++)c[t]=i[t].value,h[t]=i[t].index}const c=e.slice();return c[c.length-1]=r,[rr(l,c,n),rr(u,c,"int32")]}function $l(t,e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(t);const r=Mr(t,"int32"),s=Mr([n.length,t.length],"int32");for(let e=0;e<n.length;e++){const i=r.indexToLoc(n[e]),a=e*t.length;s.values.set(i,a)}return s.toTensor()}const Nl={kernelName:Y,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Wi(t,Za(Lr(n,"float32"),-1))}}},Rl={kernelName:J,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=na(Lr(n,"float32")),r=_a(Hi(ks(1),e));return sa(vi(t,r))}}}},Tl={kernelName:Z,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=_a(Hi(na(Lr(n,"float32")),1));return vi(t,e)}}}},Al={kernelName:Q,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ci(n.shape,r.shape);return{a:()=>{let e=t;const r=Ii(n.shape,s);return r.length>0&&(e=ji(e,r)),_s(e,n.shape)},b:()=>{let e=t;const n=Ii(r.shape,s);return n.length>0&&(e=ji(e,n)),_s(e,r.shape)}}}},Fl={kernelName:tt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ua(n)}}},Dl={kernelName:et,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ua(n)}}},_l={kernelName:nt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>vi(t,_a(Hi(ks(1),na(Lr(n,"float32")))))}}},Ol={kernelName:rt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=_a(Ss(ks(1),na(Lr(n,"float32"))));return vi(t,e)}}}},Ml={kernelName:at,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ci(n.shape,r.shape);return{a:()=>{const e=Ss(na(n),na(r));let i=Wi(t,vi(r,e));const a=Ii(n.shape,s);return a.length>0&&(i=ji(i,a)),_s(i,n.shape)},b:()=>{const e=Ss(na(n),na(r));let i=sa(Wi(t,vi(n,e)));const a=Ii(r.shape,s);return a.length>0&&(i=ji(i,a)),_s(i,r.shape)}}}},Ll={kernelName:st,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>vi(t,Ss(na(Lr(n,"float32")),1))}}},zl={kernelName:it,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>vi(t,Hi(ks(1),na(Lr(n,"float32"))))}}},Bl=tr({avgPool3dBackprop_:function(t,e,n,r,s=[1,1,1],i,a){const o=Zn(t,"dy","avgPool3dBackprop"),l=Zn(e,"input","avgPool3dBackprop");let u=o,c=l,d=!1;4===l.rank&&(d=!0,u=_s(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=_s(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),h(5===u.rank,(()=>"Error in avgPool3dBackprop: dy must be rank 5 but got rank "+u.rank+".")),h(5===c.rank,(()=>"Error in avgPool3dBackprop: input must be rank 5 but got rank "+c.rank+".")),h(Ys(r,s),(()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`)),null!=a&&h(y(i),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`));const p={dy:u,input:c},f={filterSize:n,strides:r,dilations:s,pad:i,dimRoundingMode:a},m=Hn.runKernelFunc((t=>{const e=Ws(c.shape,n,r,s,i,a);return t.avgPool3dBackprop(u,c,e)}),p,null,"AvgPool3DBackprop",f);return d?_s(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),Pl={kernelName:ut,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:i,dilations:a,pad:o,dimRoundingMode:l}=n,u=null==a?[1,1,1]:a;return{x:()=>Bl(t,r,s,i,u,o,l)}}},Wl=tr({avgPoolBackprop_:function(t,e,n,r,s){const i=Zn(t,"dy","avgPoolBackprop"),a=Zn(e,"input","avgPoolBackprop");h(a.rank===i.rank,(()=>`Rank of input (${a.rank}) does not match rank of dy (${i.rank})`));let o=a,l=i,u=!1;3===a.rank&&(u=!0,o=_s(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=_s(i,[1,i.shape[0],i.shape[1],i.shape[2]])),h(4===l.rank,(()=>"Error in avgPoolBackprop: dy must be rank 4 but got rank "+l.rank+".")),h(4===o.rank,(()=>"Error in avgPoolBackprop: input must be rank 4 but got rank "+o.rank+"."));const c={dy:l,input:o},d={filterSize:n,strides:r,pad:s},p=Hn.runKernelFunc((t=>{const e=Ps(o.shape,n,r,1,s);return t.avgPoolBackprop(l,o,e)}),c,null,lt,d);return u?_s(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Ul={kernelName:ot,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:i,pad:a}=n;return{x:()=>Wl(t,r,s,i,a)}}},Vl={kernelName:ct,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,s]=e,{transposeA:i,transposeB:a}=n;return i||a?!i&&a?{a:()=>so(t,s,!1,!1),b:()=>so(t,r,!0,!1)}:i&&!a?{a:()=>so(s,t,!1,!0),b:()=>so(r,t,!1,!1)}:{a:()=>so(s,t,!0,!0),b:()=>so(t,r,!0,!0)}:{a:()=>so(t,s,!1,!0),b:()=>so(r,t,!0,!1)}}},Gl=tr({spaceToBatchND_:function(t,e,n){const r=Zn(t,"x","spaceToBatchND");h(r.rank>=1+e.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`)),h(n.length===e.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`)),h(r.shape.reduce(((t,r,s)=>s>0&&s<=e.length?t&&(r+n[s-1][0]+n[s-1][1])%e[s-1]==0:t),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`));const s={x:r},i={blockShape:e,paddings:n};return Hn.runKernelFunc((t=>t.spaceToBatchND(r,e,n)),s,null,Pe,i)}}),Hl={kernelName:ht,gradFunc:(t,e,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>Gl(t,r,s)}}},jl={kernelName:dt,gradFunc:(t,e,n)=>{const r=n,s=r.inputShape,i=r.shape,a=Array.from(i);for(let t=s.length-1;t>=0;t--)if(s[t]===i[t])a[t]=1;else if(1!==s[t])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${i}].`);const o=[];for(let t=0;t<a.length;t++)a[t]>1&&o.push(t);return{x:()=>ji(t,o,!0)}}},ql={kernelName:pt,gradFunc:t=>({x:()=>t.clone()})},Kl={kernelName:ft,gradFunc:t=>({x:()=>ua(t)})},Xl={kernelName:mt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:s,clipValueMax:i}=n;return{x:()=>Ga(Ki(Bi(r,s),ko(r,i)),t,ua(t))}}},Yl={kernelName:yt,saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map((t=>t.shape)),{axis:s}=n,i=k(s,e[0].shape)[0],a=r.map((t=>t[i]));return Da(t,a,i).map((t=>()=>t))}},Jl={kernelName:bt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{dilations:i,strides:a,pad:o,dataFormat:l}=n;return h(Xs(i),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`)),{x:()=>mi(r.shape,t,s,a,o,l),filter:()=>Ya(r,t,s.shape,a,o,l)}}},Zl={kernelName:vt,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{strides:i,pad:a,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>pi(t,s,i,a,o,1,l),filter:()=>Ya(t,r,s.shape,i,a,o,l)}}},Ql=tr({conv3DBackpropFilter_:function(t,e,n,r,s){let i=t;4===t.rank&&(i=_s(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let a=e;4===a.rank&&(a=_s(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),h(5===i.rank,(()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+i.shape+".")),h(5===a.rank,(()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+a.shape+".")),h(5===n.length,(()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+".")),h(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),h(a.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:i,dy:a},l={strides:r,pad:s,filterShape:n};return Hn.runKernelFunc((t=>{const e=Vs(i.shape,n,r,1,s);return t.conv3dDerFilter(i,a,e)}),o,null,kt,l)}}),tu=tr({conv3DBackpropInput_:function(t,e,n,r,s){h(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let i=t,a=e,o=!1;4===e.rank&&(o=!0,a=_s(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),i=[1,t[0],t[1],t[2],t[3]]);const l=i[4],u=a.shape[4];h(5===i.length,(()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+i.length+".")),h(5===a.rank,(()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+a.rank)),h(5===n.rank,(()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank)),h(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),h(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:a,filter:n},d={pad:s,strides:r,inputShape:i},p=Hn.runKernelFunc((t=>{const e=Vs(i,n.shape,r,1,s);return t.conv3dDerInput(a,n,e)}),c,null,It,d);return o?_s(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),eu={kernelName:wt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:i}=n;h(Xs(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[a,o]=e;return{x:()=>tu(a.shape,t,o,s,i),filter:()=>Ql(a,t,o.shape,s,i)}}},nu=tr({sin_:function(t){const e=Zn(t,"x","sin"),n={x:e};return Hn.runKernelFunc(((t,n)=>{const r=t.sin(e);return n([e]),r}),n,null,_e)}}),ru={kernelName:Ct,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Wi(sa(nu(Lr(n,"float32"))),t)}}},su=tr({sinh_:function(t){const e=Zn(t,"x","sinh"),n={x:e};return Hn.runKernelFunc(((t,n)=>{const r=t.sinh(e);return n([e]),r}),n,null,Oe)}}),iu={kernelName:St,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Wi(su(Lr(n,"float32")),t)}}},au=tr({cumsum_:function(t,e=0,n=!1,r=!1){const s=Zn(t,"x","cumsum"),i={x:s},a={axis:e,exclusive:n,reverse:r};return Hn.runKernelFunc(((t,i)=>{const a=As([e],s.rank);let o=s;null!=a&&(o=Os(s,a));const l=Ds(1,s.rank)[0];let u=t.cumsum(o,l,n,r);if(i([s]),null!=a){const t=Fs(a);u=Os(u,t)}return u}),i,null,Et,a)}}),ou={kernelName:Et,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:s,exclusive:i,reverse:a}=n;return{x:()=>{const e=As([s],r.rank);let n=au(t,s,i,!a);return null!=e&&(n=Os(n,e)),n}}}},lu=tr({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,r,s,i=[1,1],a){let o=t;3===t.rank&&(o=_s(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=_s(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:s,dimRoundingMode:a,dilations:i,filterShape:n};return Hn.runKernelFunc((e=>{const u=Us(t.shape,n,r,i,s,a,!0);return e.depthwiseConv2DDerFilter(o,l,u)}),u,null,Nt,c)}}),uu=tr({depthwiseConv2dNativeBackpropInput_:function(t,e,n,r,s,i=[1,1],a){let o=e,l=!1;3===e.rank&&(l=!0,o=_s(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:a,dilations:i,inputShape:t},h=Hn.runKernelFunc((e=>{const l=Us(t,n.shape,r,i,s,a,!0);return e.depthwiseConv2DDerInput(o,n,l)}),u,null,Rt,c);return l?_s(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),cu={kernelName:$t,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:i,dimRoundingMode:a}=n,o=null==r?[1,1]:r;h(Xs(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=e;return h(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),h(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),h(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),h(Ys(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),null!=a&&h(y(i),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`)),{x:()=>uu(l.shape,t,u,s,i,r,a),filter:()=>lu(l,t,u.shape,s,i,r,a)}}},hu={kernelName:Tt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,i={x:r,filter:s,dy:t},a={x:r,filter:s,dy:t};return{x:()=>Hn.runKernel(At,i,n),filter:()=>Hn.runKernel(Ft,a,n)}}},du={kernelName:Dt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ci(n.shape,r.shape);return{a:()=>{const e=vi(t,Lr(r,"float32")),i=Ii(n.shape,s);return i.length>0?_s(ji(e,i),n.shape):e},b:()=>{let e=Wi(t,Lr(n,"float32"));const i=Ii(r.shape,s);i.length>0&&(e=_s(ji(e,i),r.shape));const a=na(r);return sa(vi(e,Lr(a,"float32")))}}}},pu={kernelName:_t,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r=e=>e.eluDer(t,n),s={dy:t,y:n};return{x:()=>Hn.runKernelFunc(r,s,null,"EluGrad")}}},fu={kernelName:Ot,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Wi(Ei(sa(na(n))),2/Math.sqrt(Math.PI));return{x:()=>Wi(t,r)}}},mu={kernelName:Mt,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Wi(t,n)}}},gu={kernelName:Lt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Wi(t,Ei(n))}}},yu={kernelName:Wt,gradFunc:t=>({x:()=>ua(t)})},bu={kernelName:Ut,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ci(n.shape,r.shape);return{a:()=>{const e=vi(t,Lr(r,"float32")),i=Ii(n.shape,s);return i.length>0?_s(ji(e,i),n.shape):e},b:()=>{let e=Wi(t,Lr(n,"float32"));const i=Ii(r.shape,s);i.length>0&&(e=_s(ji(e,i),r.shape));const a=na(r);return sa(vi(e,Lr(a,"float32")))}}}},xu=tr({rsqrt_:function(t){const e=Zn(t,"x","rsqrt"),n={x:e};return Hn.runKernelFunc(((t,n)=>{const r=t.rsqrt(e);return n([e]),r}),n,null,Te)}}),vu={kernelName:Vt,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[s,i,a,o]=e,l=null==o?ks(1):o,u=Ii(i.shape,s.shape),c=[];if(1===i.rank){for(let t=0;t<s.shape.length-1;++t)c.push(s.shape[t]);c.push(1)}const h=Hi(s,i),d=Wi(t,l),p=xu(Ss(a,ks(r))),f=Wi(Wi(Wi(p,p),p),ks(-.5));return{x:()=>1===i.rank?_s(Wi(Wi(t,Ni(_s(p,[1,1,1,i.shape[0]]),c)),l),s.shape):_s(Wi(Wi(t,p),l),s.shape),mean:()=>{let t=Wi(Wi(p,ks(-1)),d);return 1===i.rank&&(t=ji(t,u)),_s(t,i.shape)},variance:()=>{let t=Wi(Wi(f,h),d);return 1===i.rank&&(t=ji(t,u)),_s(t,i.shape)},scale:()=>{const e=Wi(h,p);let n=Wi(t,e);return 1===i.rank&&(n=ji(n,u)),_s(n,i.shape)},offset:()=>{let e=t;return 1===i.rank&&(e=ji(e,u)),_s(e,i.shape)}}}},wu=tr({unsortedSegmentSum_:function(t,e,n){const r=Zn(t,"x","unsortedSegmentSum"),s=Zn(e,"segmentIds","unsortedSegmentSum","int32");h(y(n),(()=>"numSegments must be of dtype int"));const i={x:r,segmentIds:s},a={numSegments:n};return Hn.runKernelFunc(((t,e)=>{const i=t.unsortedSegmentSum(r,s,n);return e([s]),i}),i,null,Ze,a)}}),ku={kernelName:Gt,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,s]=e,{axis:i}=n,a=k(i,r.shape)[0];return{x:()=>{const e=r.shape,n=s.size,o=e.slice(0,a),l=o.length,u=e.slice(i,e.length).slice(1),c=u.length,h=Iu(0,l),d=Iu(l+1,l+1+c),p=Cu([o,[n],u]),f=_s(t,p),m=_s(s,[n]),g=Cu([[l],h,d]),y=Os(f,g);let b=wu(y,m,r.shape[a]);const x=Fs(g);return b=Os(b,x),b},indices:()=>s}}};function Iu(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function Cu(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}const Su={kernelName:Ht,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>ua(n),b:()=>ua(r)}}},Eu={kernelName:jt,gradFunc:t=>({x:()=>Lr(t,"float32")})},$u={kernelName:Xt,gradFunc:t=>({x:()=>ua(t)})},Nu={kernelName:Yt,gradFunc:t=>({x:()=>ua(t)})},Ru={kernelName:Jt,gradFunc:t=>({x:()=>ua(t)})},Tu={kernelName:Qt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>vi(t,Ss(n,1))}}},Au={kernelName:Zt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>vi(t,Lr(n,"float32"))}}},Fu={kernelName:ee,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:s}=n;return{logits:()=>{const e=Ei(r);return Hi(t,Wi(ji(t,s,!0),e))}}}},Du=tr({localResponseNormalizationBackprop_:function(t,e,n,r=5,s=1,i=1,a=.5){const o={x:t,y:e,dy:n},l={depthRadius:r,bias:s,alpha:i,beta:a};return Hn.runKernelFunc((o=>o.LRNGrad(n,t,e,r,s,i,a)),o,null,"LRNBackprop",l)}}),_u={kernelName:"LRN",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{depthRadius:i,bias:a,alpha:o,beta:l}=n;return{x:()=>Du(r,s,t,i,a,o,l)}}};function Ou(t,e,n,r){return e.rank<n.rank&&(e=_s(e,Rs(e.shape,r))),t.rank<n.rank&&(t=_s(t,Rs(t.shape,r))),{x:()=>Wi(t,Lr(Si(n,e),t.dtype))}}const Mu={kernelName:ne,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:s}=r,i=e[0],a=Ou(t,e[1],i,k(s,i.shape));return{x:()=>a.x()}}},Lu=tr({less_:function(t,e){let n=Zn(t,"a","less"),r=Zn(e,"b","less");[n,r]=zn(n,r),Ci(n.shape,r.shape);const s={a:n,b:r};return Hn.runKernelFunc((t=>t.less(n,r)),s,null,"Less")}}),zu={kernelName:re,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Wi(t,Lr(Bi(n,r),"float32")),b:()=>Wi(t,Lr(Lu(n,r),"float32"))}}},Bu=tr({maxPool3dBackprop_:function(t,e,n,r,s,i=[1,1,1],a,o){const l=Zn(t,"dy","maxPool3dBackprop"),u=Zn(e,"input","maxPool3dBackprop"),c=Zn(n,"output","maxPool3dBackprop");let d=l,p=u,f=c,m=!1;4===u.rank&&(m=!0,d=_s(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=_s(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),f=_s(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),h(5===d.rank,(()=>"Error in maxPool3dBackprop: dy must be rank 5 but got rank "+d.rank+".")),h(5===p.rank,(()=>"Error in maxPool3dBackprop: input must be rank 5 but got rank "+p.rank+".")),h(5===f.rank,(()=>"Error in maxPool3dBackprop: output must be rank 5 but got rank "+f.rank+".")),h(Ys(s,i),(()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${s} and dilations '${i}'`)),null!=o&&h(y(a),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`));const g={dy:d,input:p,output:f},b={filterSize:r,strides:s,dilations:i,pad:a,dimRoundingMode:o},x=Hn.runKernelFunc((t=>{const e=Ws(p.shape,r,s,i,a,o);return t.maxPool3dBackprop(d,p,f,e)}),g,null,"MaxPool3DBackprop",b);return m?_s(x,[x.shape[1],x.shape[2],x.shape[3],x.shape[4]]):x}}),Pu={kernelName:ae,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:i,strides:a,dilations:o,pad:l,dimRoundingMode:u}=n,c=null==o?[1,1,1]:o;return{x:()=>Bu(t,r,s,i,a,c,l,u)}}},Wu=tr({maxPoolBackprop_:function(t,e,n,r,s,i,a){const o=Zn(t,"dy","maxPoolBackprop"),l=Zn(e,"input","maxPoolBackprop"),u=Zn(n,"output","maxPoolBackprop");h(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),h(4===o.rank,(()=>"Error in maxPoolBackprop: dy must be rank 4 but got rank "+o.rank+".")),h(4===l.rank,(()=>"Error in maxPoolBackprop: input must be rank 4 but got rank "+l.rank+".")),null!=a&&h(y(i),(()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`));const c={dy:o,input:l,output:u},d={filterSize:r,strides:s,pad:i,dimRoundingMode:a};return Hn.runKernelFunc((t=>{const e=Ps(l.shape,r,s,1,i,a);return t.maxPoolBackprop(o,l,u,e)}),c,null,ie,d)}}),Uu={kernelName:se,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:i,strides:a,pad:o}=n;return{x:()=>Wu(t,r,s,i,a,o)}}},Vu={kernelName:"Min",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:s}=r,[i,a]=e,o=Ou(t,a,i,k(s,i.shape));return{x:()=>o.x()}}},Gu={kernelName:ue,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Wi(t,Lr(ko(n,r),"float32")),b:()=>Wi(t,Lr(zi(n,r),"float32"))}}},Hu={kernelName:ce,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,i=s.map((t=>t[0]));return{x:()=>Sa(t,i,r.shape)}}},ju={kernelName:"Mod",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ci(n.shape,r.shape);return{a:()=>{const e=Ii(n.shape,s);return e.length>0?_s(ji(t,e),n.shape):t},b:()=>{const e=Wi(t,sa(Ai(vi(n,r)))),i=Ii(r.shape,s);return i.length>0?_s(ji(e,i),r.shape):e}}}},qu={kernelName:he,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ci(n.shape,r.shape);return{a:()=>{const e=Wi(t,Lr(r,"float32")),i=Ii(n.shape,s);return i.length>0?_s(ji(e,i),n.shape):e},b:()=>{const e=Wi(t,Lr(n,"float32")),i=Ii(r.shape,s);return i.length>0?_s(ji(e,i),r.shape):e}}}},Ku={kernelName:de,gradFunc:t=>({x:()=>sa(t)})},Xu={kernelName:be,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>Ji(n.shape,"float32")}}},Yu={kernelName:ye,gradFunc:t=>({x:()=>ua(t)})},Ju={kernelName:xe,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,i=s.map((t=>t[0]));return{x:()=>Sa(t,i,r.shape)}}},Zu={kernelName:"Pow",inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,s]=e,i=n,a=r,o=Ci(i.shape,a.shape);return{a:()=>{const e=Lr(a,"float32");let n=Wi(t,Wi(e,Co(i,Hi(e,ks(1)))));const r=Ii(i.shape,o);return r.length>0&&(n=ji(n,r)),_s(n,i.shape)},b:()=>{const e=zi(i,0),n=Ga(e,Vi(i),ua(i));let r=Wi(t,Wi(s,n));const l=Ii(a.shape,o);return l.length>0&&(r=ji(r,l)),_s(r,a.shape)}}}},Qu={kernelName:ve,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,s=zi(n,0);return{x:()=>Ga(s,t,Wi(t,r)),alpha:()=>{let e=Ga(s,ua(t),Wi(t,n));const i=Ii(r.shape,t.shape);return i.length>0&&(e=ji(e,i)),_s(e,r.shape)}}}},tc={kernelName:ke,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>vi(t,sa(na(n)))}}},ec={kernelName:$e,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Wi(ko(n,6),Za(n));return{x:()=>Wi(t,Lr(r,"float32"))}}},nc={kernelName:Ie,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Wi(t,Lr(Za(n),"float32"))}}},rc={kernelName:Ce,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_s(t,n.shape)}}},sc={kernelName:Ee,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s=e=>{const{alignCorners:s}=n;return e.resizeBilinearBackprop(t,r,s)},i={images:r};return{images:()=>Hn.runKernelFunc(s,i,null,"ResizeBilinearGrad",n)}}},ic={kernelName:Se,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s=e=>{const{alignCorners:s}=n;return e.resizeNearestNeighborBackprop(t,r,s)},i={images:r};return{images:()=>Hn.runKernelFunc(s,i,null,"ResizeNearestNeighborGrad",n)}}},ac={kernelName:Ne,gradFunc:(t,e,n)=>{const{dims:r}=n,s=k(r,t.shape);return{x:()=>wa(t,s)}}},oc={kernelName:Re,gradFunc:t=>({x:()=>ua(t)})},lc={kernelName:Te,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>sa(vi(t,Wi(Co(n,1.5),2)))}}},uc=tr({logicalNot_:function(t){const e=Zn(t,"x","logicalNot","bool"),n={x:e};return Hn.runKernelFunc((t=>t.logicalNot(e)),n,null,te)}}),cc={kernelName:Ae,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>Lr(ua(n),"float32"),t:()=>Wi(t,Lr(n,t.dtype)),e:()=>Wi(t,Lr(uc(n),t.dtype))}}},hc={kernelName:Fe,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=zi(n,ks(0)),r=ks(rl),s=ks(sl),i=Wi(t,s),a=Wi(Wi(t,r),Ei(Lr(n,"float32")));return Ga(e,i,a)}}}},dc={kernelName:Le,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Wi(t,Wi(n,Hi(ks(1),n)))}}},pc={kernelName:Me,gradFunc:t=>({x:()=>ua(t)})},fc=tr({cos_:function(t){const e=Zn(t,"x","cos"),n={x:e};return Hn.runKernelFunc(((t,n)=>{const r=t.cos(e);return n([e]),r}),n,null,Ct)}}),mc={kernelName:_e,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Wi(fc(Lr(n,"float32")),t)}}},gc=tr({cosh_:function(t){const e=Zn(t,"x","cosh"),n={x:e};return Hn.runKernelFunc(((t,n)=>{const r=t.cosh(e);return n([e]),r}),n,null,St)}}),yc={kernelName:Oe,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Wi(gc(Lr(n,"float32")),t)}}},bc={kernelName:De,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:s,size:i}=n,a=r.shape,[o,l]=us(r,s,i),u=[];for(let e=0;e<t.rank;e++)u.push([o[e],a[e]-o[e]-l[e]]);return{x:()=>ha(t,u)}}},xc={kernelName:Ue,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:s}=n,i=Wi(t,r);return{logits:()=>Hi(i,Wi(ji(i,[s],!0),r))}}},vc={kernelName:ze,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Wi(t,Ca(n))}}},wc=tr({batchToSpaceND_:function(t,e,n){const r=Zn(t,"x","batchToSpaceND"),s=e.reduce(((t,e)=>t*e));h(r.rank>=1+e.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`)),h(n.length===e.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`)),h(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`));const i={x:r},a={blockShape:e,crops:n};return Hn.runKernelFunc((t=>t.batchToSpaceND(r,e,n)),i,null,ht,a)}}),kc={kernelName:Pe,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>wc(t,r,s)}}},Ic={kernelName:We,gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>li(t,r)}}},Cc=[Nl,Rl,Tl,Al,{kernelName:"AddN",saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,r)=>{n[r]=()=>t.clone()})),n}},Fl,Dl,_l,Ol,Ml,Ll,zl,Pl,Ul,Vl,Hl,jl,ql,Kl,Xl,Yl,Zl,Jl,eu,ru,iu,ou,cu,hu,du,pu,fu,mu,gu,bu,yu,vu,ku,Su,Eu,$u,Nu,Ru,Tu,Au,Fu,_u,Mu,Mu,zu,Pu,Uu,Vu,Gu,Hu,ju,qu,Ku,Xu,Yu,Ju,Ju,Zu,Qu,tc,ec,nc,rc,sc,ic,ac,oc,lc,cc,hc,dc,pc,mc,yc,bc,xc,vc,kc,kc,Ic,Ic,{kernelName:Be,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>vi(t,Wi(_a(Lr(n,"float32")),2))}}},{kernelName:Ve,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=ks(2);return{a:()=>Wi(t,Wi(s,Hi(n,r))),b:()=>Wi(t,Wi(s,Hi(r,n)))}}},{kernelName:Ge,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Wi(t,Wi(Lr(n,"float32"),2))}}},{kernelName:tn,gradFunc:t=>({x:()=>ua(t)})},{kernelName:He,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ci(n.shape,r.shape);return{a:()=>{let e=t;const r=Ii(n.shape,s);return r.length>0&&(e=ji(e,r)),_s(e,n.shape)},b:()=>{let e=t;const n=Ii(r.shape,s);return n.length>0&&(e=ji(e,n)),_s(sa(e),r.shape)}}}},{kernelName:"Sum",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,s=r.shape.slice(),{axis:i}=n;k(i,r.shape).forEach((t=>{s[t]=1}));const a=_s(t,s),o=Wi(a,Zi(r.shape,"float32"));return{x:()=>o}}},{kernelName:je,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>vi(t,na(fc(n)))}}},{kernelName:qe,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Wi(Hi(ks(1),na(n)),t)}}},{kernelName:Ke,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:s}=n;return{x:()=>{let e=ua(r);if(1===r.rank)for(let n=0;n<s[0];++n)e=Ss(e,Sa(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)e=Ss(e,Sa(t,[n*r.shape[0],i*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let a=0;a<s[2];++a)e=Ss(e,Sa(t,[n*r.shape[0],i*r.shape[1],a*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let a=0;a<s[2];++a)for(let o=0;o<s[3];++o)e=Ss(e,Sa(t,[n*r.shape[0],i*r.shape[1],a*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},{kernelName:Xe,gradFunc:(t,e,n)=>{const r=n,{perm:s}=r,i=Fs(s);return{x:()=>Os(t,i)}}},{kernelName:Je,gradFunc:(t,e,n)=>{const r=n,{axis:s}=r;return{value:()=>Ma(t,s)}}},{kernelName:Ze,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=Pi(e,ua(e)),r=Li(t,n);let s=Bi(e,ks(0,"int32"));const i=r.rank-s.rank;for(let t=0;t<i;++t)s=$i(s,t+1);s=Ki(s,Zi(r.shape,"bool"));const a=ua(r);return Ga(s,r,a)}(t,n)}}},{kernelName:Qe,gradFunc:t=>({x:()=>ua(t)})}];for(const t of Cc)cn(t);Nn.prototype.abs=function(){return this.throwIfDisposed(),Cs(this)};const Sc=tr({acos_:function(t){const e=Zn(t,"x","acos"),n={x:e};return Hn.runKernelFunc(((t,n)=>{const r=t.acos(e);return n([e]),r}),n,null,J)}});Nn.prototype.acos=function(){return this.throwIfDisposed(),Sc(this)};const Ec=tr({acosh_:function(t){const e=Zn(t,"x","acosh"),n={x:e};return Hn.runKernelFunc(((t,n)=>{const r=t.acosh(e);return n([e]),r}),n,null,Z)}});Nn.prototype.acosh=function(){return this.throwIfDisposed(),Ec(this)};const $c=tr({mod_:function(t,e){let n=Zn(t,"a","mod"),r=Zn(e,"b","mod");[n,r]=zn(n,r);const s={a:n,b:r};return Hn.runKernelFunc(((t,e)=>{const s=t.mod(n,r);return e([n,r]),s}),s,null,"Mod")}}),Nc=tr({addStrict_:function(t,e){ps("strict variants of ops have been deprecated and will be removed in future");const n=Zn(t,"a","addStrict"),r=Zn(e,"b","addStrict");return d(n.shape,r.shape,"Error in addStrict: "),Ss(n,r)}}),Rc=tr({divStrict_:function(t,e){ps("strict variants of ops have been deprecated and will be removed in future");const n=Zn(t,"a","div"),r=Zn(e,"b","div");return d(n.shape,r.shape,"Error in divideStrict: "),vi(n,r)}}),Tc=tr({maximumStrict_:function(t,e){ps("strict variants of ops have been deprecated and will be removed in future");const n=Zn(t,"a","maximumStrict"),r=Zn(e,"b","maximumStrict");return d(n.shape,r.shape,"Error in maximumStrict: "),Pi(n,r)}}),Ac=tr({minimumStrict_:function(t,e){ps("strict variants of ops have been deprecated and will be removed in future");const n=Zn(t,"a","minimumStrict"),r=Zn(e,"b","minimumStrict");return d(n.shape,r.shape,"Error in minimumStrict: "),ea(n,r)}}),Fc=tr({modStrict_:function(t,e){ps("strict variants of ops have been deprecated and will be removed in future");const n=Zn(t,"a","modStrict"),r=Zn(e,"b","modStrict");return d(n.shape,r.shape,"Error in modStrict: "),$c(n,r)}}),Dc=tr({mulStrict_:function(t,e){ps("strict variants of ops have been deprecated and will be removed in future");const n=Zn(t,"a","mul"),r=Zn(e,"b","mul");return d(n.shape,r.shape,"Error in multiplyStrict: "),Wi(n,r)}}),_c=tr({powStrict_:function(t,e){return ps("strict variants of ops have been deprecated and will be removed in future"),d(t.shape,e.shape,"Error in powStrict: "),Co(t,e)}}),Oc=tr({squaredDifferenceStrict_:function(t,e){ps("strict variants of ops have been deprecated and will be removed in future");const n=Zn(t,"a","squaredDifferenceStrict"),r=Zn(e,"b","squaredDifferenceStrict");return d(n.shape,r.shape,"Error in squaredDifferenceStrict: "),Fo(n,r)}}),Mc=tr({subStrict_:function(t,e){ps("strict variants of ops have been deprecated and will be removed in future");const n=Zn(t,"a","subStrict"),r=Zn(e,"b","subStrict");return d(n.shape,r.shape,"Error in subStrict: "),Hi(n,r)}});Nn.prototype.addStrict=function(t){return this.throwIfDisposed(),Nc(this,t)},Nn.prototype.add=function(t){return this.throwIfDisposed(),Ss(this,t)},Nn.prototype.all=function(t,e){return this.throwIfDisposed(),Ms(this,t,e)},Nn.prototype.any=function(t,e){return this.throwIfDisposed(),Ls(this,t,e)},Nn.prototype.argMax=function(t){return this.throwIfDisposed(),zs(this,t)};const Lc=tr({argMin_:function(t,e=0){let n=Zn(t,"x","argMin");const r={x:n},s={axis:e};return Hn.runKernelFunc(((t,r)=>{r([n]),null==e&&(e=0);let s=k(e,n.shape);const i=As(s,n.rank);return null!=i&&(n=Os(n,i),s=Ds(s.length,n.rank)),t.argMin(n,s[0])}),r,null,et,s)}});Nn.prototype.argMin=function(t){return this.throwIfDisposed(),Lc(this,t)},Nn.prototype.asScalar=function(){return this.throwIfDisposed(),h(1===this.size,(()=>"The array must have only 1 element.")),_s(this,[])},Nn.prototype.asType=function(t){return this.throwIfDisposed(),Lr(this,t)},Nn.prototype.as1D=function(){return this.throwIfDisposed(),_s(this,[this.size])},Nn.prototype.as2D=function(t,e){return this.throwIfDisposed(),_s(this,[t,e])},Nn.prototype.as3D=function(t,e,n){return this.throwIfDisposed(),_s(this,[t,e,n])},Nn.prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),_s(this,[t,e,n,r])},Nn.prototype.as5D=function(t,e,n,r,s){return this.throwIfDisposed(),_s(this,[t,e,n,r,s])};const zc=tr({asin_:function(t){const e=Zn(t,"x","asin"),n={x:e};return Hn.runKernelFunc(((t,n)=>{const r=t.asin(e);return n([e]),r}),n,null,nt)}});Nn.prototype.asin=function(){return this.throwIfDisposed(),zc(this)};const Bc=tr({asinh_:function(t){const e=Zn(t,"x","asinh"),n={x:e};return Hn.runKernelFunc(((t,n)=>{const r=t.asinh(e);return n([e]),r}),n,null,rt)}});Nn.prototype.asinh=function(){return this.throwIfDisposed(),Bc(this)};const Pc=tr({atan_:function(t){const e=Zn(t,"x","atan"),n={x:e};return Hn.runKernelFunc(((t,n)=>{const r=t.atan(e);return n([e]),r}),n,null,st)}});Nn.prototype.atan=function(){return this.throwIfDisposed(),Pc(this)};const Wc=tr({atan2_:function(t,e){let n=Zn(t,"a","atan2"),r=Zn(e,"b","atan2");[n,r]=zn(n,r);const s={a:n,b:r};return Hn.runKernelFunc(((t,e)=>{const s=t.atan2(n,r);return e([n,r]),s}),s,null,at)}});Nn.prototype.atan2=function(t){return this.throwIfDisposed(),Wc(this,t)};const Uc=tr({atanh_:function(t){const e=Zn(t,"x","atanh"),n={x:e};return Hn.runKernelFunc(((t,n)=>{const r=t.atanh(e);return n([e]),r}),n,null,it)}});Nn.prototype.atanh=function(){return this.throwIfDisposed(),Uc(this)},Nn.prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),Zs(this,t,e,n,r)},Nn.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),wc(this,t,e)},Nn.prototype.batchNorm=function(t,e,n,r,s){return this.throwIfDisposed(),ei(this,t,e,n,r,s)},Nn.prototype.broadcastTo=function(t){return this.throwIfDisposed(),Va(this,t)},Nn.prototype.cast=function(t){return this.throwIfDisposed(),Lr(this,t)};const Vc=tr({ceil_:function(t){const e=Zn(t,"x","ceil"),n={x:e};return Hn.runKernelFunc((t=>t.ceil(e)),n,null,ft)}});Nn.prototype.ceil=function(){return this.throwIfDisposed(),Vc(this)},Nn.prototype.clipByValue=function(t,e){return this.throwIfDisposed(),ii(this,t,e)},Nn.prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof Nn&&(t=[t]),li([this,...t],e)},Nn.prototype.conv1d=function(t,e,n,r,s,i){return this.throwIfDisposed(),fi(this,t,e,n,r,s,i)},Nn.prototype.conv2dTranspose=function(t,e,n,r,s){return this.throwIfDisposed(),gi(this,t,e,n,r,s)},Nn.prototype.conv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),pi(this,t,e,n,r,s,i)},Nn.prototype.cos=function(){return this.throwIfDisposed(),fc(this)},Nn.prototype.cosh=function(){return this.throwIfDisposed(),gc(this)},Nn.prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),au(this,t,e,n)};const Gc=tr({depthToSpace_:function(t,e,n="NHWC"){const r=Zn(t,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],a="NHWC"===n?r.shape[3]:r.shape[1];h(s*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${e}  for depthToSpace with input shape\n    ${r.shape}`)),h(i*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${e} for depthToSpace with input shape\n        ${r.shape}`)),h(a%(e*e)==0,(()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:e,dataFormat:n};return Hn.runKernelFunc((t=>t.depthToSpace(r,e,n)),o,null,"DepthToSpace",l)}});Nn.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),Gc(this,t,e)},Nn.prototype.depthwiseConv2D=function(t,e,n,r,s,i){return ps("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),bi(this,t,e,n,r,s,i)},Nn.prototype.depthwiseConv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),bi(this,t,e,n,r,s,i)};const Hc=tr({dilation2d_:function(t,e,n,r,s=[1,1],i="NHWC"){const a=Zn(t,"x","dilation2d"),o=Zn(e,"filter","dilation2d");h(3===a.rank||4===a.rank,(()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+a.rank+".")),h(3===o.rank,(()=>"Error in dilation2d: filter must be rank 3, but got rank "+o.rank+".")),h("NHWC"===i,(()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+i));let l=a,u=!1;3===a.rank&&(l=_s(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0);const c={x:l,filter:o},d={strides:n,pad:r,dilations:s},p=Hn.runKernel(Tt,c,d);return u?_s(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});Nn.prototype.dilation2d=function(t,e,n,r,s){return this.throwIfDisposed(),Hc(this,t,e,n,r,s)};const jc=tr({divNoNan_:function(t,e){let n=Zn(t,"a","div"),r=Zn(e,"b","div");[n,r]=zn(n,r);const s=vi(n,r),i=ua(s),a=Si(r,i);return Ga(a,i,s)}});Nn.prototype.divNoNan=function(t){return this.throwIfDisposed(),jc(this,t)},Nn.prototype.divStrict=function(t){return this.throwIfDisposed(),Rc(this,t)},Nn.prototype.div=function(t){return this.throwIfDisposed(),vi(this,t)};const qc=tr({dot_:function(t,e){const n=Zn(t,"t1","dot"),r=Zn(e,"t2","dot");h(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],i=1===r.rank?r.size:r.shape[0];if(h(s===i,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${i}.`)),1===n.rank&&1===r.rank){const t=_s(n,[1,-1]),e=_s(r,[-1,1]),s=so(t,e);return _s(s,[])}if(1===n.rank&&2===r.rank){const t=_s(n,[1,-1]),e=_s(r,[r.shape[0],r.shape[1]]),s=so(t,e);return _s(s,[s.size])}if(2===n.rank&&1===r.rank){const t=_s(r,[-1,1]),e=so(n,t);return _s(e,[e.size])}{const t=_s(r,[r.shape[0],r.shape[1]]);return so(n,t)}}});Nn.prototype.dot=function(t){return this.throwIfDisposed(),qc(this,t)},Nn.prototype.elu=function(){return this.throwIfDisposed(),wi(this)};const Kc=tr({equalStrict_:function(t,e){ps("strict variants of ops have been deprecated and will be removed in future");const n=Zn(t,"a","equalStrict"),r=Zn(e,"b","equalStrict");return d(n.shape,r.shape,"Error in equalStrict: "),Si(n,r)}}),Xc=tr({greaterEqualStrict_:function(t,e){ps("strict variants of ops have been deprecated and will be removed in future");const n=Zn(t,"a","greaterEqualStrict"),r=Zn(e,"b","greaterEqualStrict");return d(n.shape,r.shape,"Error in greaterEqualStrict: "),Bi(n,r)}}),Yc=tr({greaterStrict_:function(t,e){ps("strict variants of ops have been deprecated and will be removed in future");const n=Zn(t,"a","greaterStrict"),r=Zn(e,"b","greaterStrict");return d(n.shape,r.shape,"Error in greaterStrict: "),zi(n,r)}}),Jc=tr({lessEqualStrict_:function(t,e){ps("strict variants of ops have been deprecated and will be removed in future");const n=Zn(t,"a","lessEqualStrict"),r=Zn(e,"b","lessEqualStrict");return d(n.shape,r.shape,"Error in lessEqualStrict: "),ko(n,r)}}),Zc=tr({lessStrict_:function(t,e){ps("strict variants of ops have been deprecated and will be removed in future");const n=Zn(t,"a","lessStrict"),r=Zn(e,"b","lessStrict");return d(n.shape,r.shape,"Error in lessStrict: "),Lu(n,r)}}),Qc=tr({notEqualStrict_:function(t,e){ps("strict variants of ops have been deprecated and will be removed in future");const n=Zn(t,"a","notEqualStrict"),r=Zn(e,"b","notEqualStrict");return d(n.shape,r.shape,"Error in notEqualStrict: "),ia(n,r)}});Nn.prototype.equalStrict=function(t){return this.throwIfDisposed(),Kc(this,t)},Nn.prototype.equal=function(t){return this.throwIfDisposed(),Si(this,t)};const th=tr({erf_:function(t){let e=Zn(t,"x","erf");h("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=Lr(e,"float32"));const n={x:e};return Hn.runKernelFunc(((t,n)=>{const r=t.erf(e);return n([e]),r}),n,null,Ot)}});Nn.prototype.erf=function(){return this.throwIfDisposed(),th(this)},Nn.prototype.exp=function(){return this.throwIfDisposed(),Ei(this)},Nn.prototype.expandDims=function(t){return this.throwIfDisposed(),$i(this,t)};const eh=tr({expm1_:function(t){const e=Zn(t,"x","expm1"),n={x:e};return Hn.runKernelFunc(((t,n)=>{const r=t.expm1(e);return n([e]),r}),n,null,Lt)}});Nn.prototype.expm1=function(){return this.throwIfDisposed(),eh(this)},Nn.prototype.fft=function(){return this.throwIfDisposed(),ja(this)},Nn.prototype.flatten=function(){return this.throwIfDisposed(),_s(this,[this.size])},Nn.prototype.floor=function(){return this.throwIfDisposed(),Ai(this)},Nn.prototype.floorDiv=function(t){return this.throwIfDisposed(),xi(this,t)},Nn.prototype.gather=function(t,e){return this.throwIfDisposed(),Li(this,t,e)},Nn.prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),Xc(this,t)},Nn.prototype.greaterEqual=function(t){return this.throwIfDisposed(),Bi(this,t)},Nn.prototype.greaterStrict=function(t){return this.throwIfDisposed(),Yc(this,t)},Nn.prototype.greater=function(t){return this.throwIfDisposed(),zi(this,t)},Nn.prototype.ifft=function(){return this.throwIfDisposed(),Ka(this)},Nn.prototype.irfft=function(){return this.throwIfDisposed(),Xa(this)};const nh=tr({isFinite_:function(t){const e=Zn(t,"x","isFinite"),n={x:e};return Hn.runKernelFunc((t=>t.isFinite(e)),n,null,Xt)}});Nn.prototype.isFinite=function(){return this.throwIfDisposed(),nh(this)};const rh=tr({isInf_:function(t){const e=Zn(t,"x","isInf"),n={x:e};return Hn.runKernelFunc((t=>t.isInf(e)),n,null,Yt)}});Nn.prototype.isInf=function(){return this.throwIfDisposed(),rh(this)};const sh=tr({isNaN_:function(t){const e=Zn(t,"x","isNaN"),n={x:e};return Hn.runKernelFunc((t=>t.isNaN(e)),n,null,Jt)}});Nn.prototype.isNaN=function(){return this.throwIfDisposed(),sh(this)},Nn.prototype.leakyRelu=function(t){return this.throwIfDisposed(),Ui(this,t)},Nn.prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),Jc(this,t)},Nn.prototype.lessEqual=function(t){return this.throwIfDisposed(),ko(this,t)},Nn.prototype.lessStrict=function(t){return this.throwIfDisposed(),Zc(this,t)},Nn.prototype.less=function(t){return this.throwIfDisposed(),Lu(this,t)};const ih=tr({localResponseNormalization_:function(t,e=5,n=1,r=1,s=.5){const i=Zn(t,"x","localResponseNormalization");h(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),h(y(e),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`));let a=i,o=!1;3===i.rank&&(o=!0,a=_s(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:a},u={depthRadius:e,bias:n,alpha:r,beta:s},c=Hn.runKernelFunc(((t,i)=>{const o=t.localResponseNormalization4D(a,e,n,r,s);return i([a,o]),o}),l,null,"LRN",u);return o?_s(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});Nn.prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),ih(this,t,e,n,r)};const ah=tr({logSigmoid_:function(t){const e=Zn(t,"x","logSigmoid");return ws((t=>({value:sa(Aa(sa(t))),gradFunc:e=>Wi(e,Ca(sa(t)))})))(e)}});Nn.prototype.logSigmoid=function(){return this.throwIfDisposed(),ah(this)},Nn.prototype.logSoftmax=function(t){return this.throwIfDisposed(),qi(this,t)},Nn.prototype.logSumExp=function(t,e){return this.throwIfDisposed(),_o(this,t,e)},Nn.prototype.log=function(){return this.throwIfDisposed(),Vi(this)},Nn.prototype.log1p=function(){return this.throwIfDisposed(),Do(this)},Nn.prototype.logicalAnd=function(t){return this.throwIfDisposed(),Ki(this,t)},Nn.prototype.logicalNot=function(){return this.throwIfDisposed(),uc(this)};const oh=tr({logicalOr_:function(t,e){const n=Zn(t,"a","logicalOr","bool"),r=Zn(e,"b","logicalOr","bool");Ci(n.shape,r.shape);const s={a:n,b:r};return Hn.runKernelFunc((t=>t.logicalOr(n,r)),s,null,"LogicalOr")}});Nn.prototype.logicalOr=function(t){return this.throwIfDisposed(),oh(this,t)};const lh=tr({logicalXor_:function(t,e){const n=Zn(t,"a","logicalXor","bool"),r=Zn(e,"b","logicalXor","bool");return Ci(n.shape,r.shape),Ki(oh(t,e),uc(Ki(t,e)))}});Nn.prototype.logicalXor=function(t){return this.throwIfDisposed(),lh(this,t)},Nn.prototype.matMul=function(t,e,n){return this.throwIfDisposed(),so(this,t,e,n)},Nn.prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),Xi(this,t,e,n,r)},Nn.prototype.max=function(t,e){return this.throwIfDisposed(),Gi(this,t,e)},Nn.prototype.maximumStrict=function(t){return this.throwIfDisposed(),Tc(this,t)},Nn.prototype.maximum=function(t){return this.throwIfDisposed(),Pi(this,t)},Nn.prototype.mean=function(t,e){return this.throwIfDisposed(),Qi(this,t,e)},Nn.prototype.min=function(t,e){return this.throwIfDisposed(),ta(this,t,e)},Nn.prototype.minimumStrict=function(t){return this.throwIfDisposed(),Ac(this,t)},Nn.prototype.minimum=function(t){return this.throwIfDisposed(),ea(this,t)};const uh=tr({mirrorPad_:function(t,e,n){h("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Zn(t,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");h(e.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`));const s="reflect"===n?1:0;for(let t=0;t<r.rank;t++)h(2===e[t].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),h(e[t][0]>=0&&e[t][0]<=r.shape[t]-s&&e[t][1]>=0&&e[t][1]<=r.shape[t]-s,(()=>`Padding in dimension ${t} cannot be greater than or equal to ${r.shape[t]-s} or less than 0 for input of shape `+r.shape));const i={paddings:e,mode:n},a={x:r};return Hn.runKernel(ce,a,i)}});Nn.prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),uh(this,t,e)},Nn.prototype.modStrict=function(t){return this.throwIfDisposed(),Fc(this,t)},Nn.prototype.mod=function(t){return this.throwIfDisposed(),$c(this,t)},Nn.prototype.mulStrict=function(t){return this.throwIfDisposed(),Dc(this,t)},Nn.prototype.mul=function(t){return this.throwIfDisposed(),Wi(this,t)},Nn.prototype.neg=function(){return this.throwIfDisposed(),sa(this)},Nn.prototype.norm=function(t,e,n){return this.throwIfDisposed(),Eo(this,t,e,n)},Nn.prototype.notEqualStrict=function(t){return this.throwIfDisposed(),Qc(this,t)},Nn.prototype.notEqual=function(t){return this.throwIfDisposed(),ia(this,t)},Nn.prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),aa(this,t,e,n)},Nn.prototype.onesLike=function(){return this.throwIfDisposed(),ca(this)},Nn.prototype.pad=function(t,e){return this.throwIfDisposed(),ha(this,t,e)};const ch=tr({pool_:function(t,e,n,r,s,i){null==s&&(s=[1,1]),null==i&&(i=1),0===r&&(r="valid");const a=Zn(t,"x","maxPool");let o=a,l=!1;3===a.rank&&(l=!0,o=_s(a,[1,a.shape[0],a.shape[1],a.shape[2]])),h(Ys(i,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${s}'`));const u=Ps(o.shape,e,i,s,r),c=[u.dilationHeight,u.dilationWidth];let d;d="same"===r?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))).map((t=>t-1)),r=n.map((t=>Math.floor(t/2))),s=n.map(((t,e)=>t-r[e]));return n.map(((t,e)=>[r[e],s[e]]))}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const p=1===c[0]&&1===c[1],[f,m]=function(t,e,n){const r=n.map((t=>t[0])),s=n.map((t=>t[1])),i=t.concat(r,s),a=e.map(((t,e)=>(t-i[e]%t)%t)),o=s.map(((t,e)=>t+a[e]));return[e.map(((t,e)=>[r[e],o[e]])),e.map(((t,e)=>[0,a[e]]))]}([u.inHeight,u.inWidth],c,d),g=p?r:"valid",y=p?o:Gl(o,c,f),b=("avg"===n?()=>Zs(y,e,i,g):()=>Xi(y,e,i,g))(),x=p?b:wc(b,c,m);return l?_s(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});Nn.prototype.pool=function(t,e,n,r,s){return this.throwIfDisposed(),ch(this,t,e,n,r,s)},Nn.prototype.powStrict=function(t){return this.throwIfDisposed(),_c(this,t)},Nn.prototype.pow=function(t){return this.throwIfDisposed(),Co(this,t)},Nn.prototype.prelu=function(t){return this.throwIfDisposed(),da(this,t)};const hh=tr({prod_:function(t,e=null,n=!1){let r=Zn(t,"x","prod");"bool"===r.dtype&&(r=Lr(r,"int32"));const s={x:r},i={axis:e,keepDims:n};return Hn.runKernelFunc((t=>{const s=k(e,r.shape),i=As(s,r.rank);let a=s,o=r;null!=i&&(o=Os(r,i),a=Ds(a.length,r.rank));let l=t.prod(o,a);if(n){const t=Rs(l.shape,s);l=_s(l,t)}return l}),s,null,"Prod",i)}});Nn.prototype.prod=function(t,e){return this.throwIfDisposed(),hh(this,t,e)};const dh=tr({reciprocal_:function(t){const e=Zn(t,"x","reciprocal"),n={x:e};return Hn.runKernelFunc(((t,n)=>{const r=t.reciprocal(e);return n([e]),r}),n,null,ke)}});Nn.prototype.reciprocal=function(){return this.throwIfDisposed(),dh(this)},Nn.prototype.relu=function(){return this.throwIfDisposed(),va(this)},Nn.prototype.relu6=function(){return this.throwIfDisposed(),Ja(this)},Nn.prototype.reshapeAs=function(t){return this.throwIfDisposed(),_s(this,t.shape)},Nn.prototype.reshape=function(t){return this.throwIfDisposed(),_s(this,t)},Nn.prototype.resizeBilinear=function(t,e){return this.throwIfDisposed(),vo(this,t,e)},Nn.prototype.resizeNearestNeighbor=function(t,e){return this.throwIfDisposed(),wo(this,t,e)},Nn.prototype.reverse=function(t){return this.throwIfDisposed(),wa(this,t)},Nn.prototype.rfft=function(){return this.throwIfDisposed(),qa(this)};const ph=tr({round_:function(t){const e=Zn(t,"x","round"),n={x:e};return Hn.runKernelFunc((t=>t.round(e)),n,null,Re)}});Nn.prototype.round=function(){return this.throwIfDisposed(),ph(this)},Nn.prototype.rsqrt=function(){return this.throwIfDisposed(),xu(this)},Nn.prototype.selu=function(){return this.throwIfDisposed(),ka(this)},Nn.prototype.separableConv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),Ia(this,t,e,n,r,s,i)},Nn.prototype.sigmoid=function(){return this.throwIfDisposed(),Ca(this)};const fh=tr({sign_:function(t){const e=Zn(t,"x","sign"),n={x:e};return Hn.runKernelFunc((t=>t.sign(e)),n,null,Me)}});Nn.prototype.sign=function(){return this.throwIfDisposed(),fh(this)},Nn.prototype.sin=function(){return this.throwIfDisposed(),nu(this)},Nn.prototype.sinh=function(){return this.throwIfDisposed(),su(this)},Nn.prototype.slice=function(t,e){return this.throwIfDisposed(),Sa(this,t,e)},Nn.prototype.softmax=function(t){return this.throwIfDisposed(),Ta(this,t)},Nn.prototype.softplus=function(){return this.throwIfDisposed(),Aa(this)},Nn.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Gl(this,t,e)},Nn.prototype.split=function(t,e){return this.throwIfDisposed(),Da(this,t,e)},Nn.prototype.sqrt=function(){return this.throwIfDisposed(),_a(this)},Nn.prototype.square=function(){return this.throwIfDisposed(),na(this)},Nn.prototype.squaredDifference=function(t){return this.throwIfDisposed(),Fo(this,t)},Nn.prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),Oc(this,t)},Nn.prototype.squeeze=function(t){return this.throwIfDisposed(),Oa(this,t)},Nn.prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof Nn?[this,t]:[this,...t];return Ma(n,e)},Nn.prototype.step=function(t){return this.throwIfDisposed(),Za(this,t)};const mh=tr({stridedSlice_:function(t,e,n,r,s=0,i=0,a=0,o=0,l=0){let u=Zn(t,"x","stridedSlice");const c={x:u},h={begin:e,end:n,strides:r,beginMask:s,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return Hn.runKernelFunc((t=>{null==r&&(r=new Array(e.length));const c=Yr(a);if(c.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==a&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==a&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const h=u.rank-e.length,d=Yr(o),p=u.shape.slice();d.forEach((t=>{e[t]=0,n[t]=1,p.splice(t,0,1)})),u=_s(u,p);const{begin:f,end:m,strides:g}=es(u.shape,c,h,e,n,r,s,i,a);e=f,n=m,r=g;const y=Yr(l);y.forEach((t=>{n[t]=e[t]+1,r[t]=1}));const b=Jr(e,n,r),x=b.filter(((t,e)=>-1===y.indexOf(e)));if(r.every((t=>1===t)))return _s(Sa(u,e,b),x);const v=t.stridedSlice(u,e,n,r);return _s(v,x)}),c,null,"StridedSlice",h)}});Nn.prototype.stridedSlice=function(t,e,n,r,s,i,a,o){return this.throwIfDisposed(),mh(this,t,e,n,r,s,i,a,o)},Nn.prototype.subStrict=function(t){return this.throwIfDisposed(),Mc(this,t)},Nn.prototype.sub=function(t){return this.throwIfDisposed(),Hi(this,t)},Nn.prototype.sum=function(t,e){return this.throwIfDisposed(),ji(this,t,e)};const gh=tr({tan_:function(t){const e=Zn(t,"x","tan"),n={x:e};return Hn.runKernelFunc(((t,n)=>{const r=t.tan(e);return n([e]),r}),n,null,je)}});Nn.prototype.tan=function(){return this.throwIfDisposed(),gh(this)},Nn.prototype.tanh=function(){return this.throwIfDisposed(),La(this)},Nn.prototype.tile=function(t){return this.throwIfDisposed(),Ni(this,t)},Nn.prototype.toBool=function(){return this.throwIfDisposed(),Lr(this,"bool")},Nn.prototype.toFloat=function(){return this.throwIfDisposed(),Lr(this,"float32")},Nn.prototype.toInt=function(){return this.throwIfDisposed(),Lr(this,"int32")};const yh=tr({topk_:function(t,e=1,n=!0){const r=Zn(t,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got `+e);const i={x:r},a={k:e,sorted:n},[o,l]=Hn.runKernelFunc((t=>t.topk(r,e,n)),i,null,"TopK",a);return{values:o,indices:l}}});Nn.prototype.topk=function(t,e){return this.throwIfDisposed(),yh(this,t,e)},Nn.prototype.transpose=function(t){return this.throwIfDisposed(),Os(this,t)};const bh=tr({unique_:function(t,e=0){const n=Zn(t,"x","unique",null);h(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:e},[i,a]=Hn.runKernel(Ye,r,s);return{values:i,indices:a}}});let xh;function vh(){return null==xh&&(xh=vs().epsilon()),xh}Nn.prototype.unique=function(t){return this.throwIfDisposed(),bh(this,t)},Nn.prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),wu(this,t,e)},Nn.prototype.unstack=function(t){return this.throwIfDisposed(),Ua(this,t)},Nn.prototype.where=function(t,e){return this.throwIfDisposed(),Ga(t,this,e)},Nn.prototype.zerosLike=function(){return this.throwIfDisposed(),ua(this)};class wh extends Error{constructor(t){super(t),Object.setPrototypeOf(this,wh.prototype)}}class kh extends Error{constructor(t){super(t),Object.setPrototypeOf(this,kh.prototype)}}class Ih extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ih.prototype)}}class Ch extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ch.prototype)}}class Sh extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Sh.prototype)}}function Eh(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function $h(t,e){if(!t)throw new Sh(e)}function Nh(t,e){let n=0;for(const r of t)r===e&&n++;return n}function Rh(t){return 1===t.length?t[0]:t}function Th(t){return Array.isArray(t)?t:[t]}function Ah(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function Fh(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}Error;let Dh={};function _h(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function Oh(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach((t=>Oh(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?Oh(e):t[n]=e.value)}}}function Mh(t,e={},n={},r="object",s=!1){if("string"==typeof t){const s=t;let i;if(s in n)i=n[s];else if(s in Dh)i=Dh[s];else if(i=e[s],null==i)throw new Ih(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=t;if(null==i.className||null==i.config)throw new Ih(r+": Improper config format: "+JSON.stringify(i)+".\n'className' and 'config' must set.");const a=i.className;let o,l;if(a in n?[o,l]=n[a]:a in Dh?[o,l]=Dh.className:a in e&&([o,l]=e[a]),null==o)throw new Ih(`Unknown ${r}: ${a}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const t={};for(const e of Object.keys(Dh))t[e]=Dh[e];for(const e of Object.keys(n))t[e]=n[e];i.config.customObjects=t;const e=Object.assign({},Dh);for(const t of Object.keys(n))Dh[t]=n[t];Oh(i.config);const r=l(o,i.config,n,s);return Dh=Object.assign({},e),r}{const t=Object.assign({},Dh);for(const t of Object.keys(n))Dh[t]=n[t];const e=new o(i.config);return Dh=Object.assign({},t),e}}}function Lh(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function zh(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function Bh(t){if(null==t)throw new Ih("Invalid value in obj: "+JSON.stringify(t));for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function Ph(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new Ih(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function Wh(t,e,n=0,r=1/0){return $h(n>=0),$h(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every((t=>typeof t===e))}function Uh(t,e){Array.isArray(t)?(h(t.length>0,(()=>e+" is unexpectedly an empty array.")),t.forEach(((t,n)=>Uh(t,`element ${n+1} of ${e}`)))):h(Number.isInteger(t)&&t>0,(()=>`Expected ${e} to be a positive integer, but got `+Vh(t)+"."))}function Vh(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>Vh(t))).join(",")+"]":"string"==typeof t?`"${t}"`:""+t}function Gh(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function Hh(t,e){return gs((()=>_a(ji(Wi(t,t),e,!0))))}class jh extends cs{getConfig(){return{}}}class qh extends jh{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return gs((()=>{const e=Hh(t,this.axis),n=ii(e,0,this.maxValue);return Wi(t,vi(n,Ss(vh(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}qh.className="MaxNorm",ds(qh);class Kh extends jh{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return gs((()=>vi(t,Ss(vh(),Hh(t,this.axis)))))}getConfig(){return{axis:this.axis}}}Kh.className="UnitNorm",ds(Kh);class Xh extends jh{apply(t){return va(t)}}Xh.className="NonNeg",ds(Xh);class Yh extends jh{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return gs((()=>{const e=Hh(t,this.axis),n=Ss(Wi(this.rate,ii(e,this.minValue,this.maxValue)),Wi(1-this.rate,e));return Wi(t,vi(n,Ss(vh(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Yh.className="MinMaxNorm",ds(Yh);const Jh={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Zh(t){return _h(t)}function Qh(t,e={}){return Mh(t,hs.getMap().classNameMap,e,"constraint")}function td(t){return null==t?null:"string"==typeof t?Qh({className:t in Jh?Jh[t]:t,config:{}}):t instanceof jh?t:Qh(t)}const ed=["channelsFirst","channelsLast"],nd=["valid","same","causal"],rd=["max","avg"],sd=["sum","mul","concat","ave"],id=new Map;function ad(t){Ph(ed,"DataFormat",t)}function od(t){Ph(nd,"PaddingMode",t)}function ld(t){Ph(rd,"PoolMode",t)}const ud=[];function cd(t,e){ud.push(t);try{const t=e();return ud.pop(),t}catch(t){throw ud.pop(),t}}function hd(t){if(!fd(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===ud.length?"":ud.join("/")+"/")+t}function dd(t){if(!fd(t))throw new Error("Not a valid tensor name: '"+t+"'");id.has(t)||id.set(t,0);const e=id.get(t);if(id.set(t,id.get(t)+1),e>0){const n=`${t}_${e}`;return id.set(n,1),n}return t}const pd=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function fd(t){return!!t.match(pd)}function md(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let s=e;s<n;++s)r*=t[s];return r}function gd(t){return ba(t=Array.isArray(t)?new Float32Array(t):t)}function yd(t){return ta(gd(t)).dataSync()[0]}function bd(t){return Gi(gd(t)).dataSync()[0]}function xd(t,e){if(e<t)throw new Ih(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;r<e;++r)n.push(r);return n}function vd(t,e){return t.asType(e)}function wd(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function kd(t,e,n){return gs((()=>{switch(t.rank){case 1:return Ea(t,e,n);case 2:return $a(t,[e,0],[n,t.shape[1]]);case 3:return Na(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return Ra(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return Sa(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return Sa(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new Ih("sliceAlongFirstAxis() received an unsupported tensor rank: "+t.rank)}}))}function Id(t,e,n){return gs((()=>{switch(t.rank){case 1:return Ea(t,e,n);case 2:return $a(t,[0,e],[t.shape[0],n]);case 3:return Na(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return Ra(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new Ih("sliceAlongLastAxis() received an unsupported tensor rank: "+t.rank)}}))}function Cd(t,e,n,r){return gs((()=>{switch(t.rank){case 1:return Ea(t,e,n);case 2:switch(r){case 1:return kd(t,e,n);case 2:return Id(t,e,n);default:throw new Ih("The axis is not within the rank of the tensor "+r)}case 3:switch(r){case 1:return kd(t,e,n);case 2:return Na(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return Id(t,e,n);default:throw new Ih("The axis is not within the rank of the tensor "+r)}case 4:switch(r){case 1:return kd(t,e,n);case 2:return Ra(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return Ra(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return Id(t,e,n);default:throw new Ih("The axis is not within the rank of the tensor "+r)}default:throw new Ih("sliceAlongLastAxis() received an unsupported tensor rank: "+t.rank)}}))}function Sd(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),li(t,e)}function Ed(t,e){switch(t.rank){case 1:return ui([t,e]);case 2:return ci([t,e],0);case 3:return hi([t,e],0);case 4:return di([t,e],0);default:throw new Ih("concatAlongFirstAxis() received an unsupported tensor rank: "+t.rank)}}function $d(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new Ih(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return Ni(t,e)}function Nd(t,e=0,n=1,r,s){return ga(t,e,n,r,s)}function Rd(t,e,n,r){if(t.rank<2||e.rank<2)throw new Ch(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3&&t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new Ch(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = `+e.shape);if(2===t.rank&&2===e.rank)return io({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?Fd(t.rank,r,"channelsLast"):null,activation:n});{const s=t.shape.slice(),i=s.pop();t=t.reshape([-1,i]);const a=e.shape.slice(),o=a.pop(),l=a.pop(),u=[...a,o],c=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=e.transpose(c).reshape([l,-1]);const h=[...s,...u];return io({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?Fd(t.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function Td(t,e,n){return gs((()=>(e=Array.isArray(e)?ba(e,"int32"):e.toInt(),Li(t,e,n))))}function Ad(t){return Wi(t,t)}function Fd(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new Ih("Unexpected bias dimensions: "+e.rank+"; expected it to be 1 or "+t);if(5===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1,1]):e.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,1,r[0]]):e.reshape([1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1]):e.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,r[0]]):e.reshape([1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1]):e.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,r[0]]):e.reshape([1].concat(r))}else if(t<3)return e;throw new Ih("Unsupported input rank by biasAdd: "+e.rank)}function Dd(t,e,n){return gs((()=>(null==n&&(n="channelsLast"),ad(n),t.add(Fd(t.rank,e,n)))))}function _d(t,e,n,r){return gs((()=>Ha(t,e,n,r)))}function Od(t,e,n=!1){return n?t():e()}const Md=["fanIn","fanOut","fanAvg"],Ld=["normal","uniform","truncatedNormal"];class zd extends cs{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Bd extends zd{apply(t,e){return Ji(t,e)}}Bd.className="Zeros",ds(Bd);class Pd extends zd{apply(t,e){return Zi(t,e)}}Pd.className="Ones",ds(Pd);class Wd extends zd{constructor(t){if(super(),"object"!=typeof t)throw new Ih("Expected argument of type ConstantConfig but got "+t);if(void 0===t.value)throw new Ih("config must have value set but got "+t);this.value=t.value}apply(t,e){return gs((()=>Wi(ks(this.value),Zi(t,e))))}getConfig(){return{value:this.value}}}Wd.className="Constant",ds(Wd);class Ud extends zd{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return ya(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Ud.className="RandomUniform",ds(Ud);class Vd extends zd{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Ch(`randomNormal does not support dType ${e}.`);return Nd(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Vd.className="RandomNormal",ds(Vd);class Gd extends zd{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Ch(`truncatedNormal does not support dType ${e}.`);return Wa(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Gd.className="TruncatedNormal",ds(Gd);class Hd extends zd{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return gs((()=>{if(2!==t.length||t[0]!==t[1])throw new Ih("Identity matrix initializer can only be used for 2D square matrices.");return Wi(this.gain,Ri(t[0]))}))}getConfig(){return{gain:this.gain}}}Hd.className="Identity",ds(Hd);class jd extends zd{constructor(t){if(super(),t.scale<0)throw new Ih("scale must be a positive float. Got: "+t.scale);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,Ph(Md,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){Ph(Ld,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,r;if(ad(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=md(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=md(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=md(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]}(t),r=n[0],s=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,r):"fanOut"===this.mode?i/=Math.max(1,s):i/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Ch(`${this.getClassName()} does not support dType ${e}.`);return Wa(t,0,n,e,this.seed)}{const n=Math.sqrt(3*i);return ya(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}jd.className="VarianceScaling",ds(jd);class qd extends jd{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return jd.className}}qd.className="GlorotUniform",ds(qd);class Kd extends jd{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return jd.className}}Kd.className="GlorotNormal",ds(Kd);class Xd extends jd{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return jd.className}}Xd.className="HeNormal",ds(Xd);class Yd extends jd{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return jd.className}}Yd.className="HeUniform",ds(Yd);class Jd extends jd{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return jd.className}}Jd.className="LeCunNormal",ds(Jd);class Zd extends jd{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return jd.className}}Zd.className="LeCunNormal",ds(Zd);class Qd extends zd{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new Ch("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return gs((()=>{if(t.length<2)throw new Ch("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=Nd(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=Oo.gramSchmidt(e);return t[0]>t[1]&&(n=n.transpose()),Wi(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Qd.className="Orthogonal",ds(Qd);const tp={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function ep(t,e={}){return Mh(t,hs.getMap().classNameMap,e,"initializer")}function np(t){return _h(t)}function rp(t){if("string"==typeof t){const e=t in tp?tp[t]:t;if("GlorotNormal"===e)return new Kd;if("GlorotUniform"===e)return new qd;if("HeNormal"===e)return new Xd;if("HeUniform"===e)return new Yd;if("LeCunNormal"===e)return new Jd;if("LeCunUniform"===e)return new Zd;{const t={};return t.className=e,t.config={},ep(t)}}return t instanceof zd?t:ep(t)}let sp=0;function ip(){return sp++}const ap={};function op(t=""){return t in ap||(ap[t]=0),ap[t]+=1,t+ap[t].toString()}function lp(t){return Array.isArray(t)&&Array.isArray(t[0])}function up(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function cp(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new Ih("Expected Tensor length to be 1; got "+t.length);e=t[0]}else e=t;return e}function hp(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return(t=t)[0];throw new Ih("Expected exactly 1 Shape; got "+t.length)}return t}function dp(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}class pp{constructor(t,e="float32",n="Variable",r=!0,s=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=ip(),n=null==n?"Variable":n,this.originalName=hd(n),this.name=dd(this.originalName),this.trainable_=r,this.constraint=s,this.val=function(t,e=!0,n,r){return Hn.makeVariable(t,e,n,r)}(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function fp(t){return t.map((t=>t.read()))}function mp(t){t.forEach((t=>{t[0].write(t[1])}))}class gp{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class yp{constructor(t,e,n,r,s,i,a){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=a,this.id=ip(),null!=i&&(this.originalName=hd(i),this.name=dd(this.originalName)),this.rank=e.length}}let bp=0;class xp{constructor(t,e){this.callArgs=e,this.id=bp++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const e of t.inboundLayers)null!=e&&e.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let vp=0;class wp extends cs{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=vp++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=Ah(t)+"_"+op(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new kh(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new Ih(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return Rh(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return Rh(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new wh("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new wh("Layer "+this.name+" is not connected, no input to return.");return Rh(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new wh("Layer "+this.name+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new wh("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return Rh(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=Th(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=Th(this.inputSpec);if(t.length!==e.length)throw new Ih(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: `+t);for(let n=0;n<t.length;n++){const r=t[n],s=e[n];if(null==s)continue;const i=r.rank;if(null!=s.ndim&&i!==s.ndim)throw new Ih(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${i}`);if(null!=s.maxNDim&&i>s.maxNDim)throw new Ih(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${i}`);if(null!=s.minNDim&&i<s.minNDim)throw new Ih(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${i}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new Ih(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const e in s.axes){const r=Number(e),i=s.axes[e],a=r>=0?t[r]:t[t.length+r];if(null!=i&&-1===[i,null].indexOf(a))throw new Ih(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${i} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const e=s.shape[t],i=r.shape[t];if(null!=e&&null!=i&&e!==i)throw new Ih(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=Th(t);let r=!0;for(const t of n)if(!(t instanceof yp)){r=!1;break}let s=!0;for(const t of n)if(t instanceof yp){s=!1;break}if(r===s)throw new Ih("Arguments to apply() must be all SymbolicTensors or all Tensors");return cd(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of Th(t))e.push(n.shape);this.build(Rh(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(t),s){let r=this.call(t,e);const s=Th(r),i=[];for(let t of s)-1!==n.indexOf(t)&&(t=t.clone()),i.push(t);if(r=Rh(i),null!=this.activityRegularizer)throw new Ch("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(t){t=Th(t);const e=[];for(const n of t)e.push(n.shape);return Rh(e)}(t),r=this.computeOutputShape(n);let s;const i="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new yp(i,n,this,Th(t),e,this.name,r))):new yp(i,r,this,Th(t),e,this.name),this.addInboundNode(t,s,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new Ch("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+JSON.stringify(t)+") does not match that of the "+`batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer `+this.name);else{let e=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)})),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: `+JSON.stringify(this.batchInputShape))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new wh(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new wh(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new kh(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return dp(this.weights)}build(t){this.built=!0}getWeights(t=!1){return fp(t?this.trainableWeights:this.weights)}setWeights(t){gs((()=>{const e=this.weights;if(e.length!==t.length)throw new Ih(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=fp(e);for(let s=0;s<r.length;++s){const i=r[s],a=e[s],o=t[s];if(!g(i.shape,o.shape))throw new Ih(`Layer weight shape ${i.shape} not compatible with provided weight shape `+o.shape);n.push([a,o])}mp(n)}))}addWeight(t,e,n,r,s,i,a){if(-1!==this._addedWeightNames.indexOf(t))throw new Ih(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=rp("zeros"));const o=r.apply(e,n),l=new pp(o,n,t,i,a);return o.dispose(),null!=s&&this.addLoss((()=>s.apply(l.read()))),null==i&&(i=!0),i?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=Th(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach((t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return e}addInboundNode(t,e,n,r,s,i,a=null){const o=Th(t);e=Th(e),n=Th(n),r=Th(r),s=up(s),i=up(i);const l=[],u=[],c=[];for(const t of o)l.push(t.sourceLayer),u.push(t.nodeIndex),c.push(t.tensorIndex);new xp({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:i},a);for(let t=0;t<e.length;t++)e[t].sourceLayer=this,e[t].nodeIndex=this.inboundNodes.length-1,e[t].tensorIndex=t}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function kp(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const r=kp(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of r)-1===e.indexOf(t)&&e.push(t)}return e}}}class Ip extends wp{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:op("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new Ih("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new Ih("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new Ih("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new yp(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new xp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new Ih("Cannot pass any input to an InputLayer's apply() method. InputLayer name: "+this.name)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function Cp(t){if(null==t)return;const e=[],n=[],r=[];for(const s in t){const i=t[s];if("number"!=typeof i){const t=i;e.push(t.data()),n.push(s),r.push(t)}}if(e.length>0){const s=await Promise.all(e);for(let e=0;e<s.length;++e)t[n[e]]=s[e][0];ys(r)}}function Sp(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}var Ep;Ip.className="InputLayer",ds(Ip),function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(Ep||(Ep={}));class $p{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class Np{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class Rp extends $p{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const t in e){const r=e[t];if("number"==typeof r)this.totals.hasOwnProperty(t)||(this.totals[t]=0),this.totals[t]=this.totals[t]+r*n;else{let e;t in this.totals?e=this.totals[t]:this.totals[t]=0;const s=gs((()=>Ss(this.totals[t],Wi(r,n))));this.totals[t]=s,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:gs((()=>{const n=Wi(vi(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),bs(e[t])})))}}class Tp extends $p{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])}async syncData(){const t=[],e=[],n=[];for(const r in this.history){const s=this.history[r];for(let i=0;i<s.length;++i)if("number"!=typeof s[i]){const a=s[i];t.push(a.data()),e.push(r),n.push(i)}}const r=await Promise.all(t);for(let t=0;t<r.length;++t)this.history[e[t]][n[t]].dispose(),this.history[e[t]][n[t]]=r[t][0]}}class Ap extends $p{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");T(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,r=wn();return(...s)=>{const i=wn();return i-r<e||(r=i,n=t(...s)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const r=[];null!=this.yield&&(await Cp(n),r.push(this.yield(t,e,n))),r.push(jo()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await Cp(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await Cp(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(jo()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await Cp(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await Cp(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(jo()):T(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await Cp(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await Cp(t),await this.trainEnd(t))}}function Fp(t,e){return null==t&&(t={}),t instanceof $p?[t]:Array.isArray(t)&&t[0]instanceof $p?t:Th(t).map((t=>new Ap(t,e)))}class Dp{constructor(){}static registerCallbackConstructor(t,e){h(t>=0&&Number.isInteger(t),(()=>"Verbosity level is expected to be an integer >= 0, but got "+t)),Dp.checkForDuplicate(e),null==Dp.constructors[t]&&(Dp.constructors[t]=[]),Dp.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Dp.constructors)Dp.constructors[+e].forEach((e=>{if(e===t)throw new Ih("Duplicate callback constructor.")}))}static clear(){Dp.constructors={}}static createCallbacks(t){const e=[];for(const n in Dp.constructors){const r=+n;t>=r&&e.push(...Dp.constructors[r])}return e.map((t=>new t))}}function _p(t,e,n,r,s,i,a,o,l){const u=new Tp,c=[new Rp,...Dp.createCallbacks(e)];null!=t&&c.push(...t),c.push(u);const h=new Np(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:i,batchSize:a,verbose:e,doValidation:o,metrics:l}),{callbackList:h,history:u}}function Op(t,e={},n=!1){return Mh(t,hs.getMap().classNameMap,e,"layer",n)}function Mp(t,e){return gs((()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=ji(Ad(t),e,!0),r=Ti(n.shape,vh()),s=_a(Pi(n,r));return vi(t,s)}))}function Lp(t,e){return gs((()=>Qi(Ad(Hi(e,t)),-1)))}function zp(t,e){return gs((()=>Qi(Cs(Hi(e,t)),-1)))}function Bp(t,e){return gs((()=>{const n=Hi(t,e),r=ii(Cs(t),vh(),Number.MAX_VALUE),s=Cs(vi(n,r));return Wi(100,Qi(s,-1))}))}function Pp(t,e,n=!1){return gs((()=>{if(n)e=Ta(e);else{const t=ji(e,e.shape.length-1,!0);e=vi(e,t)}return e=ii(e,vh(),1-vh()),sa(ji(Wi(t.toFloat(),Vi(e)),e.shape.length-1))}))}function Wp(t,e,n=!1){return gs((()=>{const r=Ai(function(t){const e=[md(t.shape)];return t.reshape(e)}(t)).toInt(),s=(e=ii(e,vh(),1-vh())).shape;return Pp(aa(r,s[s.length-1]).reshape(s),e,n)}))}function Up(t,e){return gs((()=>{let n;return n=ii(e,vh(),1-vh()),n=Vi(vi(n,Hi(1,n))),Qi(function(t,e){if(!g(t.shape,e.shape))throw new Ih(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return gs((()=>{const n=e.relu(),r=e.abs().neg();return n.sub(e.mul(t)).add(r.exp().log1p())}))}(t,n),-1)}))}function Vp(t,e){return gs((()=>{const n=Mp(t,-1),r=Mp(e,-1),s=Wi(n,r);return sa(ji(s,-1))}))}Dp.constructors={};const Gp={meanSquaredError:Lp,meanAbsoluteError:zp,meanAbsolutePercentageError:Bp,meanSquaredLogarithmicError:function(t,e){return gs((()=>{const n=ii(e,vh(),Number.MAX_VALUE),r=Vi(Ss(1,n)),s=ii(t,vh(),Number.MAX_VALUE),i=Vi(Ss(1,s));return Qi(Ad(Hi(r,i)),-1)}))},squaredHinge:function(t,e){return gs((()=>{const n=Pi(0,Hi(1,Wi(t,e)));return Qi(Ad(n),-1)}))},hinge:function(t,e){return gs((()=>{const n=Pi(0,Hi(1,Wi(t,e)));return Qi(n,-1)}))},categoricalHinge:function(t,e){return gs((()=>{const n=ji(Wi(t,e),-1),r=Gi(Wi(Hi(1,t),e),-1);return Pi(0,Ss(1,Hi(r,n)))}))},logcosh:function(t,e){return gs((()=>{const n=Math.log(2),r=Hi(e,t),s=Hi(Ss(r,Aa(Wi(-2,r))),n);return Qi(s,-1)}))},categoricalCrossentropy:Pp,sparseCategoricalCrossentropy:Wp,binaryCrossentropy:Up,kullbackLeiblerDivergence:function(t,e){return gs((()=>{const n=ii(t,vh(),1),r=ii(e,vh(),1);return ji(Wi(t,Vi(vi(n,r))),-1)}))},poisson:function(t,e){return gs((()=>{const n=Vi(Ss(vh(),e));return Qi(Hi(e,Wi(t,n)),-1)}))},cosineProximity:Vp};function Hp(t){if("string"==typeof t){if(t in Gp)return Gp[t];let e="Unknown loss "+t;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Ih(e)}return t}function jp(t,e){return gs((()=>{const n=Wi(.5,ca(e)),r=vd(zi(e,n),t.dtype);return Qi(Si(t,r),-1)}))}function qp(t,e){return gs((()=>vd(Si(zs(t,-1),zs(e,-1)),"float32")))}function Kp(t,e){return Up(t,e)}function Xp(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),Si(t,e).asType("float32")}const Yp=Pp,Jp=Wp,Zp={binaryAccuracy:jp,categoricalAccuracy:qp,precision:function(t,e){return gs((()=>{const n=function(t,e){return gs((()=>Ki(t.equal(1),e.equal(1)).sum().cast("float32")))}(t,e),r=function(t,e){return gs((()=>Ki(t.equal(0),e.equal(1)).sum().cast("float32")))}(t,e),s=n.add(r);return Ga(zi(s,0),n.div(s),0).cast("float32")}))},categoricalCrossentropy:Yp,sparseCategoricalCrossentropy:Jp,mse:Lp,MSE:Lp,mae:zp,MAE:zp,mape:Bp,MAPE:Bp,cosine:Vp};function Qp(t){if("string"==typeof t&&t in Zp)return Zp[t];if("string"!=typeof t&&null!=t)return t;throw new Ih("Unknown metric "+t)}function tf(t){if($h(null!==t,"Unknown LossOrMetricFn "+t),"string"==typeof t)return t;{let e;for(const n of Object.keys(Gp))if(Gp[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(Zp))if(Zp[n]===t){e=n;break}return void 0!==e?e:t.name}}function ef(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!nf(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function nf(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!nf(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!nf(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function rf(t,e,n=console.log){let r="";for(let n=0;n<t.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=t[n],r=r.slice(0,e[n]),r+=" ".repeat(e[n]-r.length);n(r)}function sf(t,e,n){let r;try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}rf([`${t.name} (${t.getClassName()})`,r,t.countParams().toString()],e,n)}function af(t,e,n,r){let s;try{s=JSON.stringify(t.outputShape)}catch(t){s="multiple"}const i=[];for(const e of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(e)))for(let t=0;t<e.inboundLayers.length;++t){const n=e.inboundLayers[t].name,r=e.nodeIndices[t],s=e.tensorIndices[t];i.push(`${n}[${r}][${s}]`)}const a=t.name,o=t.getClassName(),l=0===i.length?"":i[0];rf([`${a} (${o})`,s,t.countParams().toString(),l],e,r);for(let t=1;t<i.length;++t)rf(["","","",i[t]],e,r)}function of(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function lf(t,e){if(null===t)return null;if("string"==typeof t)return Fh(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];of(e,s,r)?n.push(r):n.push(lf(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"==typeof r)e[n]=r;else{const t=Fh(n);e[t]=lf(r,t)}}return e}}function uf(t,e){if(null==t)return null;if("string"==typeof t)return Ah(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];of(e,s,r)?n.push(r):n.push(uf(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];e[Ah(n)]="name"!==n&&"className"!==n||"string"!=typeof r?uf(r,n):r}return e}}class cf{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof cf)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new Ih(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return Lr(e,t.dtype)}catch(n){throw new Ih(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof yp){if(null==this.id2Value[t.id])throw new Ih("Nonexistent key: "+t.name);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new Ih("Feed dict has no SymbolicTensor name: "+t);return this.id2Value[e]}}getMask(t){if(t instanceof yp){if(null==this.id2Value[t.id])throw new Ih("Nonexistent key: "+t.name);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new Ih("Feed dict has no SymbolicTensor name: "+t);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&ys(this.id2Mask)}}const hf={},df={};function pf(t,e,n,r){const s=null!=n&&n.training,i=Array.isArray(t),a=i?t:[t],o=a.map((t=>t.name)),l=[],u=e.names();for(const t of o)-1!==u.indexOf(t)?l.push(e.getValue(t)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+e.names().join(",");let d,p;if(null==hf[c]){const t=function(t,e){h(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===t.length){const s=mf(t[0],e);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const i of t){const{sorted:t,recipientMap:a}=mf(i,e);for(const e of t)s.has(e.name)||(n.push(e),s.add(e.name));for(const t in a)null==r[t]&&(r[t]=new Set),a[t].forEach((e=>r[t].add(e)))}}return{sorted:n,recipientCounts:ff(r)}}(a,e);d=t.sorted,p=t.recipientCounts,hf[c]=d,df[c]=p}d=hf[c],p={},s||Object.assign(p,df[c]);const f=new cf(e);for(let t=0;t<d.length;++t){if(null!=r){const t=ms().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const i=d[t],a=i.sourceLayer;if(a instanceof Ip)continue;const u=[],c=[],h=[];let m=!1;for(const t of i.inputs){const n=f.getValue(t),r=f.getMask(t);u.push(n),c.push(r),null!=r&&(m=!0),s||(p[t.name]--,0!==p[t.name]||e.hasKey(t)||-1!==o.indexOf(t.name)||n.isDisposed||!0===t.sourceLayer.stateful||h.push(n))}m&&((n=n||{}).mask=c[0]);const g=Th(a.apply(u,n));let y=null;a.supportsMasking&&(y=a.computeMask(u,c));const b=gf(i),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){f.hasKey(x[t])||f.add(x[t],g[t],Array.isArray(y)?y[0]:y);const e=o.indexOf(x[t].name);-1!==e&&(l[e]=g[t])}s||ys(h)}return f.disposeMasks(),i?l:l[0]}function ff(t){const e={};for(const n in t)e[n]=t[n].size;return e}function mf(t,e){const n=new Set,r=[],s={};for(const t of e.names())n.add(t);const i=[],a=[];for(i.push(t);i.length>0;){const t=i[i.length-1];if(n.has(t.name)){i.pop();continue}const e=a[a.length-1]===i.length-1;if(0===t.inputs.length||e)i.pop(),r.push(t),n.add(t.name),e&&a.pop();else{a.push(i.length-1);for(const e of t.inputs)null==s[e.name]&&(s[e.name]=new Set),s[e.name].add(t.name),n.has(e.name)||i.push(e)}}return{sorted:r,recipientMap:s}}function gf(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class yf extends wp{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=op(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],zh(this.inputs).length!==this.inputs.length)throw new Ih("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+this.inputs.map((t=>t.name)));zh(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+this.outputs.map((t=>t.name))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const t of this.outputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const t of this.inputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;$h(0===n,"input layer has >1 nodes"),$h(0===r,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e];if(!(n instanceof Ip))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const t of this.outputLayers)this.outputNames.push(t.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},r={},s={},i={},a=[],o=(t,e,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=t.sourceLayer,s=t.nodeIndex,l=t.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new kh(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(u))return;this.containerNodes.add(yf.nodeKey(r,s)),r.id in i||(i[r.id]=Object.keys(i).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let t=0;t<c;t++){const r=u.inputTensors[t],s=u.inboundLayers[t],i=u.nodeIndices[t],a=u.tensorIndices[t];o(r,e,n,s,i,a)}for(e.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);a.push(u)},l=[],u=[];for(const t of this.outputs)o(t,l,u);const c=a.slice().reverse();for(const t of c){n[t.id]=t,t.id in e||(e[t.id]=0);let i=e[t.id];const a=null==r[t.outboundLayer.id]?0:r[t.outboundLayer.id];i=Math.max(i,a),r[t.outboundLayer.id]=i,s[t.outboundLayer.id]=t.outboundLayer,e[t.id]=i;for(let r=0;r<t.inboundLayers.length;r++){const s=t.inboundLayers[r],a=t.nodeIndices[r],o=s.inboundNodes[a],l=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(i+1,l),n[o.id]=o}}const h={};for(const t in e){const r=e[t];r in h||(h[r]=[]),h[r].push(n[t])}const d={};for(const t in r){const e=r[t];e in d||(d[e]=[]),d[e].push(s[t])}let p=Object.keys(d).map((t=>parseInt(t,10))).sort(Lh);this.layers=[];for(const t of p){const e=d[t];e.sort(((t,e)=>{const n=i[t.id],r=i[e.id];return n<r?-1:n>r?1:0}));for(const t of e)t instanceof yf&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(h).map((t=>parseInt(t,10))).sort(Lh);const f=this.inputs.slice(),m=[];for(const t of p)for(const e of h[t]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new kh("Graph disconnected: cannot obtain value for tensor "+n+` at layer "${t.name}". The following previous layers were accessed without issue: `+m);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map((t=>t.name));for(const t of g){const e=g.filter((e=>e===t)).length;if(1!==e)throw new kh(`The name "${t}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new xp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new Ih("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const t of this.layers)for(const e of t.weights){if(null!=n[e.originalName])throw new Ih("Duplicate weight name: "+e.originalName);n[e.originalName]=e,r++}const s=[];for(const r in t){let i=r;if(null==n[r]){const t=r.split("/");i=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[i])s.push([n[i],t[r]]);else if(e)throw new Ih("Provided weight data has no target variable: "+r);delete n[i]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new Ih(`${t.length} of ${r} weights are not set: `+t)}mp(s)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 2.7.0",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=uf(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return gs((()=>{t=Th(t);const n=new cf;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return pf(this.outputs,n,e)}))}computeMask(t,e){return gs((()=>{let n;return t=Th(t),n=null==e?Eh(null,t.length):Th(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=up(t);if(e.length!==this.inputLayers.length)throw new Ih(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let t=0;t<e.length;t++){const r=this.inputLayers[t],s=e[t];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(Lh);if(r.length>1)for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(e.id))continue;const r=[];for(let e=0;e<t.inboundLayers.length;e++){const s=t.inboundLayers[e],i=t.nodeIndices[e],a=t.tensorIndices[e],o=n[`${s.name}_${i}_${a}`];r.push(o)}const s=up(e.computeOutputShape(Rh(r))),i=e.inboundNodes.indexOf(t);for(let t=0;t<s.length;t++)n[`${e.name}_${i}_${t}`]=s[t]}}const s=[],i=[];for(let t=0;t<this.outputLayers.length;t++){const e=this.outputLayers[t],n=this.outputLayersNodeIndices[t],r=this.outputLayersTensorIndices[t],s=`${e.name}_${n}_${r}`;i.push(s)}for(let t=0;t<i.length;t++){const e=i[t];$h(e in n),s.push(n[e])}return Rh(s)}runInternalGraph(t,e){null==e&&(e=Eh(null,t.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],i=t[r],a=e[r];n[s.id]=[i,a]}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(Lh);for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,s=t.outputTensors,i=new Array;for(const t of r)t.id in n&&i.push(n[t.id]);if(i.length===r.length){let r,a,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===i.length){const[t,n]=i[0];null==u.mask&&(u.mask=n),o=Th(e.call(t,u)),l=Th(e.computeMask(t,n)),r=[t],a=[n]}else r=i.map((t=>t[0])),a=i.map((t=>t[1])),null==u.mask&&(u.mask=a),o=Th(e.call(r,u)),l=Th(e.computeMask(r,a));if(e.activityRegularizer)throw new Ch("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<s.length;++t){const e=s[t],r=o[t],i=l[t];n[e.id]=[r,i]}}}}const s=[],i=[],a=[];for(const t of this.outputs){$h(t.id in n,`Could not compute output ${t.name} : ${t.id}`);const[e,r]=n[t.id];a.push(e.shape),s.push(e),i.push(r)}return[s,i,a]}buildNodeConversionMap(t){const e={};let n;for(const t of this.layers){n=t instanceof yf?1:0;for(let r=0;r<t.inboundNodes.length;r++){const s=yf.nodeKey(t,r);this.containerNodes.has(s)&&(e[s]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new Ih(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new Ih("Provide either a layer name or layer index");for(const e of this.layers)if(e.name===t)return e;throw new Ih("No such layer: "+t)}calculateLosses(){return gs((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=yf.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const t of this.layers){const r=t.getClassName(),s=t.getConfig(),i=[];for(let n=0;n<t.inboundNodes.length;n++){const r=t.inboundNodes[n],s=yf.nodeKey(t,n);let a={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),a=r.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: `+r.callArgs+". They will not be included in the serialized model (and thus will be missing at deserialization time)."),a={}}if(r.inboundLayers.length>0){const t=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],i=r.nodeIndices[n],o=r.tensorIndices[n];let l=e[yf.nodeKey(s,i)];null==l&&(l=0),t.push([s.name,l,o,a])}i.push(t)}}}const a={};a.name=t.name,a.className=r,a.config=s,a.inboundNodes=i,n.push(a)}t.layers=n;const r=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t],s=this.inputLayersNodeIndices[t],i=yf.nodeKey(n,s);if(!this.containerNodes.has(i))continue;let a=e[i];null==a&&(a=0);const o=this.inputLayersTensorIndices[t];r.push([n.name,a,o])}t.inputLayers=r;const s=[];for(let t=0;t<this.outputLayers.length;t++){const n=this.outputLayers[t],r=this.outputLayersNodeIndices[t],i=yf.nodeKey(n,r);if(!this.containerNodes.has(i))continue;let a=e[i];null==a&&(a=0);const o=this.outputLayersTensorIndices[t];s.push([n.name,a,o])}return t.outputLayers=s,t}static fromConfig(t,e,n={},r=!1){const s={},i={};function a(t,e){t.name in i?i[t.name].push(e):i[t.name]=[e]}function o(t,e){const n=[];let r;for(const i of e){const o=i[0],l=i[1],u=i[2];if(r=null==i[3]?{}:i[3],!(o in s))return void a(t,e);const c=s[o];if(c.inboundNodes.length<=l)return void a(t,e);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&t.apply(Rh(n),r)}function l(t){const n=t.name,i=Op(t,null!=e.customObjects?e.customObjects:{});i.setFastWeightInitDuringBuild(r),s[n]=i,t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new Ih("Corrupted configuration, expected array for nodeData: "+t);a(i,t)}))}const u=e.name,c=e.layers;for(const t of c)l(t);for(;!Bh(i);)for(const t of c){const e=s[t.name];if(e.name in i){const t=i[e.name];delete i[e.name];for(const n of t)o(e,n)}}const h=[],d=[],p=e.inputLayers;for(const t of p){const e=t[0],n=t[1],r=t[2];$h(e in s);const i=s[e].inboundNodes[n].outputTensors;h.push(i[r])}const f=e.outputLayers;for(const t of f){const e=t[0],n=t[1],r=t[2];$h(e in s);const i=s[e].inboundNodes[n].outputTensors;d.push(i[r])}return new t({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new Ih("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){gs((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function bf(t,e){return function(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===r)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}(t,e,"classWeight")}async function xf(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=gs((()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await e.data());ys(e);const s=[];return r.forEach((t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);s.push(n[t])})),ba(s,"float32")}return null}function vf(t,e){return Wi(t,e)}function wf(t,e){let n,r;const s=e;n=s.xs,r=s.ys,h(null!=n&&null!=r,(()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+e));const i=kf("input",t.inputNames,n),a=kf("output",t.outputNames,r),o=i[0].shape[0];h(i.length===t.inputs.length,(()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: `+JSON.stringify(t.inputNames)+")")),h(a.length===t.outputs.length,(()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: `+JSON.stringify(t.outputNames)+")"));for(let e=0;e<i.length;e++)h(i[e].shape[0]===o,(()=>`Batch size mismatch: input ${t.inputNames[e]} has ${i[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));for(let e=0;e<a.length;e++)h(a[e].shape[0]===o,(()=>`Batch size mismatch: output ${t.outputNames[e]} has ${a[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));return{xs:i,ys:a}}function kf(t,e,n){if(n instanceof Nn)return[n];if(Array.isArray(n))return h(n.length===e.length,(()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`)),n;{const r=[];for(const s of e){if(null==n[s])throw new Ih(`The feature data generated by the dataset lacks the required ${t} key '${s}'.`);r.push(n[s])}return r}}function If(t){return"function"==typeof t.iterator}function Cf(t){h(t>0&&Number.isInteger(t),(()=>"batchSize is required to be a positive integer, but got "+t))}function Sf(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>kd(t,e,n-e))):kd(t,e,n-e)}function Ef(t,e){return gs((()=>null==t?null:Array.isArray(t)?t.map((t=>Ef(t,e))):Td(t,"int32"===e.dtype?e:e.toInt())))}function $f(t,e){const n=[];let r=0,s=null;for(;r<t;)s=r+e,s>=t&&(s=t),n.push([r,s]),r=s;return n}function Nf(t){const e=[];t instanceof Nn&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(wd(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function Rf(t,e){if(null==t)return;const n=[];if(e instanceof Nn)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const t in e){const r=e[t];n.push(r.id)}const r=[];if(t instanceof Nn)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&r.push(t)}));else if(null!=t)for(const e in t){const s=t[e];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((t=>{t.isDisposed||t.dispose()}))}function Tf(t){return Array.isArray(t)}function Af(t){return!function(t){return t instanceof Nn}(t)&&!Tf(t)}function Ff(t,e,n,r=!0,s=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(Tf(t)&&t.length>0)e=!0;else if(Af(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new Ih(`Error when checking model ${s} expected no data, but got `+t)}return[]}if(null==t)return e.map((t=>null));let i;if(Af(t)){t=t,i=[];for(const n of e){if(null==t[n])throw new Ih(`No data provided for "${n}". Need data for each key in: `+e);i.push(t[n])}}else if(Tf(t)){if((t=t).length!==e.length)throw new Ih(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): `+t);i=t}else{if(t=t,e.length>1)throw new Ih(`The model ${s} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape `+t.shape);i=[t]}if(i=Nf(i),null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const a=i[t];if(a.shape.length!==n[t].length)throw new Ih(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s). but got array with shape `+a.shape);for(let i=0;i<n[t].length;++i){if(0===i&&!r)continue;const o=a.shape[i],l=n[t][i];if(null!=l&&l>=0&&o!==l)throw new Ih(`Error when checking ${s}: expected ${e[t]} to have shape [${n[t]}], but got array with shape [${a.shape}].`)}}return i}function Df(t,e,n,r=!0,s=""){let i;if(Array.isArray(t)){if(t.length!==e.length)throw new Ih(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);i=t}else{if(e.length>1)throw new Ih(`The model expects ${e.length} ${s} Tensors, but only received one Tensor. Found: array with shape `+JSON.stringify(t.shape)+".");i=[t]}if(null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const a=i[t];if(a.shape.length!==n[t].length)throw new Ih(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s), but got array with shape `+JSON.stringify(a.shape));for(let i=0;i<n[t].length;++i){if(0===i&&!r)continue;const o=a.shape[i],l=n[t][i];if(null!=l&&l!==o)throw new Ih(`Error when checking ${s}: expected ${e[t]} to have shape ${JSON.stringify(n[t])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}class _f extends yf{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new Ih("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(t,e,n,r=console.log){const s=function(t){let e=!0;const n=[],r=[];for(const e in t.nodesByDepth)n.push(t.nodesByDepth[e]);for(const t of n){if(t.length>1||1===t.length&&t[0].inboundLayers.length>1){e=!1;break}r.push(...t)}if(e)for(const n of t.layers){let t=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),i=["Layer (type)","Output shape","Param #"];let a;if(s?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!s){i.push("Receives inputs"),a=[];for(const e in t.nodesByDepth)a.push(...t.nodesByDepth[e])}r("_".repeat(e)),rf(i,n,r),r("=".repeat(e));const o=t.layers;for(let t=0;t<o.length;++t)s?sf(o[t],n,r):af(o[t],n,a,r),r((t===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const l=function(t){let e;return e=null!=t.collectedTrainableWeights?dp(t.collectedTrainableWeights):dp(t.trainableWeights),e}(t),u=dp(t.nonTrainableWeights);r("Total params: "+(l+u)),r("Trainable params: "+l),r("Non-trainable params: "+u),r("_".repeat(e))}(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>Go.adagrad(.01),Adadelta:()=>Go.adadelta(1,.95,vh()),Adam:()=>Go.adam(.001,.9,.999,vh()),Adamax:()=>Go.adamax(.002,.9,.999,vh(),0),RMSProp:()=>Go.rmsprop(.001,.9,0,vh()),SGD:()=>Go.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new Ih("Unknown Optimizer "+t)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Is))throw new Ih("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new Ih(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map((t=>Hp(t)))}else{const n=Hp(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new Ih(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: `+this.outputNames);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(Hp(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let t=0;t<this.outputs.length;++t){const e=this.internalOutputShapes[t],n=this.outputNames[t];this.feedOutputNames.push(n),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[t])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],cd("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const r=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError("Type of metrics argument not understood. Expected an string,function, Array, or Object, found: "+t);n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),s=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};cd("metric",(()=>{for(let t=0;t<this.outputs.length;++t)-1===n.indexOf(t)&&(e=>{let n,r,i;for(const a of e){if("string"==typeof a&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(a)){const e=this.internalOutputShapes[t];let s;1===e[e.length-1]||this.lossFunctions[t]===Up?-1!==["accuracy","acc"].indexOf(a)?r=jp:-1!==["crossentropy","ce"].indexOf(a)&&(r=Kp):this.lossFunctions[t]===Wp?-1!==["accuracy","acc"].indexOf(a)?r=Xp:-1!==["crossentropy","ce"].indexOf(a)&&(r=Jp):-1!==["accuracy","acc"].indexOf(a)?r=qp:-1!==["crossentropy","ce"].indexOf(a)&&(r=Yp),-1!==["accuracy","acc"].indexOf(a)?s="acc":-1!==["crossentropy","ce"].indexOf(a)&&(s="ce"),i=r,n=""+s}else{const t=Qp(a);i=t,n=""+tf(a)}let e;cd(n,(()=>{e=i})),s(t,n,e)}})(r[t])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;Cf(r);const s=this.standardizeUserDataXY(t,e,!0,r);try{const i=s[0].concat(s[1]);this.makeTestFunction();const a=this.testFunction;return Rh(this.testLoop(a,i,r,n.verbose,n.steps))}finally{Rf(s[0],t),Rf(s[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const r=null!=(n=n||{}).batches,s=t.testFunction;let i=[];if(n.verbose>0)throw new Ch("Verbose mode is not implemented yet.");h(!r||n.batches>0&&Number.isInteger(n.batches),(()=>"Test loop expects `batches` to be a positive integer, but received "+JSON.stringify(n.batches)));const a="function"==typeof e.next?e:await e.iterator();let o=0,l=0;for(;!r||l<n.batches;){const e=await a.next();if(i=gs((()=>{if(e.value){const{xs:n,ys:r}=wf(t,e.value),a=n.concat(r),u=gs((()=>s(a)));if(ys(a),0===l)for(let t=0;t<u.length;++t)i.push(ks(0));const c=a[0].shape[0];for(let t=0;t<u.length;++t){const e=u[t],n=i[t];i[t]=gs((()=>Ss(i[t],Wi(c,e)))),l>0&&ys(n)}ys(u),o+=c,++l}return i})),e.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let t=0;t<i.length;++t){const e=i[t];i[t]=vi(i[t],o),ys(e)}return Rh(i)}(this,t,e)}checkNumSamples(t,e,n,r="steps"){let s;if(null!=n){if(s=null,null!=e)throw new Ih(`If ${r} is set, batchSize must be null or undefined.Got batchSize = `+e)}else{if(null==t)throw new Ih("Either the input data should have a defined shape, or "+r+" shoud be specified.");s=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return s}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new Ih("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],s=this.retrieveSymbolicTensors(r),i=new cf;if(t instanceof Nn&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new Ih(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)i.add(this.inputs[e],t[e])}else for(const e of this.inputs){const n=t[e.name];if(null==n)throw new Ih("No value is provided for the model's input "+e.name);i.add(e,n)}const a=pf(s,i);return n?a:a[0]}retrieveSymbolicTensors(t){const e=Eh(null,t.length);let n=t.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],i=s.map((t=>t.name));for(let r=0;r<t.length;++r){const a=i.indexOf(t[r]);if(-1!==a&&(e[r]=s[a],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,r)=>{null==e&&n.push(t[r])})),new Ih("Cannot find SymbolicTensors for output name(s): "+JSON.stringify(n))}return e}predictLoop(t,e=32,n=!1){return gs((()=>{const r=this.checkNumSamples(t);if(n)throw new Ch("Verbose predictLoop() is not implemented yet.");const s=$f(r,e),i=this.outputs.map((t=>[]));for(let e=0;e<s.length;++e)gs((()=>{const n=s[e][0],r=s[e][1],i=Sf(t,n,r),a=[];if(Array.isArray(i))for(let t=0;t<i.length;++t)a.push({key:this.inputs[t],value:i[t]});else a.push({key:this.inputs[0],value:i});const o=new cf(a);return pf(this.outputs,o)})).forEach(((t,e)=>i[e].push(t)));return Rh(i.map((t=>li(t,0))))}))}predict(t,e={}){const n=Nf(t);Df(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return Cf(r),this.predictLoop(n,r)}finally{Rf(n,t)}}predictOnBatch(t){Df(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new kh("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let t=0;t<this.feedOutputShapes.length;++t){const e=this.feedOutputShapes[t];this.feedLossFns[t]===Wp?s.push(e.slice(0,e.length-1).concat([1])):s.push(e)}if(function(t,e,n){const r=zh(t.map((t=>t.shape[0])));r.sort();const s=zh(e.map((t=>t.shape[0])));if(s.sort(),r.length>1)throw new Ih("All input Tensors (x) should have the same number of samples. Got array shapes: "+JSON.stringify(t.map((t=>t.shape))));if(s.length>1)throw new Ih("All target Tensors (y) should have the same number of samples. Got array shapes: "+JSON.stringify(e.map((t=>t.shape))));if(r.length>0&&s.length>0&&!g(r,s))throw new Ih(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(t=Ff(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=Ff(e,this.feedOutputNames,s,!1,"target")),function(t,e,n){const r=[Lp,Up,Pp];for(let s=0;s<t.length;++s){const i=t[s],a=e[s],o=n[s];if(null!=a){if(a===Pp&&1===i.shape[i.shape.length-1])throw new Ih(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(a)){const t=i.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const r=t[n],s=e[n];if(null!=s&&r!==s)throw new Ih(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!=0)throw new Ih(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,r,s=!0,i){const[a,o]=this.standardizeUserDataXY(t,e,s,i);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const t=bf(r,this.outputNames);l=[];for(let e=0;e<t.length;++e)l.push(await xf(o[e],null,t[e]))}return[a,o,l]}testLoop(t,e,n,r=0,s){return gs((()=>{const i=this.checkNumSamples(e,n,s,"steps"),a=[];if(r>0)throw new Ch("Verbose mode is not implemented yet.");if(null!=s)throw new Ch("steps mode in testLoop() is not implemented yet");{const r=$f(i,n),s=ba(xd(0,i));for(let n=0;n<r.length;++n){const i=r[n][0],o=r[n][1],l=kd(s,i,o-i),u=Ef(e,l),c=t(u);if(0===n)for(let t=0;t<c.length;++t)a.push(ks(0));for(let t=0;t<c.length;++t){const e=c[t];a[t]=Ss(a[t],Wi(o-i,e))}}for(let t=0;t<a.length;++t)a[t]=vi(a[t],i)}return a}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let s=r;Nh(t,r)>1&&(s+="_"+Nh(t.slice(0,n),r)),e.push(s)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],a=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const a=new cf(t),o=pf(this.outputs,a,{training:!0});let l;for(let t=0;t<this.lossFunctions.length;++t){let n=(0,this.lossFunctions[t])(r[t],o[t]);null!=s[t]&&(n=vf(n,s[t]));const i=Qi(n);e.push(i),l=0===t?n:Ss(l,n)}for(let t=0;t<this.metricsTensors.length;++t){let n;if(this.outputs.length>1&&t<this.outputs.length)n=e[t];else{const e=this.metricsTensors[t][0],s=this.metricsTensors[t][1];n=Qi(e(r[s],o[s]))}bs(n),i.push(n)}return l=Qi(l),this.calculateLosses().forEach((t=>{l=Ss(l,t)})),l}),!0,a)].concat(i)}}makeTestFunction(){this.testFunction=t=>gs((()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let t=0;t<this.inputs.length;++t)i.push({key:this.inputs[t],value:r[t]});const a=new cf(i),o=pf(this.outputs,a);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],i=Qi(r(s[t],o[t]));n=0===t?i:Ss(n,i),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],i=Qi(n(s[r],o[r]));e.push(i)}return e}))}async fit(t,e,n={}){return async function(t,e,n,r={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,i,a,o,u,c,h;t.isTraining=!0;try{const d=null==r.batchSize?32:r.batchSize;Cf(d);const p=!1,f=await t.standardizeUserData(e,n,r.sampleWeight,r.classWeight,p,d);s=f[0],i=f[1],h=f[2];let m,g=!1;if(null!=r.validationData&&r.validationData.length>0){if(g=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Ch("validationData including sample weights is not supported yet."):new Ih("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+r.validationData+" is invalid.");a=r.validationData[0],o=r.validationData[1];const e=!0,n=await t.standardizeUserData(a,o,null,null,e,d);u=n[0],c=n[1],m=u.concat(c)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){g=!0;const t=Math.floor(s[0].shape[0]*(1-r.validationSplit)),e=s[0].shape[0];u=Sf(s,t,e),s=Sf(s,0,t),c=Sf(i,t,e),i=Sf(i,0,t),m=u.concat(c)}else null!=r.validationSteps&&(g=!0);const y=s.concat(i).concat(h);t.checkTrainableWeightsConsistency();const b=t.makeTrainFunction(),x=t.getDedupedMetricsNames();let v,w;g?(t.makeTestFunction(),v=t.testFunction,w=x.slice().concat(x.map((t=>"val_"+t)))):(v=null,m=[],w=x.slice());const k=Fp(r.callbacks,r.yieldEvery);return await async function(t,e,n,r,s,i,a,o,u,c,h,d,p,f,m){null==s&&(s=32),null==i&&(i=1),null==h&&(h=!0),null==p&&(p=0);let g=!1;null!=u&&null!=c&&(g=!0);const y=t.checkNumSamples(n,s,f,"steps_per_epoch");let b;null!=y&&(b=xd(0,y)),null==a&&(a=1);const{callbackList:x,history:v}=_p(o,a,i,p,y,f,s,g,d);x.setModel(t),t.history=v,await x.onTrainBegin(),t.stopTraining_=!1;for(let a=p;a<i;++a){await x.onEpochBegin(a);const i={};{if("batch"===h)throw new Ch("batch shuffling is not implemneted yet");h&&l(b);const a=ba(b),o=$f(y,s);for(let l=0;l<o.length;++l){const h={};if(await x.onBatchBegin(l,h),gs((()=>{const d=o[l][0],p=o[l][1],f=kd(a,d,p-d);h.batch=l,h.size=p-d;const m=Ef(n,f),y=e(m);for(let t=0;t<r.length;++t){const e=r[t],n=y[t];h[e]=n,bs(n)}if(l===o.length-1&&g){const e=t.testLoop(u,c,s);for(let t=0;t<r.length;++t){const n=r[t],s=e[t];bs(s),i["val_"+n]=s}}})),await x.onBatchEnd(l,h),Sp(h),t.stopTraining_)break}a.dispose()}if(await x.onEpochEnd(a,i),t.stopTraining_)break}return await x.onTrainEnd(),await t.history.syncData(),t.history}(t,b,y,x,d,r.epochs,r.verbose,k,v,m,r.shuffle,w,r.initialEpoch,null)}finally{t.isTraining=!1,Rf(s,e),Rf(i,n),Rf(u,a),Rf(c,o),null!=h&&ys(h)}}(this,t,e,n)}async fitDataset(t,e){return async function(t,e,n){const r=null!=n.batchesPerEpoch;if(h(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),h(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),h(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>"For fitDataset(), config.epochs is expected to be a positive integer, but got "+n.epochs)),h(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>"For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got "+n.batchesPerEpoch)),h(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const s=null!=n.validationData;let i,a;if(s)if(If(n.validationData))h(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got "+n.validationBatches));else{const t=function(t){if(3===t.length)throw new Ch("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);i=t.xs,a=t.ys}const o=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map((t=>"val_"+t))):l.slice();const c=Fp(n.callbacks,n.yieldEvery),d=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=_p(c,d,n.epochs,null,null,function(t,e){let n=null;return null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}(e,n),null,s,u);p.setModel(t),t.history=f,await p.onTrainBegin(),t.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await e.iterator();for(;m<n.epochs;){const u={};await p.onEpochBegin(m);let c=0,h=0;for(r||(g=await e.iterator());!r||c<n.batchesPerEpoch;){const e=await g.next();if(r&&e.done){console.warn("You provided `batchesPerEpoch` as "+n.batchesPerEpoch+", but your dataset iterator ran out of data after "+c+" batches; interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:r,ys:s}=wf(t,e.value),i={};i.batch=h,i.size=r[0].shape[0],await p.onBatchBegin(h,i);const a=[];if(null!=n.classWeight){const e=bf(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)a.push(await xf(s[t],null,e[t]))}const u=r.concat(s).concat(a),d=o(u);ys(u);for(let t=0;t<l.length;++t){const e=l[t],n=d[t];i[e]=n,bs(n)}await p.onBatchEnd(h,i),Sp(i),h++,c++}if(r?c>=n.batchesPerEpoch:e.done){if(s){let e;e=If(n.validationData)?Th(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):Th(t.evaluate(i,a,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)u["val_"+t.metricsNames[n]]=e[n]}break}if(t.stopTraining_)break}if(await p.onEpochEnd(m,u),m++,t.stopTraining_)break}return await p.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),r=n[0],s=n[1],i=this.makeTrainFunction()(r.concat(s)),a=[];for(const t of i){const e=await t.data();a.push(e[0])}return ys(i),Rh(a)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let t=0;t<r.length;++t)n&&!r[t].trainable||e.push({name:r[t].originalName,tensor:s[t]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=ms().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-ms().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=Ah(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>Ah(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=Ah(n[r])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Ah(tf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>Ah(tf(t))));{const t={};for(const e in this.metrics)t[e]=Ah(tf(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=Op(lf(t.optimizer_config));let n,r;if("string"==typeof t.loss)n=Fh(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>Fh(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=Fh(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map((t=>Fh(t)));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=Fh(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}async save(t,e){if("string"==typeof t){const e=(n=t,dr.getSaveHandlers(n));if(0===e.length)throw new Ih(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Ih(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}var n;if(null==t.save)throw new Ih("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await ir(this.getNamedWeights(e)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v2.7.0",convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:n}=await ir(await this.optimizer.getWeights(),t);r.specs.push(...n),r.data=ur([r.data,e])}if(null!=this.userDefinedMetadata){const t=!0;ef(this.userDefinedMetadata,this.name,t),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=r.data,s.weightSpecs=r.specs,t.save(s)}setUserDefinedMetadata(t){ef(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}_f.className="Model",ds(_f);class Of extends _f{}Of.className="Functional",ds(Of);class Mf extends _f{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:op("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new Ih("Negative dimension size caused by adding layer "+t.name+" with input shape ["+t.inboundNodes[0].inputTensors[0].shape+"]")}add(t){const e=t instanceof Mf||t instanceof _f;let n;if(e){if(n=t,1!==n.outputs.length)throw new Ih("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Ih("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new Ih("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=function(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new Ih("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new Ip({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new Ih(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new Ih("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=kp(this.outputs[0])}this.inboundNodes=[],new xp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Eh(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(hp(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new _f({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new kh("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new kh("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new kh("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new kh("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},r=!1){let s,i={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new Ih("Legacy serialization format not supported yet.");s=e}else h(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=e.layers,delete e.layers,i=e;const a=new t(i);if(!(a instanceof Mf))throw new Ch("Sequential.fromConfig called on non-Sequential input: "+a);for(const t of s){const e=Op(t,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),a.add(e)}return a}set stopTraining(t){if(null==this.model)throw new Ih("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new Ih("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}function Lf(t){return new _f(t)}function zf(t,e){return null==e&&(e={}),async function(t,e){if(null==e&&(e={}),"string"==typeof t){const s=(n=t,r=e,dr.getLoadHandlers(n,r));if(0===s.length)s.push(function(t,e){return jr(t,e)}(t,e));else if(s.length>1)throw new Ih(`Found more than one (${s.length}) load handlers for URL '${t}'`);t=s[0]}var n,r;return async function(t,e,n){if(null==n&&(n={}),null==t.load)throw new Ih("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await t.load();let s=r.modelTopology;null!=s.model_config&&(s=s.model_config);const i=null==n.strict||n.strict,a=null!=r.weightData&&null!=r.weightSpecs&&i,o=Op(lf(s),void 0,a),l=r.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new Ih("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:t,optimizerWeights:e}=function(t,e){const n=function(t,e){const n={};let r,s=0;for(const i of e){const e=i.name,a=i.dtype,o=i.shape,l=m(o);let u;if("quantization"in i){const n=i.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${i.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${i.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==a)throw new Error(`Weight ${i.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${a}.`)}const o=sr[n.dtype],c=t.slice(s,s+l*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===a)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];u[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=hr()),u=r(h)}else{if("int32"!==a)throw new Error(`Unsupported dtype in weight '${e}': ${a}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];u[t]=Math.round(e*n.scale+n.min)}}s+=l*o}else if("string"===a){const e=m(i.shape);u=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(s,s+4))[0];s+=4;const n=new Uint8Array(t.slice(s,s+e));u.push(n),s+=e}}else{const r=sr[a],i=t.slice(s,s+l*r);if("float32"===a)u=new Float32Array(i);else if("int32"===a)u=new Int32Array(i);else if("bool"===a)u=new Uint8Array(i);else{if("complex64"!==a)throw new Error(`Unsupported dtype in weight '${e}': ${a}`);{u=new Float32Array(i);const t=new Float32Array(u.length/2),r=new Float32Array(u.length/2);for(let e=0;e<t.length;e++)t[e]=u[2*e],r[e]=u[2*e+1];const s=rr(t,o,"float32"),a=rr(r,o,"float32");n[e]=er(s,a),s.dispose(),a.dispose()}}s+=l*r}"complex64"!==a&&(n[e]=rr(u,o,a))}return n}(t,e),r={},s=[];return e.forEach((t=>{"optimizer"===t.group?s.push({name:t.name,tensor:n[t.name]}):r[t.name]=n[t.name]})),{modelWeights:r,optimizerWeights:s}}(r.weightData,r.weightSpecs);o.loadWeights(t,i),null!=o.optimizer&&e.length>0&&await o.optimizer.setWeights(e),ys(t),ys(e.map((t=>t.tensor)))}return o}(t,0,e)}(t,e)}Mf.className="Sequential",ds(Mf);class Bf extends cs{getConfig(){return{}}}class Pf extends Bf{apply(t,e=1){return function(t,e=1){if(1!==e)throw new Ch(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return wi(t)}(t,e)}}Pf.className="elu",ds(Pf);class Wf extends Bf{apply(t){return ka(t)}}Wf.className="selu",ds(Wf);class Uf extends Bf{apply(t){return va(t)}}Uf.className="relu",ds(Uf);class Vf extends Bf{apply(t){return gs((()=>ea(6,va(t))))}}Vf.className="relu6",ds(Vf);class Gf extends Bf{apply(t){return t}}Gf.className="linear",ds(Gf);class Hf extends Bf{apply(t){return Ca(t)}}Hf.className="sigmoid",ds(Hf);class jf extends Bf{apply(t){return function(t){return gs((()=>{const e=Ss(.5,Wi(.2,t));return ii(e,0,1)}))}(t)}}jf.className="hardSigmoid",ds(jf);class qf extends Bf{apply(t){return Aa(t)}}qf.className="softplus",ds(qf);class Kf extends Bf{apply(t){return function(t){return gs((()=>vi(t,Cs(t).add(1))))}(t)}}Kf.className="softsign",ds(Kf);class Xf extends Bf{apply(t){return La(t)}}Xf.className="tanh",ds(Xf);class Yf extends Bf{apply(t,e=-1){return Ta(t,e)}}Yf.className="softmax",ds(Yf);class Jf extends Bf{apply(t,e=-1){return qi(t,e)}}Jf.className="logSoftmax",ds(Jf);class Zf extends Bf{apply(t,e=1){return gs((()=>Ca(t.mul(e)).mul(t)))}}function Qf(t){return t.getClassName()}function tm(t,e={}){return Mh(t,hs.getMap().classNameMap,e,"activation")}function em(t){if(null==t){return tm({className:"linear",config:{}})}if("string"==typeof t){const e={};return e.className=t,e.config={},tm(e)}return t instanceof Bf?t:tm(t)}Zf.className="swish",ds(Zf);class nm extends cs{}class rm extends nm{constructor(t){super(),function(t){if(null!=t&&"object"!=typeof t)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an object, but received: "+t)}(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return gs((()=>{let e=Ji([1]);return this.hasL1&&(e=Ss(e,ji(Wi(this.l1,Cs(t))))),this.hasL2&&(e=Ss(e,ji(Wi(this.l2,Ad(t))))),e.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}rm.className="L1L2",ds(rm);const sm={l1l2:"L1L2"};function im(t){return _h(t)}function am(t,e={}){return Mh(t,hs.getMap().classNameMap,e,"regularizer")}function om(t){return null==t?null:"string"==typeof t?am({className:t in sm?sm[t]:t,config:{}}):t instanceof nm?t:am(t)}class lm extends wp{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=cp(t);let n=va(t);return null!=this.maxValue&&(n=ii(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}lm.className="ReLU",ds(lm);class um extends wp{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=cp(t);return Ui(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}um.className="LeakyReLU",ds(um);class cm extends wp{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=rp(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=om(t.alphaRegularizer),this.alphaConstraint=td(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new Ih("Expected sharedAxes to be a number or an array of numbers, but got "+t.sharedAxes);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=hp(t)).slice(1);if(null!=this.sharedAxes)for(const t of this.sharedAxes)e[t-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)n[e]=t[e];this.inputSpec=[new gp({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=cp(t),da(t,this.alpha.read())}getConfig(){const t={alphaInitializer:np(this.alphaInitializer),alphaRegularizer:im(this.alphaRegularizer),alphaConstraint:Zh(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}cm.className="PReLU",ds(cm);class hm extends wp{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new Ch(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=cp(t);return wi(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}hm.className="ELU",ds(hm);class dm extends wp{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=cp(t);return n.mul(vd(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}dm.className="ThresholdedReLU",ds(dm);class pm extends wp{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Yf).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=cp(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function fm(t,e,n){if("number"==typeof t)return Eh(t,e);if(t.length!==e)throw new Ih(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let s=0;s<e;++s){const i=t[s];if((r=i)!==parseInt(r.toString(),10))throw new Ih(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number `+i)}return t;var r}function mm(t,e,n,r,s=1){if(null==t)return t;let i;return i="same"===n?t:t-(e+(e-1)*(s-1))+1,Math.floor((i+r-1)/r)}function gm(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+bd([n-e,0]);else{if("same"!==r)throw new Ih(`Unsupport padding mode: ${r}.`);t*=e}return t}function ym(t,e){return gs((()=>(ad(e),"channelsFirst"===e?Os(t,[0,2,3,1]):t)))}function bm(t,e){return gs((()=>(ad(e),"channelsFirst"===e?Os(t,[0,2,3,4,1]):t)))}function xm(t,e,n,r=[1,1],s="valid",i,a,o=null){return gs((()=>{if(null==i&&(i="channelsLast"),ad(i),3!==t.rank&&4!==t.rank)throw new Ih(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new Ih(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let l=ym(t,i);if("causal"===s)throw new Ch("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=ro({x:l,filter:e,strides:r,pad:"same"===s?"same":"valid",dilations:a,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===i&&(l=Os(l,[0,3,1,2])),l}))}pm.className="Softmax",ds(pm);class vm extends wp{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",vm.verifyArgs(e),this.rank=t,Uh(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Ch(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=fm(e.kernelSize,t,"kernelSize"),this.strides=fm(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,od(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ad(this.dataFormat),this.activation=em(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=rp(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=td(e.biasConstraint),this.biasRegularizer=om(e.biasRegularizer),this.activityRegularizer=om(e.activityRegularizer),this.dilationRate=fm(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Ih("dilationRate must be a number or an array of a single number for 1D convolution, but received "+JSON.stringify(this.dilationRate));if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Ih("dilationRate must be a number or array of two numbers for 2D convolution, but received "+JSON.stringify(this.dilationRate))}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Ih("dilationRate must be a number or array of three numbers for 3D convolution, but received "+JSON.stringify(this.dilationRate))}static verifyArgs(t){if($h("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!Wh(t.kernelSize,"number",1,3))throw new Ih(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Qf(this.activation),useBias:this.useBias,biasInitializer:np(this.biasInitializer),biasRegularizer:im(this.biasRegularizer),activityRegularizer:im(this.activityRegularizer),biasConstraint:Zh(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class wm extends vm{constructor(t,e){super(t,e),this.kernel=null,wm.verifyArgs(e),this.filters=e.filters,Uh(this.filters,"filters"),this.kernelInitializer=rp(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=td(e.kernelConstraint),this.kernelRegularizer=om(e.kernelRegularizer)}build(t){t=hp(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Ih("The channel dimension of the input should be defined. Found "+t[e]);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return gs((()=>{let e;t=cp(t);const n=null==this.bias?null:this.bias.read(),r=Gh(this.activation.getClassName());if(null!=r&&2===this.rank)e=xm(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=function(t,e,n,r=1,s="valid",i,a=1){return gs((()=>{if(null==i&&(i="channelsLast"),ad(i),3!==t.shape.length)throw new Ih("The input of a conv1dWithBias operation should be 3, but is "+t.shape.length+" instead.");if(3!==e.shape.length)throw new Ih("The kernel for a conv1dWithBias operation should be 3, but is "+e.shape.length+" instead");if(null!=n&&1!==n.shape.length)throw new Ih("The bias for a conv1dWithBias operation should be 1, but is "+e.shape.length+" instead");if("channelsFirst"===i&&(t=Os(t,[0,2,1])),"causal"===s)throw new Ch("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=fi(t,e,r,"same"===s?"same":"valid","NWC",a);return null!=n&&(o=Dd(o,n)),o}))}(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=xm(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Ch("convolutions greater than 3D are not implemented yet.");e=function(t,e,n,r=[1,1,1],s="valid",i,a){return gs((()=>{if(null==i&&(i="channelsLast"),ad(i),4!==t.rank&&5!==t.rank)throw new Ih("conv3dWithBias expects input to be of rank 4 or 5, but received "+t.rank+".");if(4!==e.rank&&5!==e.rank)throw new Ih("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+t.rank+".");let o=bm(t,i);if("causal"===s)throw new Ch("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=yi(o,e,r,"same"===s?"same":"valid","NDHWC",a),null!=n&&(o=Dd(o,n)),"channelsFirst"===i&&(o=Os(o,[0,4,1,2,3])),o}))}(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=hp(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let t=0;t<n.length;++t){const r=mm(n[t],this.kernelSize[t],this.padding,this.strides[t],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[t]);e.push(r)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:np(this.kernelInitializer),kernelRegularizer:im(this.kernelRegularizer),kernelConstraint:Zh(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new Ih("Convolution layer expected config.filters to be a 'number' > 0 but got "+JSON.stringify(t.filters))}}class km extends wm{constructor(t){super(2,t),km.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!Wh(t.kernelSize,"number",1,2))throw new Ih(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}km.className="Conv2D",ds(km);class Im extends wm{constructor(t){super(3,t),Im.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new Ih(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}Im.className="Conv3D",ds(Im);class Cm extends km{constructor(t){if(super(t),this.inputSpec=[new gp({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Ih("Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(t){if(4!==(t=hp(t)).length)throw new Ih("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Ih("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new gp({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return gs((()=>{let e=cp(t);if(4!==e.shape.length)throw new Ih("Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+e.shape.length);const n=e.shape,r=n[0];let s,i;"channelsFirst"===this.dataFormat?(s=2,i=3):(s=1,i=2);const a=n[s],o=n[i],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,gm(a,c,l,this.padding),gm(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=Os(e,[0,2,3,1]));let p=gi(e,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Os(p,[0,3,1,2])),null!=this.bias&&(p=Dd(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(t){const e=(t=hp(t)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const i=this.kernelSize[0],a=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return e[n]=this.filters,e[r]=gm(e[r],o,i,this.padding),e[s]=gm(e[s],l,a,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Cm.className="Conv2DTranspose",ds(Cm);class Sm extends wm{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new Ih("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new Ih("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new Ih(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received `+JSON.stringify(e.padding));this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=rp(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=om(e.depthwiseRegularizer),this.depthwiseConstraint=td(e.depthwiseConstraint),this.pointwiseInitializer=rp(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=om(e.pointwiseRegularizer),this.pointwiseConstraint=td(e.pointwiseConstraint)}build(t){if((t=hp(t)).length<this.rank+2)throw new Ih(`Inputs to SeparableConv${this.rank}D should have rank `+(this.rank+2)+", but received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new Ih("The channel dimension of the inputs should be defined, but found "+JSON.stringify(t[e]));const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let t=0;t<this.rank;++t)s.push(1);s.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new gp({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return gs((()=>{let e;if(t=cp(t),1===this.rank)throw new Ch("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=Os(t,[0,2,3,1])),e=Ia(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=Dd(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=Os(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=np(this.depthwiseInitializer),t.pointwiseInitializer=np(this.pointwiseInitializer),t.depthwiseRegularizer=im(this.depthwiseRegularizer),t.pointwiseRegularizer=im(this.pointwiseRegularizer),t.depthwiseConstraint=Zh(this.depthwiseConstraint),t.pointwiseConstraint=Zh(this.pointwiseConstraint),t}}Sm.className="SeparableConv";class Em extends Sm{constructor(t){super(2,t)}}Em.className="SeparableConv2D",ds(Em);class $m extends wm{constructor(t){super(1,t),$m.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!Wh(t.kernelSize,"number",1,1))throw new Ih(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}$m.className="Conv1D",ds($m);class Nm extends wp{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return gs((()=>{if(t=cp(t),"channelsLast"===this.dataFormat){const e=Cd(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Cd(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=Cd(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Cd(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Nm.className="Cropping2D",ds(Nm);class Rm extends wp{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return gs((()=>{let e=cp(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=Os(e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],s=e.resizeNearestNeighbor([t,r]);return Os(s,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return e.resizeNearestNeighbor([t,r])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Rm.className="UpSampling2D",ds(Rm);class Tm extends vm{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=rp(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=td(t.depthwiseConstraint),this.depthwiseRegularizer=om(t.depthwiseRegularizer)}build(t){if((t=hp(t)).length<4)throw new Ih(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new Ih(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return gs((()=>{let e=function(t,e,n=[1,1],r="valid",s,i){return gs((()=>{null==s&&(s="channelsLast"),ad(s);let a=ym(t,s);if(4!==t.rank)throw new Ih("Input for depthwiseConv2d is required to be 4-D, but is instead "+t.rank+"-D");if(4!==e.rank)throw new Ih("depthwiseKernel is required to be 4-D, but is instead "+e.rank+"-D");return a=bi(a,e,n,"same"===r?"same":"valid","NHWC",i),"channelsFirst"===s&&(a=Os(a,[0,3,1,2])),a}))}(t=cp(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=Dd(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=hp(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=mm(e,this.kernelSize[0],this.padding,this.strides[0]),i=mm(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,s,i]:[t[0],s,i,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=np(this.depthwiseInitializer),t.depthwiseRegularizer=im(this.depthwiseRegularizer),t.depthwiseConstraint=Zh(this.depthwiseRegularizer),t}}function Am(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new Ih("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function s(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=s(e),constants:n=s(n)}}function Fm(t,e,n,r=!1,s,i,a=!1,o=!1){return gs((()=>{const l=e.shape.length;if(l<3)throw new Ih(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(xd(2,l));if(e=Os(e,u),null!=i)throw new Ch("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=s.asType("bool").asType("float32")).rank===l-1&&(s=$i(s,-1)),s=Os(s,u)),r&&(e=wa(e,0),null!=s&&(s=wa(s,0)));const c=[];let h,d=n;const p=e.shape[0],f=Ua(e);let m,g;null!=s&&(m=Ua(s));for(let e=0;e<p;++e){const n=f[e],r=gs((()=>t(n,d)));if(null==s)h=r[0],d=r[1];else{const t=gs((()=>{const t=m[e],n=ca(t).sub(t);return{output:r[0].mul(t).add(d[0].mul(n)),newStates:d.map(((e,s)=>r[1][s].mul(t).add(e.mul(n))))}}));h=t.output,d=t.newStates}o&&c.push(h)}return o&&(g=Ma(c,1)),[h,g,d]}))}Tm.className="DepthwiseConv2D",ds(Tm);class Dm extends wp{constructor(t){let e;if(super(t),null==t.cell)throw new Ih("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new Wm({cells:t.cell}):t.cell,null==e.stateSize)throw new Ih("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new gp({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?xd(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null)):this.states_}setStates(t){this.states_=t}computeOutputShape(t){lp(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return gs((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new Ch("Constants support is not implemented in RNN yet.");lp(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new gp({shape:[e,null,...n]});const r=[t[0]].concat(t.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!g(this.stateSpec.map((t=>t.shape[t.shape.length-1])),s))throw new Ih(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is `+this.cell.stateSize)}else this.stateSpec=s.map((t=>new gp({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t,e=!1){gs((()=>{if(!this.stateful)throw new wh("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Ih("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>Ji([n,t]))):this.states_=[Ji([n,this.cell.stateSize])];else if(null==t)ys(this.states_),null!=this.keptStates&&(ys(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>Ji([n,t]))):this.states_[0]=Ji([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Ih(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: `+t);!0===e?this.keptStates.push(this.states_.slice()):ys(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,i=[n,s];if(!g(r.shape,i))throw new Ih(`State ${e} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map((t=>bs(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=Am(t,n,r,this.numConstants);t=s.inputs,n=s.initialState,r=s.constants;let i=[],a=[];if(null!=n){e.initialState=n,i=i.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new gp({shape:t.shape}));a=a.concat(this.stateSpec)}if(null!=r&&(e.constants=r,i=i.concat(r),this.numConstants=r.length),i[0]instanceof yp){const n=[t].concat(i),r=this.inputSpec.concat(a),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return gs((()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let s=null==e?null:e.initialState;t=cp(t),null==s&&(s=this.stateful?this.states_:this.getInitialState(t));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==i)throw new Ih(`RNN Layer has ${i} state(s) but was passed `+s.length+" initial state(s).");this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:r},o=Fm(((t,e)=>{const n=this.cell.call([t].concat(e),a);return[n[0],n.slice(1)]}),t,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(t){return gs((()=>{let e=Ji(t.shape);return e=ji(e,[1,2]),e=wd(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?$d(e,[1,t]):e)):this.cell.stateSize>1?[$d(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Dm.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const r=Op(e.cell,n);return new t(Object.assign(e,{cell:r}))}}Dm.className="RNN",ds(Dm);class _m extends wp{}class Om extends _m{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Uh(this.units,"units"),this.activation=em(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=rp(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=rp(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=rp(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=om(t.kernelRegularizer),this.recurrentRegularizer=om(t.recurrentRegularizer),this.biasRegularizer=om(t.biasRegularizer),this.kernelConstraint=td(t.kernelConstraint),this.recurrentConstraint=td(t.recurrentConstraint),this.biasConstraint=td(t.biasConstraint),this.dropout=yd([1,bd([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=yd([1,bd([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=hp(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return gs((()=>{if(2!==(t=t).length)throw new Ih(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e.training&&e.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Um({ones:()=>ca(t),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Um({ones:()=>ca(n),rate:this.recurrentDropout,training:r}));const i=this.dropoutMask,a=this.recurrentDropoutMask;s=Rd(null!=i?Wi(t,i):t,this.kernel.read()),null!=this.bias&&(s=Dd(s,this.bias.read())),null!=a&&(n=Wi(n,a));let o=Ss(s,Rd(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Qf(this.activation),useBias:this.useBias,kernelInitializer:np(this.kernelInitializer),recurrentInitializer:np(this.recurrentInitializer),biasInitializer:np(this.biasInitializer),kernelRegularizer:im(this.kernelRegularizer),recurrentRegularizer:im(this.recurrentRegularizer),biasRegularizer:im(this.biasRegularizer),activityRegularizer:im(this.activityRegularizer),kernelConstraint:Zh(this.kernelConstraint),recurrentConstraint:Zh(this.recurrentConstraint),biasConstraint:Zh(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}Om.className="SimpleRNNCell",ds(Om);class Mm extends Dm{constructor(t){t.cell=new Om(t),super(t)}call(t,e){return gs((()=>{null!=this.cell.dropoutMask&&(ys(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ys(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return new t(e)}}Mm.className="SimpleRNN",ds(Mm);class Lm extends _m{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new Ih("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Uh(this.units,"units"),this.activation=em(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=em(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=rp(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=rp(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=rp(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=om(t.kernelRegularizer),this.recurrentRegularizer=om(t.recurrentRegularizer),this.biasRegularizer=om(t.biasRegularizer),this.kernelConstraint=td(t.kernelConstraint),this.recurrentConstraint=td(t.recurrentConstraint),this.biasConstraint=td(t.biasConstraint),this.dropout=yd([1,bd([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=yd([1,bd([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=hp(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return gs((()=>{if(2!==(t=t).length)throw new Ih("GRUCell expects 2 input Tensors (inputs, h, c), got "+t.length+".");const n=null!=e.training&&e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Um({ones:()=>ca(t),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Um({ones:()=>ca(r),rate:this.recurrentDropout,training:n,count:3}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let a,o,l;0<this.dropout&&this.dropout<1&&(t=Wi(t,s[0]));let u=Rd(t,this.kernel.read());this.useBias&&(u=Dd(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Wi(r,i[0]));const c=this.recurrentKernel.read(),[h,d]=Da(c,[2*this.units,this.units],c.rank-1),p=Rd(r,h),[f,m,g]=Da(u,3,u.rank-1),[y,b]=Da(p,2,p.rank-1);a=this.recurrentActivation.apply(Ss(f,y)),o=this.recurrentActivation.apply(Ss(m,b));const x=Rd(Wi(o,r),d);l=this.activation.apply(Ss(g,x));const v=Ss(Wi(a,r),Wi(Ss(1,sa(a)),l));return[v,v]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Qf(this.activation),recurrentActivation:Qf(this.recurrentActivation),useBias:this.useBias,kernelInitializer:np(this.kernelInitializer),recurrentInitializer:np(this.recurrentInitializer),biasInitializer:np(this.biasInitializer),kernelRegularizer:im(this.kernelRegularizer),recurrentRegularizer:im(this.recurrentRegularizer),biasRegularizer:im(this.biasRegularizer),activityRegularizer:im(this.activityRegularizer),kernelConstraint:Zh(this.kernelConstraint),recurrentConstraint:Zh(this.recurrentConstraint),biasConstraint:Zh(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}Lm.className="GRUCell",ds(Lm);class zm extends Dm{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Lm(t),super(t)}call(t,e){return gs((()=>{null!=this.cell.dropoutMask&&(ys(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ys(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}zm.className="GRU",ds(zm);class Bm extends _m{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Uh(this.units,"units"),this.activation=em(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=em(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=rp(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=rp(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=rp(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=om(t.kernelRegularizer),this.recurrentRegularizer=om(t.recurrentRegularizer),this.biasRegularizer=om(t.biasRegularizer),this.kernelConstraint=td(t.kernelConstraint),this.recurrentConstraint=td(t.recurrentConstraint),this.biasConstraint=td(t.biasConstraint),this.dropout=yd([1,bd([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=yd([1,bd([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=hp(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends zd{apply(e,r){const s=t.apply([n]),i=(new Pd).apply([n]),a=t.apply([2*n]);return Ed(Ed(s,i),a)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return gs((()=>{const n=null!=e.training&&e.training;if(3!==(t=t).length)throw new Ih("LSTMCell expects 3 input Tensors (inputs, h, c), got "+t.length+".");let r=t[1];const s=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Um({ones:()=>ca(t),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Um({ones:()=>ca(r),rate:this.recurrentDropout,training:n,count:4}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(t=Wi(t,i[0]));let h=Rd(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Wi(r,a[0])),h=Ss(h,Rd(r,this.recurrentKernel.read())),this.useBias&&(h=Dd(h,this.bias.read()));const[d,p,f,m]=Da(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=Ss(Wi(l,s),Wi(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Wi(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Qf(this.activation),recurrentActivation:Qf(this.recurrentActivation),useBias:this.useBias,kernelInitializer:np(this.kernelInitializer),recurrentInitializer:np(this.recurrentInitializer),biasInitializer:np(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:im(this.kernelRegularizer),recurrentRegularizer:im(this.recurrentRegularizer),biasRegularizer:im(this.biasRegularizer),activityRegularizer:im(this.activityRegularizer),kernelConstraint:Zh(this.kernelConstraint),recurrentConstraint:Zh(this.recurrentConstraint),biasConstraint:Zh(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}Bm.className="LSTMCell",ds(Bm);class Pm extends Dm{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Bm(t),super(t)}call(t,e){return gs((()=>{null!=this.cell.dropoutMask&&(ys(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ys(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Pm.className="LSTM",ds(Pm);class Wm extends _m{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return gs((()=>{let n=(t=t).slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let i;for(let a=0;a<this.cells.length;++a){const o=this.cells[a];n=r[a],i=0===a?[t[0]].concat(n):[i[0]].concat(n),i=o.call(i,e),s.push(i.slice(1))}n=[];for(const t of s.slice().reverse())n.push(...t);return[i[0]].concat(n)}))}build(t){let e;lp(t)&&(t=t[0]),t=t,this.cells.forEach(((n,r)=>{cd("RNNCell_"+r,(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map((t=>({className:t.getClassName(),config:t.getConfig()})))};return Object.assign({},t,e)}static fromConfig(t,e,n={}){const r=[];for(const t of e.cells)r.push(Op(t,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return fp(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,s=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],s[t]])}mp(e)}}function Um(t){const{ones:e,rate:n,training:r=!1,count:s=1}=t,i=()=>_d(e(),n),a=()=>Od(i,e,r);return!s||s<=1?bs(a().clone()):Array(s).fill(void 0).map(a).map((t=>bs(t.clone())))}Wm.className="StackedRNNCells",ds(Wm);var Vm,Gm,Hm;class jm extends Dm{constructor(t){if(t.unroll)throw new Ch("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Ch("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new gp({ndim:5})]}call(t,e){return gs((()=>{if(null!=this.cell.dropoutMask&&(ys(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ys(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new Ih("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return gs((()=>{const{stateSize:e}=this.cell,n=t.shape,r=this.computeSingleOutputShape(n),s=Ji([r[0],...r.slice(2)]);return Array.isArray(e)?Array(e.length).fill(s):[s]}))}resetStates(t,e=!1){gs((()=>{if(!this.stateful)throw new wh("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new Ih("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Ji(s))):this.states_=[Ji(s)];else if(null==t)ys(this.states_),null!=this.keptStates&&(ys(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Ji(s))):this.states_[0]=Ji(s);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Ih(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: `+t);e?this.keptStates.push(this.states_.slice()):ys(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],r=s;if(!g(n.shape,r))throw new Ih(`State ${e} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map((t=>bs(t.clone())))}))}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:r,padding:s,strides:i,dilationRate:a}=this.cell,o="channelsFirst"===e,l=t[o?3:2],u=t[o?4:3],c=mm(l,r[0],s,i[0],a[0]),h=mm(u,r[1],s,i[1],a[1]);return[...t.slice(0,2),...o?[n,c,h]:[c,h,n]]}}jm.className="ConvRNN2D";class qm extends Bm{constructor(t){const{filters:e,kernelSize:n,strides:r,padding:s,dataFormat:i,dilationRate:a}=t;super(Object.assign({},t,{units:e})),this.filters=e,Uh(this.filters,"filters"),this.kernelSize=fm(n,2,"kernelSize"),this.kernelSize.forEach((t=>Uh(t,"kernelSize"))),this.strides=fm(r||1,2,"strides"),this.strides.forEach((t=>Uh(t,"strides"))),this.padding=s||"valid",od(this.padding),this.dataFormat=i||"channelsLast",ad(this.dataFormat),this.dilationRate=fm(a||1,2,"dilationRate"),this.dilationRate.forEach((t=>Uh(t,"dilationRate")))}build(t){var e;t=hp(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new Ih("The channel dimension of the input should be defined. Found "+t[n]);const r=t[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;t=new((e=class extends zd{apply(t,e){return Sd([n.apply([r]),Zi([r]),n.apply([2*r])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return gs((()=>{if(3!==t.length)throw new Ih("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+t.length+".");const n=e.training||!1,r=t[0],s=t[1],i=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Um({ones:()=>ca(r),rate:this.dropout,training:n,count:4}));const a=this.dropoutMask,o=(t,e,n)=>e&&e[n]?Wi(e[n],t):t;let l=o(r,a,0),u=o(r,a,1),c=o(r,a,2),h=o(r,a,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Um({ones:()=>ca(s),rate:this.recurrentDropout,training:n,count:4}));const d=this.recurrentDropoutMask;let p=o(s,d,0),f=o(s,d,1),m=o(s,d,2),g=o(s,d,3);const[y,b,x,v]=Da(this.kernel.read(),4,3),[w,k,I,C]=this.useBias?Da(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,v,C,this.padding);const[S,E,$,N]=Da(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,S),f=this.recurrentConv(f,E),m=this.recurrentConv(m,$),g=this.recurrentConv(g,N);const R=this.recurrentActivation.apply(Ss(l,p)),T=this.recurrentActivation.apply(Ss(u,f)),A=Ss(Wi(T,i),Wi(R,this.activation.apply(Ss(c,m)))),F=Wi(this.recurrentActivation.apply(Ss(h,g)),this.activation.apply(A));return[F,F,A]}))}getConfig(){const t=super.getConfig(),{units:e}=t,n=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(t);s<r.length;s++)e.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(t,r[s])&&(n[r[s]]=t[r[s]])}return n}(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(t,e,n,r){const s=pi(t,e,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Dd(s,n,this.dataFormat):s}recurrentConv(t,e){return pi(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}qm.className="ConvLSTM2DCell",ds(qm);class Km extends jm{constructor(t){const e=new qm(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}Km.className="ConvLSTM2D",ds(Km);class Xm extends wp{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let t=0;t<this.noiseShape.length;++t)n.push(null==this.noiseShape[t]?e[t]:this.noiseShape[t]);return n}call(t,e){return gs((()=>{this.invokeCallHook(t,e);const n=cp(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return Od((()=>_d(n,this.rate,r,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Xm.className="Dropout",ds(Xm);class Ym extends Xm{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Ym.className="SpatialDropout1D",ds(Ym);class Jm extends wp{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Uh(this.units,"units"),this.activation=em(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=rp(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=rp(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=td(t.kernelConstraint),this.biasConstraint=td(t.biasConstraint),this.kernelRegularizer=om(t.kernelRegularizer),this.biasRegularizer=om(t.biasRegularizer),this.activityRegularizer=om(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=hp(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=hp(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return gs((()=>{this.invokeCallHook(t,e);const n=cp(t),r=Gh(this.activation.getClassName());let s;return null!=r?s=Rd(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=Rd(n,this.kernel.read()),null!=this.bias&&(s=Dd(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const t={units:this.units,activation:Qf(this.activation),useBias:this.useBias,kernelInitializer:np(this.kernelInitializer),biasInitializer:np(this.biasInitializer),kernelRegularizer:im(this.kernelRegularizer),biasRegularizer:im(this.biasRegularizer),activityRegularizer:im(this.activityRegularizer),kernelConstraint:Zh(this.kernelConstraint),biasConstraint:Zh(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Jm.className="Dense",ds(Jm);class Zm extends wp{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=hp(t);for(const e of t.slice(1))if(null==e)throw new Ih(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],md(t,1)]}call(t,e){return gs((()=>{this.invokeCallHook(t,e);let n=cp(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return function(t){if(t.rank<=1)throw new Ih(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],md(t.shape,1)];return t.reshape(e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Zm.className="Flatten",ds(Zm);class Qm extends wp{constructor(t){super(t),this.supportsMasking=!0,this.activation=em(t.activation)}call(t,e){return gs((()=>{this.invokeCallHook(t,e);const n=cp(t);return this.activation.apply(n)}))}getConfig(){const t={activation:Qf(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Qm.className="Activation",ds(Qm);class tg extends wp{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return gs((()=>{return t=cp(t),e=t,n=this.n,gs((()=>{if(2!==e.shape.length)throw new Ih(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return $d(wd(e,1),[1,n,1])}));var e,n}))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}tg.className="RepeatVector",ds(tg);class eg extends wp{constructor(t){super(t),this.targetShape=t.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let s=1,i=null;for(let t=0;t<r.length;++t){const e=r[t];if(this.isUnknown(e)){if(null!==i)throw new Ih("Can only specifiy one unknown dimension.");i=t}else s*=e}const a=md(t);if(null!==i){if(0===s||a%s!=0)throw new Ih(n);r[i]=a/s}else if(a!==s)throw new Ih(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return gs((()=>{this.invokeCallHook(t,e);const n=cp(t),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(s)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}eg.className="Reshape",ds(eg);class ng extends wp{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+t.dims+" instead.");const e=xd(1,t.dims.length+1);if(!g(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new gp({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=hp(t)).slice();return this.dims.forEach(((n,r)=>{e[r+1]=t[n]})),e}call(t,e){return Os(cp(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}ng.className="Permute",ds(ng);class rg extends wp{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=cp(t);return Ls(ia(n,this.maskValue),-1)}call(t,e){return gs((()=>{this.invokeCallHook(t,e);const n=cp(t),r=Ls(ia(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))}))}}rg.className="Masking",ds(rg);class sg extends wp{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(Th(t.inputLength))}this.inputDim=t.inputDim,Uh(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Uh(this.outputDim,"outputDim"),this.embeddingsInitializer=rp(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=om(t.embeddingsRegularizer),this.activityRegularizer=om(t.activityRegularizer),this.embeddingsConstraint=td(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return gs((()=>this.maskZero?(t=cp(t),ia(t,ua(t))):null))}computeOutputShape(t){if(t=hp(t),null==this.inputLength)return[...t,this.outputDim];const e=Th(this.inputLength);if(e.length!==t.length-1)throw new Ih(`"inputLength" is ${this.inputLength}, but received input shape has shape `+t);{let n=0;for(let r=0;r<e.length;++r){const s=e[r],i=t[r+1];if(null!=s&&null!=i&&s!==i)throw new Ih(`"inputLength" is ${this.inputLength}, but received input shape has shape `+t);null==s&&(e[n]=i),n++}}return[t[0],...e,this.outputDim]}call(t,e){return gs((()=>{this.invokeCallHook(t,e);let n=cp(t);return"int32"!==n.dtype&&(n=vd(n,"int32")),Td(this.embeddings.read(),n.as1D()).reshape(hp(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:np(this.embeddingsInitializer),embeddingsRegularizer:im(this.embeddingsRegularizer),activityRegularizer:im(this.activityRegularizer),embeddingsConstraint:Zh(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}sg.className="Embedding",ds(sg);class ig extends wp{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Ch}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const s=t[t.length-e.length+r],i=e[r];if(null==s||null==i||s<0||i<0)n.push(null);else if(1===s)n.push(i);else if(1===i)n.push(s);else{if(s!==i)throw new Ih("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(s)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[hp(t)]),(t=t).length<2)throw new Ih(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const n of t)null!=n&&null!==n[0]&&e.push(n[0]);if(e=zh(e),e.length>1)throw new Ih(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){const r=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=t.map((t=>t.length));-1===t.indexOf(null)&&1===zh(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return gs((()=>{if(t=t,this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const r=bd(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=wd(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const r of t){const t=r.rank;if(null==t){const t=r.shape,s=t[0],i=t.slice(1).concat([s]);let a=r.reshape([s].concat(md(t.slice(1))));a=Os(a,[1,0]),a=a.reshape(i),e.push(a),n=!0}else if(t>1){const s=xd(1,t).concat([0]);e.push(Os(r,s)),n=!0}else e.push(r)}let r=this.mergeFunction(e);const s=r.rank;if(n)if(null==s){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=Os(r.reshape([-1,e]),[1,0]).reshape(n)}else if(s>1){const t=[s-1].concat(xd(0,s-1));r=Os(r,t)}return r}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==(t=t)[0]?null:t[0].slice(1);for(let n=1;n<t.length;++n){const r=null==t[n]?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let n=[];for(const e of t)null!=e&&null!==e[0]&&n.push(e[0]);return n=zh(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return gs((()=>{if(null==e)return null;if(!Array.isArray(e))throw new Ih("`mask` should be an Array");if(!Array.isArray(t))throw new Ih("`inputs` should be an Array");if(e.length!==t.length)throw new Ih(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:$i(t,0))))[0];for(let t=1;t<e.length-1;++t)n=Ki(n,e[t]);return n}))}}class ag extends ig{constructor(t){super(t)}mergeFunction(t){return gs((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Ss(e,t[n]);return e}))}}ag.className="Add",ds(ag);class og extends ig{constructor(t){super(t)}mergeFunction(t){return gs((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Wi(e,t[n]);return e}))}}og.className="Multiply",ds(og);class lg extends ig{constructor(t){super(t)}mergeFunction(t){return gs((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Ss(e,t[n]);return Wi(1/t.length,e)}))}}lg.className="Average",ds(lg);class ug extends ig{constructor(t){super(t)}mergeFunction(t){return gs((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Pi(e,t[n]);return e}))}}ug.className="Maximum",ds(ug);class cg extends ig{constructor(t){super(t)}mergeFunction(t){return gs((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=ea(e,t[n]);return e}))}}cg.className="Minimum",ds(cg);class hg extends ig{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new Ih("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const n of t)if(null!=n){e=!1;break}if(e)return;const n=[];for(let e=0;e<t.length;++e){const r=t[e].slice();r.splice(this.axis,1);let s=!1;for(const t of n)if(g(t,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new Ih("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return gs((()=>Sd(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new Ih("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const t of e.slice(1)){if(null==n[r]||null==t[r]){n[r]=null;break}n[r]+=t[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new Ih("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new Ih("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new Ih(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return gs((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const r=[];for(let n=0;n<t.length;++n)null==e[n]?r.push(ca(t[n]).asType("bool")):e[n].rank<t[n].rank?r.push($i(e[n],-1)):r.push(e[n]);const s=li(r,this.axis);return Ms(s,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function dg(t,e){for(;t<0;)t+=e;return t}hg.className="Concatenate",ds(hg);class pg extends ig{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){h(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new Ch("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new Ih(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new Ih(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>dg(e,t[n].shape.length))):[dg(this.axes,n.shape.length),dg(this.axes,r.shape.length)],this.normalize&&(n=Mp(n,e[0]),r=Mp(r,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new Ch("batchDot is not implemented for tensors of 4D or higher rank yet");if(h(t.shape.length>=2,(()=>"batchDot requires the rank of x to be >= 2, but got "+t.shape.length)),h(t.shape.length>=2,(()=>"batchDot requires the rank of y to be >= 2, but got "+e.shape.length)),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new Ch("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,s=e.shape.length;null==n&&(n=[r-1,s-2]);const i=n;return gs((()=>{let n,a;if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)a=i[0]===i[1]?t.mul(e).sum(i[0]):t.transpose([1,0]).mul(e).sum(i[1]);else{const n=i[0]!==t.shape.length-1,r=i[1]===e.shape.length-1;a=t.matMul(e,n,r)}if(n>0){let t;t=r>s?r+s-3:r-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);a=a.squeeze(e)}return 1===a.shape.length&&(a=a.expandDims(1)),a}))}(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[dg(this.axes,t.length),dg(this.axes,e.length)],n}computeOutputShape(t){h(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new Ch("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=e.concat(n);return 1===s.length&&s.push(1),s}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}pg.className="Dot",ds(pg);class fg extends wp{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return gs((()=>{this.invokeCallHook(t,e);const n=cp(t);return Od((()=>Nd(n.shape,0,this.stddev).add(n)),(()=>n),e.training||!1)}))}}fg.className="GaussianNoise",ds(fg);class mg extends wp{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return gs((()=>{this.invokeCallHook(t,e);const n=cp(t);return this.rate>0&&this.rate<1?Od((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(Nd(n.shape,1,t))}),(()=>n),e.training||!1):n}))}}mg.className="GaussianDropout",ds(mg);class gg extends wp{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||cp(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return gs((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return Od((()=>{const e=cp(t),r=-1.7580993408473766;let s=Bi(ya(n),this.rate);s=vd(s,"float32");const i=((1-this.rate)*(1+this.rate*r**2))**-.5,a=-i*r*this.rate;return e.mul(s).add(s.add(-1).mul(r)).mul(i).add(a)}),(()=>cp(t)),e.training||!1)}return t}))}}function yg(t,e,n,r,s,i=.001){let a;if(2===t.rank)a=ni(t,e,n,r,s,i);else if(3===t.rank)a=ri(t,e,n,r,s,i);else{if(4!==t.rank)throw new Ch(`batchNormalization is not implemented for array of rank ${t.rank} yet`);a=si(t,e,n,r,s,i)}return a}gg.className="AlphaDropout",ds(gg);class bg extends wp{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=rp(t.betaInitializer||"zeros"),this.gammaInitializer=rp(t.gammaInitializer||"ones"),this.movingMeanInitializer=rp(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=rp(t.movingVarianceInitializer||"ones"),this.betaConstraint=td(t.betaConstraint),this.gammaConstraint=td(t.gammaConstraint),this.betaRegularizer=om(t.betaRegularizer),this.gammaRegularizer=om(t.gammaRegularizer)}build(t){t=hp(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new Ih(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape `+JSON.stringify(t)+".");this.inputSpec=[new gp({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return gs((()=>{const n=null!=e.training&&e.training,r=cp(t),s=r.shape,i=s.length,a=xd(0,i),o=this.axis>=0?this.axis:this.axis+i;a.splice(o,1);const l=Eh(1,i);l[o]=s[o];const u=a.slice();u.sort();const c=!g(u,xd(0,i).slice(0,i-1));if(!n)return(()=>{if(c){const t=this.movingMean.read().reshape(l),e=this.movingVariance.read().reshape(l),n=this.center?this.beta.read().reshape(l):null,s=this.scale?this.gamma.read().reshape(l):null;return yg(r,t,e,n,s,this.epsilon)}return yg(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(t,e,n,r,s=.001){return g(r.slice().sort(),xd(0,t.rank-1))?function(t,e,n,r,s=.001){return gs((()=>{const i=ra(t,r),a=i.mean,o=i.variance;return[yg(t,a,o,n,e,s),a,o]}))}(t,e,n,r,s):function(t,e,n,r,s=.001){return gs((()=>{const i=ra(t,r),a=i.mean,o=i.variance,l=[];for(const e of xd(0,t.rank))-1!==r.indexOf(e)?l.push(1):l.push(t.shape[e]);const u=a.reshape(l),c=o.reshape(l),h=null==e?null:e.reshape(l),d=null==n?null:n.reshape(l);return[yg(t,u,c,d,h,s),a,o]}))}(t,e,n,r,s)}(r,this.gamma.read(),this.beta.read(),a,this.epsilon),f=(t,e,n)=>{gs((()=>{const r=1-n,s=t.read(),i=s.sub(e).mul(r);t.write(s.sub(i))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:np(this.betaInitializer),gammaInitializer:np(this.gammaInitializer),movingMeanInitializer:np(this.movingMeanInitializer),movingVarianceInitializer:np(this.movingVarianceInitializer),betaRegularizer:im(this.betaRegularizer),gammaRegularizer:im(this.gammaRegularizer),betaConstraint:Zh(this.betaConstraint),gammaConstraint:Zh(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}bg.className="BatchNormalization",ds(bg);class xg extends wp{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received "+this.axis)}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, but received "+JSON.stringify(this.axis));for(const t of this.axis)if(!Number.isInteger(t))throw new Error("Expected axis to be an array of integers, but received "+JSON.stringify(this.axis))}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=rp(t.betaInitializer||"zeros"),this.gammaInitializer=rp(t.gammaInitializer||"ones"),this.betaRegularizer=om(t.betaRegularizer),this.gammaRegularizer=om(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=hp(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let t=0;t<this.axis.length;++t)this.axis[t]<0&&(this.axis[t]+=e);for(const t of this.axis)if(t<0||t>=e)throw new Error("Invalid axis: "+t);if(this.axis.length!==zh(this.axis).length)throw new Error("Found duplicate axes in: "+this.axis);const n=this.axis.map((e=>t[e]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(t,e){const n=cp(t),r=n.shape,s=r.length;return gs((()=>{let{mean:t,variance:e}=ra(n,this.axis,!0);const i=Eh(1,s);for(const t of this.axis)i[t]=r[t];const a=t=>null!=t&&t.shape.length!==s&&this.axis!==[s-1]?t.reshape(i):t;let o=a(this.gamma.read()),l=a(this.beta.read());const u=[],c=[];for(let t=0;t<s;++t)-1!==this.axis.indexOf(t)?(u.push(r[t]),c.push(1)):(u.push(1),c.push(r[t]));return t=t.tile(u),e=e.tile(u),o=o.tile(c),l=l.tile(c),yg(n,t,e,l,o,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:np(this.betaInitializer),gammaInitializer:np(this.gammaInitializer),betaRegularizer:im(this.betaRegularizer),gammaRegularizer:im(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}xg.className="LayerNormalization",ds(xg);class vg extends wp{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new Ih(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new Ih(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new Ih(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new gp({ndim:4})]}computeOutputShape(t){let e,n;return t=hp(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return gs((()=>{return e=cp(t),n=this.padding,r=this.dataFormat,gs((()=>{if(4!==e.rank)throw new Ih("temporalPadding expects input tensor to be 4-D, but received a "+e.rank+"-D tensor.");if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Ih("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Ih(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],ha(e,t)}));var e,n,r}))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function wg(t,e,n,r,s,i){return gs((()=>{let a;ad(s),ld(i),od(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),t=ym(t,s);const o="same"===r?"same":"valid";return a="max"===i?Xi(t,e,n,o):Zs(t,e,n,o),"channelsFirst"===s&&(a=Os(a,[0,3,1,2])),a}))}function kg(t,e,n,r,s,i){return gs((()=>{let a;ad(s),ld(i),od(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),t=bm(t,s);const o="same"===r?"same":"valid";return a="max"===i?Yi(t,e,n,o):Qs(t,e,n,o),"channelsFirst"===s&&(a=Os(a,[0,4,1,2,3])),a}))}vg.className="ZeroPadding2D",ds(vg);class Ig extends wp{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new Ih("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(t.poolSize));this.poolSize=t.poolSize}if(Uh(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new Ih("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(t.strides));this.strides=t.strides}Uh(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,od(this.padding),this.inputSpec=[new gp({ndim:3})]}computeOutputShape(t){const e=mm((t=hp(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return gs((()=>{this.invokeCallHook(t,e),t=wd(cp(t),2);const n=this.poolingFunction(cp(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Oa(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class Cg extends Ig{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return ad(s),od(r),wg(t,e,n,r,s,"max")}}Cg.className="MaxPooling1D",ds(Cg);class Sg extends Ig{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return ad(s),od(r),wg(t,e,n,r,s,"avg")}}Sg.className="AveragePooling1D",ds(Sg);class Eg extends wp{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new Ih("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+t.strides.length+".");this.strides=t.strides}else this.strides=[t.strides,t.strides];Uh(this.poolSize,"poolSize"),Uh(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,ad(this.dataFormat),od(this.padding),this.inputSpec=[new gp({ndim:4})]}computeOutputShape(t){t=hp(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=mm(e,this.poolSize[0],this.padding,this.strides[0]),n=mm(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return gs((()=>(this.invokeCallHook(t,e),this.poolingFunction(cp(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class $g extends Eg{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return ad(s),od(r),wg(t,e,n,r,s,"max")}}$g.className="MaxPooling2D",ds($g);class Ng extends Eg{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return ad(s),od(r),wg(t,e,n,r,s,"avg")}}Ng.className="AveragePooling2D",ds(Ng);class Rg extends wp{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new Ih("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+t.strides.length+".");this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Uh(this.poolSize,"poolSize"),Uh(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,ad(this.dataFormat),od(this.padding),this.inputSpec=[new gp({ndim:5})]}computeOutputShape(t){t=hp(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=mm(e,this.poolSize[0],this.padding,this.strides[0]),n=mm(n,this.poolSize[1],this.padding,this.strides[1]),r=mm(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return gs((()=>(this.invokeCallHook(t,e),this.poolingFunction(cp(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Tg extends Rg{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return ad(s),od(r),kg(t,e,n,r,s,"max")}}Tg.className="MaxPooling3D",ds(Tg);class Ag extends Rg{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return ad(s),od(r),kg(t,e,n,r,s,"avg")}}Ag.className="AveragePooling3D",ds(Ag);class Fg extends wp{constructor(t){super(t),this.inputSpec=[new gp({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Ch}}class Dg extends Fg{constructor(t){super(t||{})}call(t,e){return gs((()=>{const e=cp(t);return Qi(e,1)}))}}Dg.className="GlobalAveragePooling1D",ds(Dg);class _g extends Fg{constructor(t){super(t||{})}call(t,e){return gs((()=>{const e=cp(t);return Gi(e,1)}))}}_g.className="GlobalMaxPooling1D",ds(_g);class Og extends wp{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,ad(this.dataFormat),this.inputSpec=[new gp({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Ch}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Mg extends Og{call(t,e){return gs((()=>{const e=cp(t);return"channelsLast"===this.dataFormat?Qi(e,[1,2]):Qi(e,[2,3])}))}}Mg.className="GlobalAveragePooling2D",ds(Mg);class Lg extends Og{call(t,e){return gs((()=>{const e=cp(t);return"channelsLast"===this.dataFormat?Gi(e,[1,2]):Gi(e,[2,3])}))}}Lg.className="GlobalMaxPooling2D",ds(Lg);class zg extends wp{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=Op(e.layer,n);delete e.layer;const s={layer:r};return Object.assign(s,e),new t(s)}}class Bg extends zg{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=hp(t)).length<3)throw new Ih("TimeDistributed layer expects an input shape >= 3D, but received input shape "+JSON.stringify(t));this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=hp(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return gs((()=>Fm(((t,n)=>[cp(this.layer.call(t,e)),[]]),t=cp(t),[],!1,null,null,!1,!0)[1]))}}Bg.className="TimeDistributed",ds(Bg);class Pg extends zg{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=Op(n),e.goBackwards=!0!==e.goBackwards;const r={};var s;if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=Op(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,s=this.mergeMode,Ph(sd,"BidirectionalMergeMode",s),t.weights)throw new Ch("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,s=this.forwardLayer.computeOutputShape(t);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),s=s,this.returnState?(r=s.slice(1),e=s[0]):e=s[0],e=e,"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):Rh(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=Am(t,n,r,this.numConstants);if(t=s.inputs,n=s.initialState,r=s.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const i=[],a=[];if(null!=n){const t=n.length;if(t%2>0)throw new Ih("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,i.push(...n);const r=n.map((t=>new gp({shape:t.shape})));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),a.push(...r)}if(null!=r)throw new Ch("Support for constants in Bidirectional layers is not implemented yet.");const o=i[0]instanceof yp;for(const t of i)if(t instanceof yp!==o)throw new Ih("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(i),r=this.inputSpec.concat(a),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return gs((()=>{const n=e.initialState;let r,s,i,a;if(null==n)r=this.forwardLayer.call(t,e),s=this.backwardLayer.call(t,e);else{const i=n.slice(0,n.length/2),a=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:i})),s=this.backwardLayer.call(t,Object.assign(e,{initialState:a}))}return this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=wa(s,1)),"concat"===this.mergeMode?a=Sd([r,s]):"sum"===this.mergeMode?a=Ss(r,s):"ave"===this.mergeMode?a=Wi(.5,Ss(r,s)):"mul"===this.mergeMode?a=Wi(r,s):null==this.mergeMode&&(a=[r,s]),this.returnState?null==this.mergeMode?a.concat(i):[a].concat(i):a}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){cd(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),cd(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=Op(e.layer);if(delete e.layer,null!=e.numConstants)throw new Ch("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}function Wg(t,e,n=new Map,r=new Set){if(null==t)return null;if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(jg(t)){const s=Array.isArray(t)?[]:{};r.add(t);for(const i in t){const a=Wg(t[i],e,n,r);s[i]=a}return r.delete(t),s}throw new Error("Can't recurse into non-iterable type: "+t)}return n.set(t,s.value),s.value}function Ug(t,e=Gg){return Vg(t,e)}function Vg(t,e,n=new Set){const r=t[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(jg(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const i in r){const r=Vg(t.map((t=>t[i])),e,n);s[i]=r}return n.delete(r),s}throw new Error("Can't recurse into non-iterable type: "+r)}return s.value}function Gg(t){return null===t?null:jg(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}async function Hg(t,e){const n=new Map;Wg(t,e,n);for(const t of Array.from(n.keys())){const e=n.get(t);if(V(e)){const r=await e;n.set(t,r)}}return Wg(t,e,n)}function jg(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof Nn))}function qg(t){return t instanceof Nn?{value:t.clone(),recurse:!1}:jg(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}Pg.className="Bidirectional",ds(Pg),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(Vm||(Vm={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(Gm||(Gm={}));class Kg{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class Xg extends Kg{constructor(){super(Xg.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let t=0;t<n;t++)e[t]=this.get(this.wrap(this.begin+t));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function Yg(t){return new Zg(t)}Xg.INITIAL_CAPACITY=32;class Jg{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new ay(this,t)}filter(t){return new sy(this,t)}map(t){return new iy(this,t)}mapAsync(t){return new oy(this,t)}serialMapAsync(t){return new oy(this,t).serial()}flatmap(t){return new uy(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile((t=>!0===t))}rowMajorBatch(t,e=!0){return new ry(this,t,e)}columnMajorBatch(t,e=!0,n=Gg){return this.rowMajorBatch(t,e).map((t=>Ug(t,n)))}concatenate(t,e){return new cy(Yg([this,t]),e)}take(t){return t<0||null==t?this:new ny(this,t)}skip(t){return t<0||null==t?this:new ey(this,t)}prefetch(t){return new dy(this,t)}shuffle(t,e){return new py(this,t,e)}serial(){return new ty(this)}}class Zg extends Jg{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:(e=t,Wg(e,qg)),done:!1};var e}}class Qg extends Jg{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message="Error thrown while iterating through a dataset: "+t.message,t}}}class ty extends Jg{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Serial"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class ey extends Jg{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Skip"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;ys(t.value)}return this.upstream.next()}}class ny extends Jg{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return this.upstream.summary()+" -> Take"}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class ry extends Jg{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> RowMajorBatch"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class sy extends Jg{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Filter"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;ys(t.value)}}}class iy extends Jg{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> Map"}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=Pn(t.value),n=this.transform(t.value),r=Pn(n);for(const t of e)Bn(t,r)||t.dispose();return{value:n,done:!1}}}class ay extends Jg{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> handleErrors"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class oy extends Jg{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> AsyncMap"}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=Pn(t.value),n=await this.transform(t.value),r=Pn(n);for(const t of e)Bn(t,r)||t.dispose();return{value:n,done:!1}}}class ly extends Jg{constructor(){super(),this.outputQueue=new Xg,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class uy extends ly{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> Flatmap"}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=Pn(t.value),n=this.transform(t.value),r=Pn(n);this.outputQueue.pushAll(n);for(const t of e)Bn(t,r)||t.dispose();return!0}}class cy extends Jg{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}!function(t){t[t.FAIL=0]="FAIL",t[t.SHORTEST=1]="SHORTEST",t[t.LONGEST=2]="LONGEST"}(Hm||(Hm={}));class hy extends Jg{constructor(t,e=Hm.FAIL){super(),this.iterators=t,this.mismatchMode=e,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(t){await t;let e=0,n=0;const r=await Hg(this.iterators,(function(t){return t instanceof Jg?{value:t.next().then((t=>(e++,t.done&&n++,t.value))),recurse:!1}:{value:null,recurse:!0}}));if(e===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case Hm.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case Hm.SHORTEST:return{value:null,done:!0};case Hm.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class dy extends Jg{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new Kg(e)}summary(){return this.upstream.summary()+" -> Prefetch"}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class py extends dy{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=pa.alea(n||wn().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class fy{constructor(){this.size=null}batch(t,e=!0){const n=this;let r;return h(t>0,(()=>"batchSize needs to be positive, but it is\n      "+t)),r=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),my((async()=>(await n.iterator()).columnMajorBatch(t,e,by)),r)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,my((async()=>(await e.iterator()).concatenate(await t.iterator())),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,my((async()=>(await e.iterator()).filter((e=>gs((()=>t(e)))))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return my((async()=>(await e.iterator()).map((e=>gs((()=>t(e)))))),this.size)}mapAsync(t){const e=this;return my((async()=>(await e.iterator()).mapAsync(t)),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return my((async()=>(await e.iterator()).prefetch(t)),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,my((async()=>{return n=(s=async()=>({value:await e.iterator(),done:!1}),new Qg(s)).take(t),new cy(n,r);var n,r,s}),n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,my((async()=>(await e.iterator()).skip(t)),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=pa.alea(e||wn().toString());return my((async()=>{let e=s.int32();return n&&(e+=s.int32()),(await r.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,my((async()=>(await e.iterator()).take(t)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function my(t,e=null){return new class extends fy{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function gy(t){return my((async()=>Yg(t)),t.length)}function yy(t){if(!jg(t))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(t))for(let n=0;n<t.length;n++)e=null==e?t[n].size:Math.min(e,t[n].size);else if(t instanceof Object)for(const n in t)e=null==e?t[n].size:Math.min(e,t[n].size);return my((async()=>function(t,e=Hm.FAIL){return new hy(t,e)}(await Hg(t,(t=>{if(t instanceof fy)return{value:t.iterator(),recurse:!1};if(jg(t))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),Hm.SHORTEST)),e)}function by(t){if(null===t)return null;return null==(e=t[0])||null===(n=e)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(e)||"object"==typeof e&&e instanceof Nn||$(e)?{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof Nn?Ma(t):rr(t)}(t),recurse:!1}:{value:null,recurse:!0};var e,n}function xy(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&h("complex64"!==t.dtype,(()=>e+" does not support complex64 tensors in the CPU backend."))}))}fy.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const vy=po,wy=Cl,ky=Sl,Iy=El,Cy=$l;class Sy extends a{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new i(this,fs())}write(t,e,n){this.firstUse&&(this.firstUse=!1,H().get("IS_NODE")&&hl("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={};return this.data.set(r,{values:t,dtype:n,refCount:1}),r}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&R(n[0])){const s=n.map((t=>kn(t)));r=this.write(s,t,e)}else r=this.write(n,t,e);return{dataId:r,shape:t,dtype:e}}incRef(t){this.data.get(t).refCount++}decRef(t){this.data.has(t)&&this.data.get(t).refCount--}move(t,e,n,r){this.data.set(t,{values:e,dtype:r,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);return"complex64"===e?pl(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>In(t)))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return Mr(t.shape,t.dtype,n)}makeOutput(t,e,n){const r=this.write(t,e,n);return fs().makeTensorFromDataId(r,e,n,this)}disposeData(t){if(this.data.has(t)){const{complexTensorInfos:e}=this.data.get(t);null!=e&&(this.disposeData(e.real.dataId),this.disposeData(e.imag.dataId)),this.data.delete(t)}}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.data.has(e)){const t=this.data.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}async time(t){const e=wn();return t(),{kernelMs:wn()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}stridedSlice(t,e,n,r){xy(t,"stridedSlice");const s=Jr(e,n,r);if(s.some((t=>0===t)))return rr([],s);const i=Mr(s,t.dtype),a=this.bufferSync(t);for(let t=0;t<i.size;t++){const n=i.indexToLoc(t),s=new Array(n.length);for(let t=0;t<s.length;t++)s[t]=n[t]*r[t]+e[t];i.set(a.get(...s),...n)}return i.toTensor()}diag(t){const e=this.readSync(t.dataId),n=Mr([t.size,t.size],t.dtype),r=n.values;for(let n=0;n<e.length;n++)r[n*t.size+n]=e[n];return n.toTensor()}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let s=0;for(let n=0;n<t.rank;n++)n!==e&&(r[s++]=t.shape[n]);const i=new Array(t.rank).fill(0),a=t.shape.slice();a[e]=1;const o=new Array(n);for(let n=0;n<o.length;n++)i[e]=n,o[n]=Sa(t,i,a).reshape(r);return o}reverse(t,e){xy(t,"reverse");const n=Mr(t.shape,t.dtype),r=this.bufferSync(t);for(let s=0;s<n.size;s++){const i=n.indexToLoc(s),a=i.slice();e.forEach((e=>a[e]=t.shape[e]-1-a[e])),n.set(r.get(...a),...i)}return n.toTensor()}neg(t){return xy(t,"neg"),Wi(ks(-1),t)}addN(t){xy(t,"addN");const e=t.map((t=>this.readSync(t.dataId))),n=Mr(t[0].shape,t[0].dtype),r=n.values;for(let n=0;n<t.length;n++){const t=e[n];for(let e=0;e<r.length;e++)r[e]+=t[e]}return n.toTensor()}softmax(t,e){const n=k([e],t.shape),r=Gi(t,n),s=Rs(r.shape,n),i=Hi(t,r.reshape(s)),a=Ei(i),o=this.sum(a,n).reshape(s);return vi(a,o)}pow(t,e){return xy([t,e],"pow"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.pow(t,e)))}floorDiv(t,e){return xy([t,e],"floorDiv"),this.broadcastedBinaryOp(t,e,"int32",((t,e)=>Math.floor(t/e)))}sum(t,e){xy(t,"sum"),Ts("sum",e,t.rank);const[n,r]=Ns(t.shape,e),s=Ji(n,Mn(t.dtype,"int32")),i=m(r),a=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<a.length;++t){const e=t*i;let n=0;for(let t=0;t<i;++t)n+=o[e+t];a[t]=n}return s}prod(t,e){xy(t,"sum");const[n,r]=Ns(t.shape,e),s=Ji(n,Mn(t.dtype,"int32")),i=m(r),a=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<a.length;++t){const e=t*i;let n=1;for(let t=0;t<i;++t)n*=o[e+t];a[t]=n}return s}unsortedSegmentSum(t,e,n){xy(t,"unsortedSegmentSum");const r=[],s=t.rank-e.rank;for(let t=0;t<s;++t)e=e.expandDims(t+1);for(let s=0;s<n;++s){const n=ks(s,"int32"),i=Si(n,e).asType("float32").mul(t).sum(0);r.push(i)}return Ma(r)}argMin(t,e){xy(t,"argMin");const n=[e];Ts("argMin",n,t.rank);const[r,s]=Ns(t.shape,n),i=Ji(r,"int32"),a=m(s),o=this.readSync(i.dataId),l=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*a;let n=l[e],r=0;for(let t=0;t<a;++t){const s=l[e+t];s<n&&(n=s,r=t)}o[t]=r}return i}argMax(t,e){xy(t,"argMax");const n=[e];Ts("argMax",n,t.rank);const[r,s]=Ns(t.shape,n),i=Ji(r,"int32"),a=m(s),o=this.readSync(i.dataId),l=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*a;let n=l[e],r=0;for(let t=0;t<a;++t){const s=l[e+t];s>n&&(n=s,r=t)}o[t]=r}return i}cumsum(t,e,n,r){if(xy(t,"cumsum"),e!==t.rank-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${t.rank-1} but got axis=`+e);const s=Mn(t.dtype,"int32"),i=Ji(t.shape,s),a=this.readSync(i.dataId),o=this.readSync(t.dataId),l=t.shape[t.rank-1],u=r?(t,e)=>t+l-e-1:(t,e)=>t+e;for(let t=0;t<o.length;t+=l)for(let e=0;e<l;e++){const r=u(t,e);if(0===e)a[r]=n?0:o[r];else{const s=u(t,e-1);a[r]=n?o[s]+a[s]:o[r]+a[s]}}return i}equal(t,e){return xy([t,e],"equal"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t===e?1:0))}notEqual(t,e){return xy([t,e],"notEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t!==e?1:0))}less(t,e){return xy([t,e],"less"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t<e?1:0))}lessEqual(t,e){return xy([t,e],"lessEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t<=e?1:0))}greater(t,e){return xy([t,e],"greater"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t>e?1:0))}greaterEqual(t,e){return xy([t,e],"greaterEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t>=e?1:0))}logicalAnd(t,e){return xy([t,e],"logicalAnd"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t&&e))}logicalOr(t,e){return xy([t,e],"logicalOr"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t||e))}select(t,e,n){xy([t,e,n],"select");const r=this.readSync(t.dataId),s=this.readSync(e.dataId),i=this.readSync(n.dataId),a=Ji(e.shape,Mn(e.dtype,n.dtype)),o=this.readSync(a.dataId);let l=0;const u=0===t.rank||t.rank>1||1===e.rank?1:m(e.shape.slice(1));for(let t=0;t<r.length;t++)for(let e=0;e<u;e++)1===r[t]?o[l++]=s[t]:o[l++]=i[t];return a}where(t){xy([t],"where");const e=this.readSync(t.dataId);return Cy(t.shape,e)}topk(t,e,n){xy(t,"topk");const r=this.readSync(t.dataId);return Iy(r,t.shape,t.dtype,e,n)}min(t,e){xy(t,"min"),Ts("min",e,t.rank);const[n,r]=Ns(t.shape,e),s=Ji(n,t.dtype),i=m(r),a=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<a.length;++t){const e=t*i;let n=o[e];for(let t=0;t<i;++t){const r=o[e+t];r<n&&(n=r)}a[t]=n}return s}minimum(t,e){return xy([t,e],"minimum"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.min(t,e)))}mod(t,e){return xy([t,e],"mod"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e}))}maximum(t,e){return xy([t,e],"maximum"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.max(t,e)))}all(t,e){xy(t,"all"),Ts("all",e,t.rank);const[n,r]=Ns(t.shape,e),s=Ji(n,t.dtype),i=m(r),a=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<a.length;++t){const e=t*i;let n=o[e];for(let t=0;t<i;++t){const r=o[e+t];n=n&&r}a[t]=n}return s}any(t,e){xy(t,"any"),Ts("any",e,t.rank);const[n,r]=Ns(t.shape,e),s=Ji(n,t.dtype),i=m(r),a=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<a.length;++t){const e=t*i;let n=o[e];for(let t=0;t<i;++t){const r=o[e+t];n=n||r}a[t]=n}return s}squaredDifference(t,e){return xy([t,e],"squaredDifference"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>{const n=t-e;return n*n}))}eluDer(t,e){xy([t,e],"eluDer");const n=new Float32Array(e.size),r=this.readSync(e.dataId),s=this.readSync(t.dataId);for(let t=0;t<r.length;++t){const e=r[t];n[t]=e>=1?s[t]:s[t]*(e+1)}return this.makeOutput(n,e.shape,"float32")}atan2(t,e){return xy([t,e],"atan2"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.atan2(t,e)))}tile(t,e){return xy(t,"tile"),ky(this.bufferSync(t),e)}gather(t,e,n){xy([t,e],"gather");const r=t.shape.slice(),s=this.readSync(e.dataId);r[n]=s.length;const i=Mr(r,t.dtype),a=this.bufferSync(t);for(let t=0;t<i.size;++t){const e=i.indexToLoc(t),r=e.slice();r[n]=s[e[n]];const o=a.locToIndex(r);i.values[t]=a.values[o]}return i.toTensor()}batchToSpaceND(t,e,n){xy([t],"batchToSpaceND");const r=e.reduce(((t,e)=>t*e)),s=Ko(t.shape,e,r),i=Xo(s.length,e.length),a=Yo(t.shape,e,r),o=Jo(n,e.length),l=Zo(a,n,e.length);return Os(t.reshape(s),i).reshape(a).slice(o,l)}pool3d(t,e,n){xy(t,"pool3d");const r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,a=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left,m="max"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=this.readSync(t.dataId),y=Mr(e.outShape,t.dtype),b=y.values,x=e.outShape[1]*e.outShape[2]*e.outShape[3]*e.outShape[4],v=e.outShape[2]*e.outShape[3]*e.outShape[4],w=e.outShape[3]*e.outShape[4],k=e.outShape[4];for(let y=0;y<e.batchSize;++y){const I=y*x,C=y*t.strides[0];for(let y=0;y<e.inChannels;++y)for(let x=0;x<e.outDepth;++x){const S=x*r-d;let E=S;for(;E<0;)E+=a;const $=Math.min(e.inDepth,u+S),N=I+x*v;for(let r=0;r<e.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=o;const x=Math.min(e.inHeight,c+u),v=N+r*w;for(let r=0;r<e.outWidth;++r){const s=r*i-f;let u=s;for(;u<0;)u+=l;const c=Math.min(e.inWidth,h+s),p=v+r*k;let w=m,I=0,S=0;for(let e=E;e<$;e+=a){const r=C+e*t.strides[1];for(let e=d;e<x;e+=o){const s=r+e*t.strides[2];for(let e=u;e<c;e+=l){const r=g[s+e*t.strides[3]+y];if("max"===n&&r>w?w=r:"avg"===n&&(I+=r,S++),isNaN(w))break}if(isNaN(w))break}if(isNaN(w))break}b[p+y]="avg"===n?I/S:w}}}}return y.toTensor()}avgPool3d(t,e){return xy(t,"avgPool3d"),this.pool3d(t,e,"avg").toFloat()}avgPool3dBackprop(t,e,n){xy([t,e],"avgPool3dBackprop");const r=n.strideDepth,s=n.strideHeight,i=n.strideWidth,a=n.filterDepth,o=n.filterHeight,l=n.filterWidth,u=n.dilationDepth,c=n.dilationHeight,h=n.dilationWidth,d=n.effectiveFilterDepth,p=n.effectiveFilterHeight,f=n.effectiveFilterWidth,m=d-1-n.padInfo.front,g=f-1-n.padInfo.left,y=p-1-n.padInfo.top,b=Mr(e.shape,"float32"),x=1/(a*o*l),v=this.bufferSync(t);for(let t=0;t<n.batchSize;++t)for(let e=0;e<n.inChannels;++e)for(let a=0;a<n.inDepth;++a)for(let o=0;o<n.inHeight;++o)for(let l=0;l<n.inWidth;++l){const w=a-m,k=o-y,I=l-g;let C=0;for(let a=0;a<d;a+=u){const o=(w+a)/r;if(!(o<0||o>=n.outDepth||Math.floor(o)!==o))for(let r=0;r<p;r+=c){const a=(k+r)/s;if(!(a<0||a>=n.outHeight||Math.floor(a)!==a))for(let r=0;r<f;r+=h){const s=(I+r)/i;s<0||s>=n.outWidth||Math.floor(s)!==s||(C+=v.get(t,o,a,s,e))}}}b.set(C*x,t,a,o,l,e)}return b.toTensor()}maxPool3d(t,e){return xy(t,"maxPool3d"),this.pool3d(t,e,"max").toFloat()}maxPool3dPositions(t,e){const n=Mr(e.outShape,"int32"),r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,a=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left,m=this.bufferSync(t);for(let t=0;t<e.batchSize;++t)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){const b=y*r-d;let x=b;for(;x<0;)x+=a;const v=Math.min(e.inDepth,u+b);for(let r=0;r<e.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=o;const w=Math.min(e.inHeight,c+u);for(let s=0;s<e.outWidth;++s){const p=s*i-f;let k=p;for(;k<0;)k+=l;const I=Math.min(e.inWidth,h+p);let C=Number.NEGATIVE_INFINITY,S=-1;for(let e=x;e<v;e+=a){const n=e-b;for(let r=d;r<w;r+=o){const s=r-u;for(let i=k;i<I;i+=l){const a=i-p,o=m.get(t,e,r,i,g);o>=C&&(C=o,S=n*c*h+s*c+a)}}}n.set(S,t,y,r,s,g)}}}return n.toTensor()}maxPool3dBackprop(t,e,n,r){xy([e,n],"maxPool3dBackprop");const s=this.maxPool3dPositions(e,r),i=r.strideDepth,a=r.strideHeight,o=r.strideWidth,l=r.dilationDepth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterDepth,d=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=h-1-r.padInfo.front,m=p-1-r.padInfo.left,g=d-1-r.padInfo.top,y=Mr(e.shape,"float32"),b=this.bufferSync(s),x=this.bufferSync(t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.inDepth;++n)for(let s=0;s<r.inHeight;++s)for(let v=0;v<r.inWidth;++v){const w=n-f,k=s-g,I=v-m;let C=0;for(let n=0;n<h;n+=l){const s=(w+n)/i;if(!(s<0||s>=r.outDepth||Math.floor(s)!==s))for(let i=0;i<d;i+=u){const l=(k+i)/a;if(!(l<0||l>=r.outHeight||Math.floor(l)!==l))for(let a=0;a<p;a+=c){const u=(I+a)/o;if(u<0||u>=r.outWidth||Math.floor(u)!==u)continue;const c=h*d*p-1-b.get(t,s,l,u,e)===n*d*p+i*p+a?1:0;0!==c&&(C+=x.get(t,s,l,u,e)*c)}}}y.set(C,t,n,s,v,e)}return y.toTensor()}resizeBilinear(t,e,n,r){xy(t,"resizeBilinear");const[s,i,a,o]=t.shape,l=this.readSync(t.dataId),u=new Float32Array(m([s,e,n,o])),c=[r&&e>1?i-1:i,r&&n>1?a-1:a],h=[r&&e>1?e-1:e,r&&n>1?n-1:n];let d=0;const p=c[0]/h[0],f=c[1]/h[1];for(let r=0;r<s;r++)for(let s=0;s<e;s++){const e=p*s,c=Math.floor(e),h=e-c,m=Math.min(i-1,Math.ceil(e)),g=r*t.strides[0]+c*t.strides[1],y=r*t.strides[0]+m*t.strides[1];for(let e=0;e<n;e++){const n=f*e,r=Math.floor(n),s=n-r,i=Math.min(a-1,Math.ceil(n)),c=g+r*t.strides[2],p=y+r*t.strides[2],m=g+i*t.strides[2],b=y+i*t.strides[2];for(let t=0;t<o;t++){const e=l[c+t],n=l[p+t],r=e+(l[m+t]-e)*s,i=r+(n+(l[b+t]-n)*s-r)*h;u[d++]=i}}}return rr(u,[s,e,n,o])}resizeBilinearBackprop(t,e,n){xy([t,e],"resizeBilinearBackprop");const[r,s,i,a]=e.shape,[,o,l]=t.shape,u=new Float32Array(r*s*i*a),c=[n&&o>1?s-1:s,n&&l>1?i-1:i],h=[n&&o>1?o-1:o,n&&l>1?l-1:l],d=c[0]/h[0],p=c[1]/h[1],f=this.readSync(t.dataId);let m=0;for(let t=0;t<r;t++){const n=t*e.strides[0];for(let t=0;t<o;t++){const r=t*d,o=Math.floor(r),c=Math.min(Math.ceil(r),s-1),h=n+o*e.strides[1],g=n+c*e.strides[1],y=r-o,b=1-y;for(let t=0;t<l;t++){const n=t*p,r=Math.floor(n),s=Math.min(Math.ceil(n),i-1),o=n-r,l=1-o,c=h+r*e.strides[2],d=h+s*e.strides[2],x=g+r*e.strides[2],v=g+s*e.strides[2],w=b*l,k=b*o,I=y*l,C=y*o;for(let t=0;t<a;t++){const e=f[m++];u[c+t]+=e*w,u[d+t]+=e*k,u[x+t]+=e*I,u[v+t]+=e*C}}}}return Pa(u,[r,i,s,a],e.dtype)}resizeNearestNeighbor(t,e,n,r){xy(t,"resizeNearestNeighbor");const[s,i,a,o]=t.shape,l=this.readSync(t.dataId),u=new Float32Array(s*e*n*o),c=[r&&e>1?i-1:i,r&&n>1?a-1:a],h=[r&&e>1?e-1:e,r&&n>1?n-1:n],d=c[0]/h[0],p=c[1]/h[1];let f=0;for(let c=0;c<s;c++){const s=c*t.strides[0];for(let c=0;c<e;c++){const e=d*c,h=s+Math.min(i-1,r?Math.round(e):Math.floor(e))*t.strides[1];for(let e=0;e<n;e++){const n=p*e,s=h+Math.min(a-1,r?Math.round(n):Math.floor(n))*t.strides[2];for(let t=0;t<o;t++){const e=l[s+t];u[f++]=e}}}}return rr(u,[s,e,n,o],t.dtype)}resizeNearestNeighborBackprop(t,e,n){xy([t,e],"resizeNearestNeighborBackprop");const[r,s,i,a]=e.shape,[,o,l]=t.shape,u=new Float32Array(r*s*i*a),c=this.readSync(t.dataId),h=[n&&o>1?s-1:s,n&&l>1?i-1:i],d=[n&&o>1?o-1:o,n&&l>1?l-1:l],p=h[0]/d[0],f=h[1]/d[1],m=1/p,g=1/f,y=2*Math.ceil(m)+2,b=2*Math.ceil(g)+2;for(let h=0;h<r;h++){const r=h*e.strides[0];for(let h=0;h<s;h++){const d=r+h*e.strides[1],x=Math.floor(h*m),v=Math.floor(x-y/2);for(let m=0;m<i;m++){const x=d+m*e.strides[2],w=Math.floor(m*g),k=Math.floor(w-b/2);for(let e=0;e<a;e++){let a=0;for(let u=0;u<y;u++){const d=u+v;if(d<0||d>=o)continue;const g=r+d*t.strides[1],y=d*p;if(h===Math.min(s-1,n?Math.round(y):Math.floor(y)))for(let r=0;r<b;r++){const s=r+k;if(s<0||s>=l)continue;const o=g+s*t.strides[2],u=s*f;m===Math.min(i-1,n?Math.round(u):Math.floor(u))&&(a+=c[o+e])}}u[x+e]=a}}}}return Pa(u,e.shape,e.dtype)}localResponseNormalization4D(t,e,n,r,s){xy(t,"localResponseNormalization4D");const i=t.shape[3],a=i-1,o=this.readSync(t.dataId),l=t.size,u=new Float32Array(l);function c(t){const n=t%i;let r=t-n+Math.max(0,n-e);const s=t-n+Math.min(n+e,a);let l=0;for(;r<=s;r++){const t=o[r];l+=t*t}return l}for(let t=0;t<l;t++){const e=c(t),i=o[t]*Math.pow(n+r*e,-s);u[t]=i}return Pa(u,t.shape)}LRNGrad(t,e,n,r,s,i,a){xy(t,"LRNGrad");const o=t.shape[3],l=this.readSync(t.dataId),u=this.readSync(e.dataId),c=this.readSync(n.dataId),h=new Float32Array(t.size),d=t.size;for(let t=0;t<d;t++){const e=t%o,n=t-e+Math.max(0,e-r),d=t-e+Math.min(o,e+r+1);let p=0;for(let t=n;t<d;t++)p+=Math.pow(u[t],2);p=i*p+s;for(let e=n;e<d;e++){let n=-2*i*a*u[e]*c[t]/p;t===e&&(n+=Math.pow(p,-a)),n*=l[t],h[e]+=n}}return Pa(h,t.shape)}multinomial(t,e,n,r){xy(t,"multinomial");const s=e?t:Ta(t),i=s.shape[0],a=s.shape[1],o=Ji([i,n],"int32"),l=this.readSync(o.dataId),u=this.readSync(s.dataId);for(let t=0;t<i;++t){const e=t*a,s=new Float32Array(a-1);s[0]=u[e];for(let t=1;t<s.length;++t)s[t]=s[t-1]+u[e+t];const i=pa.alea(r.toString()),o=t*n;for(let t=0;t<n;++t){const e=i();l[o+t]=s.length;for(let n=0;n<s.length;n++)if(e<s[n]){l[o+t]=n;break}}}return o}oneHot(t,e,n,r){xy(t,"oneHot");const s=new Float32Array(t.size*e);s.fill(r);const i=this.readSync(t.dataId);for(let r=0;r<t.size;++r)i[r]>=0&&i[r]<e&&(s[r*e+i[r]]=n);return za(s,[t.size,e],"int32")}nonMaxSuppression(t,e,n,r,s){xy(t,"nonMaxSuppression");const i=this.readSync(t.dataId),a=this.readSync(e.dataId);return vy(i,a,n,r,s)}depthToSpace(t,e,n){h("NHWC"===n,(()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+n)),h(e>1,(()=>"blockSize should be > 1 for depthToSpace, but was: "+e));const r=t.shape[0],s=t.shape[1],i=t.shape[2],a=t.shape[3],o=s*e,l=i*e,u=a/(e*e),c=this.readSync(t.dataId),d=new Float32Array(r*o*l*u);let p=0;for(let t=0;t<r;++t)for(let n=0;n<o;++n){const r=Math.floor(n/e),o=n%e;for(let n=0;n<l;++n){const l=Math.floor(n/e),h=(o*e+n%e)*u;for(let e=0;e<u;++e){const n=e+h+a*(l+i*(r+s*t));d[p++]=c[n]}}}return Pa(d,[r,o,l,u])}broadcastedBinaryOp(t,e,n,r){const s=Ci(t.shape,e.shape),i=Mr(s,n),a=this.readSync(t.dataId),o=this.readSync(e.dataId),l=ki(t.shape,s),u=ki(e.shape,s),c=i.values;if(l.length+u.length===0)for(let t=0;t<c.length;++t)c[t]=r(a[t%a.length],o[t%o.length]);else{const n=this.bufferSync(t),s=this.bufferSync(e);for(let h=0;h<c.length;++h){const d=i.indexToLoc(h),p=d.slice(-t.rank);l.forEach((t=>p[t]=0));const f=n.locToIndex(p),m=d.slice(-e.rank);u.forEach((t=>m[t]=0));const g=s.locToIndex(m);c[h]=r(a[f],o[g])}}return i.toTensor()}split(t,e,n){return wy(t,e,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}cropAndResize(t,e,n,r,s,i){const[a,o,l,u]=t.shape,c=e.shape[0],[h,d]=r,p=Mr([c,h,d,u],"float32"),f=this.readSync(e.dataId),m=this.readSync(n.dataId),g=this.readSync(t.dataId),y=t.strides,b=p.strides;for(let t=0;t<c;t++){const e=4*t,n=f[e],r=f[e+1],c=f[e+2],x=f[e+3],v=m[t];if(v>=a)continue;const w=h>1?(c-n)*(o-1)/(h-1):0,k=d>1?(x-r)*(l-1)/(d-1):0;for(let e=0;e<h;e++){const a=h>1?n*(o-1)+e*w:.5*(n+c)*(o-1);if(a<0||a>o-1)for(let n=0;n<d;n++)for(let r=0;r<u;r++){const s=r+n*b[2]+e*b[1]+t*b[0];p.values[s]=i}else if("bilinear"===s){const n=Math.floor(a),s=Math.ceil(a),o=a-n;for(let a=0;a<d;a++){const c=d>1?r*(l-1)+a*k:.5*(r+x)*(l-1);if(c<0||c>l-1){for(let n=0;n<u;n++){const r=n+a*b[2]+e*b[1]+t*b[0];p.values[r]=i}continue}const h=Math.floor(c),f=Math.ceil(c),m=c-h;for(let r=0;r<u;r++){let i=r+h*y[2]+n*y[1]+v*y[0];const l=g[i];i=r+f*y[2]+n*y[1]+v*y[0];const u=g[i];i=r+h*y[2]+s*y[1]+v*y[0];const c=g[i];i=r+f*y[2]+s*y[1]+v*y[0];const d=l+(u-l)*m,x=c+(g[i]-c)*m;i=r+a*b[2]+e*b[1]+t*b[0],p.values[i]=d+(x-d)*o}}}else for(let n=0;n<d;++n){const s=d>1?r*(l-1)+n*k:.5*(r+x)*(l-1);if(s<0||s>l-1){for(let r=0;r<u;r++){const s=r+n*b[2]+e*b[1]+t*b[0];p.values[s]=i}continue}const o=Math.round(s),c=Math.round(a);for(let r=0;r<u;r++){const s=r+o*y[2]+c*y[1]+v*y[0],i=r+n*b[2]+e*b[1]+t*b[0];p.values[i]=g[s]}}}}return p.toTensor()}sparseToDense(t,e,n,r){const{sliceRank:s,numUpdates:i,sliceSize:a,strides:o,outputSize:l}=nl(0,t,n);return this.scatter(t,e,n,l,a,i,s,o,r,!1)}gatherND(t,e){const n=e.shape,r=n[n.length-1],[s,i,a,o]=Qo(t,e);if(0===i)return rr([],s,t.dtype);const l=new Cn([i,a],t.dtype),u=this.readSync(e.dataId),c=this.readSync(t.dataId);for(let e=0;e<i;e++){const n=[];let s=0;for(let t=0;t<r;t++){const i=u[e*r+t];s+=i*o[t],n.push(i)}if(s<0||s>=t.size/a)throw new Error(`Invalid indices: ${n} does not index into ${t.shape}`);for(let t=0;t<a;t++)l.values[e*a+t]=c[s*a+t]}return l.toTensor().reshape(s)}scatterND(t,e,n){const{sliceRank:r,numUpdates:s,sliceSize:i,strides:a,outputSize:o}=nl(0,t,n),l=ks(0);return this.scatter(t,e,n,o,i,s,r,a,l,!0)}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported for string tensors");return Ti(t.shape,1,t.dtype)}zerosLike(t){const e=S(t.dtype,m(t.shape));return this.makeOutput(e,t.shape,t.dtype)}linspace(t,e,n){return Il(t,e,n)}scatter(t,e,n,r,s,i,a,o,l,u){const c=[r/s,s],h=this.readSync(t.dataId),d=this.readSync(e.dataId);if(0===r)return rr([],n,e.dtype);const p=new Cn(c,e.dtype);p.values.fill(this.readSync(l.dataId)[0]);for(let t=0;t<i;t++){const i=[];let l=0;for(let e=0;e<a;e++){const n=h[t*a+e];i.push(n),l+=n*o[e]}if(l<0||l>=r/s)throw new Error(`Invalid indices: ${i} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[l*s+n]+=d[t*s+n]:p.values[l*s+n]=0===e.rank?d[0]:d[t*s+n]}return p.toTensor().reshape(n)}}function Ey(t,e,n){return({inputs:r,attrs:s,backend:i})=>{const{x:a}=r;if(xy(a,t),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=i,l=o.data.get(a.dataId).values,u=m(a.shape),c=n||a.dtype,h=S(c,u);for(let t=0;t<u;++t)h[t]=e(l[t],s);return o.makeTensorInfo(a.shape,c,h)}}function $y(t,e,n){return({inputs:r,attrs:s,backend:i})=>{const{x:a}=r;if(xy(a,t),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=i,l=o.data.get(a.dataId).values,u=n||a.dtype,c=e(l,u,s);return o.makeTensorInfo(a.shape,u,c)}}xs("cpu",(()=>new Sy),1);const Ny=Ey(_t,(t=>t>=0?t:Math.exp(t)-1)),Ry={kernelName:_t,backendName:"cpu",kernelFunc:Ny};function Ty(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Ay={kernelName:jt,backendName:"cpu",kernelFunc:Ty};function Fy(t){return(e,n,r,s,i)=>{const a=Ci(e,n),o=a.length,l=_(a),u=C(i,m(a)),c=e.length,h=n.length,d=_(e),p=_(n),f=ki(e,a),g=ki(n,a);if(f.length+g.length===0)for(let e=0;e<u.length;++e)u[e]=t(r[e%r.length],s[e%s.length]);else for(let e=0;e<u.length;++e){const n=U(e,o,l),i=n.slice(-c);f.forEach((t=>i[t]=0));const a=W(i,c,d),m=n.slice(-h);g.forEach((t=>m[t]=0));const y=W(m,h,p);u[e]=t(r[a],s[y])}return[u,a]}}const Dy=Fy(((t,e)=>t<0?e*t:t));function _y(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e;xy([r,s],"prelu");const i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,[o,l]=Dy(r.shape,s.shape,i,a,r.dtype);return n.makeTensorInfo(l,r.dtype,o)}const Oy={kernelName:ve,backendName:"cpu",kernelFunc:_y},My=Ey(Ie,(t=>Math.max(0,t))),Ly={kernelName:Ie,backendName:"cpu",kernelFunc:My},zy=Ey($e,(t=>Math.min(Math.max(0,t),6))),By={kernelName:$e,backendName:"cpu",kernelFunc:zy};function Py(t,e,n,r){if("linear"===n)return Ty({inputs:{x:e},backend:t});if("relu"===n)return My({inputs:{x:e},backend:t});if("elu"===n)return Ny({inputs:{x:e},backend:t});if("relu6"===n)return zy({inputs:{x:e},backend:t});if("prelu"===n)return _y({inputs:{x:e,alpha:r},backend:t});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Wy(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",i),imag:n.makeTensorInfo(s.shape,"float32",a)},o}const Uy={kernelName:gt,backendName:"cpu",kernelFunc:Wy};function Vy(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.real,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}const Gy={kernelName:we,backendName:"cpu",kernelFunc:Vy};function Hy(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return Ty({inputs:{x:s},backend:n});const t=Ji(s.shape),e=Hy({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=Wy({inputs:{real:e,imag:t},backend:n});return t.dispose(),n.disposeIntermediateTensorInfo(e),r}if("complex64"===s.dtype){const t=Vy({inputs:{input:s},backend:n}),e=Hy({inputs:{x:t},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(t),e}if(!E(s.dtype,i)){const t=Ty({inputs:{x:s},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:i}}if("int32"===i){const t=n.data.get(s.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(s.shape,"int32",e)}if("bool"===i){const t=n.data.get(s.dataId).values,e=vn([0],s.dtype),[r,i]=Fy(((t,e)=>t!==e?1:0))(s.shape,[],t,e,"bool");return n.makeTensorInfo(i,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}const jy={kernelName:pt,backendName:"cpu",kernelFunc:Hy};function qy(t,e,n,r){return null==n?({inputs:n,backend:s})=>{const{a:i,b:a}=n,o=s;xy([i,a],t);const l=o.data.get(i.dataId).values,u=o.data.get(a.dataId).values,c=r||i.dtype,[h,d]=e(i.shape,a.shape,l,u,c);return o.makeTensorInfo(d,c,h)}:({inputs:t,backend:s})=>{const{a:i,b:a}=t,o=s;if("complex64"===i.dtype||"complex64"===a.dtype){const t=Hy({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),e=o.data.get(t.dataId),r=e.complexTensorInfos.real,s=e.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(s.dataId).values,c=Hy({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,y,b]=n(i.shape,a.shape,l,u,f,m),x=o.makeTensorInfo(b,"float32",g),v=o.makeTensorInfo(b,"float32",y),w=Wy({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(t),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const t=o.data.get(i.dataId).values,n=o.data.get(a.dataId).values,s=r||i.dtype,[l,u]=e(i.shape,a.shape,t,n,s);return o.makeTensorInfo(u,s,l)}}}function Ky(t){return(e,n,r,s,i,a)=>{const o=Ci(e,n),l=m(o),u=o.length,c=_(o),h=C("float32",l),d=C("float32",l),p=ki(e,o),f=ki(n,o),g=pl(r,s),y=pl(i,a),b=e.length,x=_(e),v=n.length,w=_(n);if(p.length+f.length===0)for(let e=0;e<h.length;e++){const n=e%g.length,r=e%y.length,s=t(g[2*n],g[2*n+1],y[2*r],y[2*r+1]);h[e]=s.real,d[e]=s.imag}else for(let e=0;e<h.length;e++){const n=U(e,u,c),r=n.slice(-b);p.forEach((t=>r[t]=0));const s=W(r,b,x),i=n.slice(-v);f.forEach((t=>i[t]=0));const a=W(i,v,w),o=t(g[2*s],g[2*s+1],y[2*a],y[2*a+1]);h[e]=o.real,d[e]=o.imag}return[h,d,o]}}const Xy=Fy(((t,e)=>t+e)),Yy=Ky(((t,e,n,r)=>({real:t+n,imag:e+r}))),Jy=qy(Q,Xy,Yy),Zy={kernelName:Q,backendName:"cpu",kernelFunc:Jy};function Qy(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:i}=r,a=m(s.shape),o=w(i,a),l=m(o);h(a===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const u=n.data.get(s.dataId);if(null!=u.complexTensorInfos){const t=u.complexTensorInfos.real,e=u.complexTensorInfos.imag;t.shape=o,e.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const tb={kernelName:Ce,backendName:"cpu",kernelFunc:Qy};function eb(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:i}=e,{transposeA:a,transposeB:o}=r;xy([s,i],"matMul");const l=s.shape.length,u=i.shape.length,c=a?s.shape[l-2]:s.shape[l-1],d=o?i.shape[u-1]:i.shape[u-2],p=a?s.shape[l-1]:s.shape[l-2],f=o?i.shape[u-2]:i.shape[u-1],g=s.shape.slice(0,-2),y=i.shape.slice(0,-2),b=m(g),x=m(y);h(l>=2&&u>=2&&(b===x||1===b||1===x),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${y}).`));const v=(b>x?s.shape.slice(0,-2):i.shape.slice(0,-2)).concat([p,f]);h(c===d,(()=>`Error in matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${a} and transposeB=${o} must match.`));const w=o?[x,f,d]:[x,d,f],k=Qy({inputs:{x:s},backend:n,attrs:{shape:a?[b,c,p]:[b,p,c]}}),I=Qy({inputs:{x:i},backend:n,attrs:{shape:w}}),C=a?k.shape[1]:k.shape[2],S=a?k.shape[2]:k.shape[1],E=o?I.shape[1]:I.shape[2],$=Math.max(b,x),N=n.data.get(k.dataId).values,R=n.data.get(I.dataId).values,T=_(k.shape),A=_(I.shape),[F,D,O]=a?[T[0],1,T[1]]:[T[0],T[1],1],[M,L,z]=o?[1,A[1],A[0]]:[A[1],1,A[0]],B=S*E,P=Mr([$,S,E],k.dtype),W=P.values,U=n.blockSize;for(let t=0;t<$;t++)for(let e=0;e<S;e+=U)for(let n=0;n<E;n+=U)for(let r=0;r<C;r+=U){const s=Math.min(e+U,S),i=Math.min(n+U,E),a=Math.min(r+U,C);for(let o=e;o<s;o++)for(let e=n;e<i;e++){let n=0;for(let s=r;s<a;s++){const r=Math.min(t,b-1)*F,i=Math.min(t,x-1)*z;n+=N[r+o*D+s*O]*R[s*M+e*L+i]}W[t*B+(o*E+e)]+=n}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(v,P.dtype,P.values)}const nb={kernelName:ct,backendName:"cpu",kernelFunc:eb},rb={kernelName:nn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:i,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c}=r;let h,d,p;const f=[];h=eb({inputs:{a:s,b:i},attrs:{transposeA:l,transposeB:u},backend:n}),a&&(d=Jy({inputs:{a:h,b:a},backend:n}),f.push(h),h=d),c&&(p=Py(n,h,c,o),f.push(h),h=p);for(const t of f)n.disposeIntermediateTensorInfo(t);return h}};function sb(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const ib={kernelName:Y,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;let r=new Float32Array(m(e.shape));if("complex64"!==e.dtype)r=sb(n.data.get(e.dataId).values);else{const t=n.data.get(e.dataId),s=t.complexTensorInfos.real,i=t.complexTensorInfos.imag,a=n.data.get(s.dataId).values,o=n.data.get(i.dataId).values;for(let t=0;t<a.length;t++){const e=a[t],n=o[t];r[t]=Math.hypot(e,n)}}return n.makeOutput(r,e.shape,"float32")}},ab=Ey(J,(t=>Math.acos(t))),ob={kernelName:J,backendName:"cpu",kernelFunc:ab},lb=Ey(Z,(t=>Math.acosh(t))),ub={kernelName:Z,backendName:"cpu",kernelFunc:lb},cb=Ey(nt,(t=>Math.asin(t))),hb={kernelName:nt,backendName:"cpu",kernelFunc:cb},db=Ey(rt,(t=>Math.asinh(t))),pb={kernelName:rt,backendName:"cpu",kernelFunc:db},fb=Ey(st,(t=>Math.atan(t))),mb={kernelName:st,backendName:"cpu",kernelFunc:fb},gb=Ey(it,(t=>Math.atanh(t))),yb={kernelName:it,backendName:"cpu",kernelFunc:gb};function bb(t,e,n,r,s,i){const a=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Mr(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let e=0;e<s.batchSize;++e){const n=e*y,m=e*r[0];for(let e=0;e<s.inChannels;++e)for(let y=0;y<s.outHeight;++y){const v=y*a-d,w=Math.max(0,v),k=Math.min(s.inHeight,c+v),I=n+y*b;for(let n=0;n<s.outWidth;++n){const a=n*o-p,c=Math.max(0,a),d=Math.min(s.inWidth,h+a);let y=f,b=0,v=0;for(let n=w;n<k;n+=l){const s=m+n*r[1];for(let n=c;n<d;n+=u){const a=t[s+n*r[2]+e];"max"===i&&a>y?y=a:"avg"===i&&(b+=a,v++)}if(isNaN(y))break}g[I+n*x+e]="avg"===i?b/v:y}}}return m}function xb(t,e,n,r,s=!1,i=!1){const a=Mr(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=Mr(e,n,t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.outHeight;++n){const g=n*o-p;let y=g;for(;y<0;)y+=u;const b=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const x=Math.min(r.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=u){const a=n-g;for(let o=p;o<x;o+=c){const l=o-h,u=m.get(t,n,o,e);u>v&&(v=u,w=s?i?((t*r.inHeight+n)*r.inWidth+o)*r.inChannels+e:(n*r.inWidth+o)*r.inChannels+e:a*d+l)}}a.set(w,t,n,o,e)}}return a}const vb={kernelName:ot,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;xy(s,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;h(Ys(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Ps(s.shape,i,a,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&g(u.inShape,u.outShape))c=Ty({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=_(s.shape),r=bb(t,s.shape,s.dtype,e,u,"avg");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},wb={kernelName:lt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,a=i;xy([s,i],"avgPoolBackprop");const{filterSize:o,strides:l,pad:u}=r,c=Ps(a.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,v=y-1-c.padInfo.top,w=Mr(a.shape,"float32"),k=1/(p*f),I=n.data.get(s.dataId).values,C=Mr(s.shape,"float32",I);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-v,i=r-x;let a=0;for(let n=0;n<y;n+=m){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const s=(i+n)/d;s<0||s>=c.outWidth||Math.floor(s)!==s||(a+=C.get(t,r,s,e))}}w.set(a*k,t,n,r,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},kb={kernelName:Vt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,scale:i,offset:a,mean:o,variance:l}=e;h(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),h(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),h(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),xy([s,o,l,i,a],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(s.dataId).values,d=n.data.get(o.dataId).values,p=n.data.get(l.dataId).values,f=i?n.data.get(i.dataId).values:new Float32Array([1]),m=a?n.data.get(a.dataId).values:new Float32Array([0]),g=new Float32Array(c.length),y=m.length,b=f.length,x=p.length,v=d.length;let w=0,k=0,I=0,C=0;for(let t=0;t<c.length;++t)g[t]=m[w++]+(c[t]-d[k++])*f[I++]/Math.sqrt(p[C++]+u),w>=y&&(w=0),k>=v&&(k=0),I>=b&&(I=0),C>=x&&(C=0);return n.makeTensorInfo(s.shape,s.dtype,g)}};function Ib(t){return(e,n,r)=>{const s=C(n,e.length);for(let n=0;n<e.length;++n)s[n]=t(e[n],r);return s}}const Cb=Ib((t=>Math.ceil(t))),Sb=$y(ft,Cb),Eb={kernelName:ft,backendName:"cpu",kernelFunc:Sb},$b=Ey(mt,((t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t})),Nb={kernelName:mt,backendName:"cpu",kernelFunc:$b};function Rb(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.imag,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}const Tb={kernelName:Kt,backendName:"cpu",kernelFunc:Rb};function Ab(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,i=k(s,e[0].shape)[0];let a=oi(e.map((t=>t.shape)),i);if(0===m(a))return n.makeTensorInfo(a,e[0].dtype,[]);const o=e.filter((t=>m(t.shape)>0));if(1===o.length)return o[0];if(ai(o.map((t=>t.shape)),i),"complex64"===o[0].dtype){const t=o.map((t=>Vy({inputs:{input:t},backend:n}))),e=o.map((t=>Rb({inputs:{input:t},backend:n}))),r=Ab({inputs:t,backend:n,attrs:{axis:i}}),s=Ab({inputs:e,backend:n,attrs:{axis:i}}),a=Wy({inputs:{real:r,imag:s},backend:n});return t.forEach((t=>n.disposeIntermediateTensorInfo(t))),e.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),a}const l=o.map((t=>{const e=m(t.shape.slice(i));return Qy({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})}));a=oi(l.map((t=>t.shape)),1);const u=C(o[0].dtype,m(a));if(1===l[0].shape[0]){let t=0;l.forEach((e=>{const r=n.data.get(e.dataId).values,s=m(e.shape);u.set(r,t),t+=s}))}else{let t=0;l.forEach((e=>{const r=n.data.get(e.dataId).values;let s=0;for(let n=0;n<e.shape[0];++n){const i=n*a[1]+t;for(let t=0;t<e.shape[1];++t)u[i+t]=r[s++]}t+=e.shape[1]}))}const c=oi(o.map((t=>t.shape)),i),h=n.makeTensorInfo(c,e[0].dtype,u);return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}const Fb={kernelName:yt,backendName:"cpu",kernelFunc:Ab};function Db(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r;xy([s,i],"conv2d");const h=Js(l),d=Us(s.shape,i.shape,a,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new Cn(d.outShape,s.dtype),w=_(s.shape),k=_(i.shape),I=w[0],C=x?w[1]:w[2],S=x?w[2]:1,E=x?1:w[1],$=v.strides[0],N=x?v.strides[1]:v.strides[2],R=x?v.strides[2]:1,T=x?1:v.strides[1],A=n.data.get(s.dataId).values,F=n.data.get(i.dataId).values,D=v.values;for(let t=0;t<d.batchSize;++t){const e=t*I,n=t*$;for(let t=0;t<d.outHeight;++t){const r=n+t*N,s=t*d.strideHeight-b;for(let t=0;t<p;++t){const n=s+t*m;if(n<0||n>=d.inHeight)continue;const i=t*k[0],a=e+n*C;for(let t=0;t<d.outWidth;++t){const e=r+t*R,n=t*d.strideWidth-y;for(let t=0;t<f;++t){const r=n+t*g;if(r<0||r>=d.inWidth)continue;const s=a+r*S;let o=i+t*k[1];for(let t=0;t<d.inChannels;++t){const n=A[s+t*E];for(let t=0;t<d.outChannels;++t)D[e+t*T]+=n*F[o+t];o+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,D)}const _b={kernelName:bt,backendName:"cpu",kernelFunc:Db},Ob={kernelName:xt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;xy([s,i],"conv2dBackpropFilter");const h=Js(l),d=Us(s.shape,c,a,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new Cn(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(s.dataId).values,k=n.data.get(i.dataId).values,I=new Cn(s.shape,s.dtype,w),C=new Cn(i.shape,i.dtype,k);for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((v-t)/p)),n=Math.min(d.outHeight,(d.inHeight+v-t)/p);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((x-r)/f)),i=Math.min(d.outWidth,(d.inWidth+x-r)/f);for(let a=0;a<d.inChannels;++a)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let c=e;c<n;++c){const e=t+c*p-v;for(let t=s;t<i;++t){const n=r+t*f-x;l+=y?I.get(u,e,n,a)*C.get(u,c,t,o):I.get(u,a,e,n)*C.get(u,o,c,t)}}b.set(l,t,r,a,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Mb={kernelName:vt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r;xy([s,i],"conv2dBackpropInput");const h=_(i.shape),d=_(s.shape);let p=Js(u);const f=Us(a,i.shape,o,1,l,c,!1,p),m=new Cn(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,b=n.data.get(i.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:C,inChannels:S,inHeight:E,inWidth:$,outChannels:N,outHeight:R,outWidth:T,strideHeight:A,strideWidth:F}=f;p=f.dataFormat;const D=I-1-f.padInfo.top,O=C-1-f.padInfo.left,M="channelsLast"===p,L=m.strides[0],z=M?m.strides[1]:m.strides[2],B=M?m.strides[2]:1,P=M?1:m.strides[1],W=d[0],U=M?d[1]:d[2],V=M?d[2]:1,G=M?1:d[1];for(let t=0;t<k;++t)for(let e=0;e<S;++e)for(let n=0;n<E;++n){const r=n-D,s=Math.max(0,Math.ceil(r/A)),i=Math.min(R,(I+r)/A);for(let a=0;a<$;++a){const o=a-O,l=Math.max(0,Math.ceil(o/F)),u=Math.min(T,(C+o)/F);let c=0;for(let n=s;n<i;++n){const s=n*A-r;for(let r=l;r<u;++r){const i=W*t+U*n+V*r,a=x*(I-1-s)+v*(C-1-(r*F-o))+w*e;for(let t=0;t<N;++t)c+=y[i+G*t]*b[a+t]}}g[L*t+z*n+B*a+P*e]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},Lb={kernelName:wt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l}=r;xy([s,i],"conv3d");const u=Vs(s.shape,i.shape,a,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,v=new Cn(u.outShape,s.dtype),w=n.data.get(s.dataId).values,k=n.data.get(i.dataId).values,I=v.values,C=_(s.shape),S=_(i.shape);for(let t=0;t<u.batchSize;++t){const e=t*C[0],n=t*v.strides[0];for(let t=0;t<u.outDepth;++t){const r=n+t*v.strides[1],s=t*u.strideDepth-y;for(let t=0;t<c;++t){const n=s+t*p;if(n<0||n>=u.inDepth)continue;const i=t*S[0],a=e+n*C[1];for(let t=0;t<u.outHeight;++t){const e=r+t*v.strides[2],n=t*u.strideHeight-x;for(let t=0;t<h;++t){const r=n+t*f;if(r<0||r>=u.inHeight)continue;const s=i+t*S[1],o=a+r*C[2];for(let t=0;t<u.outWidth;++t){const n=e+t*u.outChannels,r=t*u.strideWidth-b;for(let t=0;t<d;++t){const e=r+t*m;if(e<0||e>=u.inWidth)continue;const i=s+t*S[2],a=o+e*u.inChannels;let l=i;for(let t=0;t<u.inChannels;++t){const e=w[a+t];for(let t=0;t<u.outChannels;++t)I[n+t]+=e*k[l+t];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},zb={kernelName:kt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:a,pad:o,filterShape:l}=r;xy([s,i],"conv3dBackpropFilterV2");const u=_(s.shape),c=_(i.shape),h=Vs(s.shape,l,a,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Cn(h.filterShape,"float32"),x=b.values,[v,w,k,I]=b.strides,C=n.data.get(i.dataId).values,[S,E,$,N]=c,R=n.data.get(s.dataId).values,[T,A,F,D]=u,O=h.padInfo.front,M=h.padInfo.left,L=h.padInfo.top;for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((O-t)/d)),n=Math.min(h.outDepth,(h.inDepth+O-t)/d),r=t*v;for(let s=0;s<g;++s){const i=Math.max(0,Math.ceil((L-s)/p)),a=Math.min(h.outHeight,(h.inHeight+L-s)/p),o=s*w+r;for(let r=0;r<y;++r){const l=Math.max(0,Math.ceil((M-r)/f)),u=Math.min(h.outWidth,(h.inWidth+M-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*T,y=m*S;for(let m=e;m<n;++m){const e=(t+m*d-O)*A+h,n=m*E+y;for(let t=i;t<a;++t){const i=(s+t*p-L)*F+e,a=t*$+n;for(let t=l;t<u;++t){const e=t*N+a;g+=R[(r+t*f-M)*D+i+o]*C[e+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Bb={kernelName:It,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{pad:a,strides:o,inputShape:l}=r;xy([s],"conv3dBackpropInputV2");const u=_(s.shape),c=_(i.shape),h=Vs(l,i.shape,o,1,a),d=new Cn(h.inShape,"float32"),p=d.values,[f,m,g,y]=d.strides,b=n.data.get(s.dataId).values,[x,v,w,k]=u,I=n.data.get(i.dataId).values,[C,S,E,$]=c,{batchSize:N,filterDepth:R,filterHeight:T,filterWidth:A,inChannels:F,inDepth:D,inHeight:O,inWidth:M,outChannels:L,outDepth:z,outHeight:B,outWidth:P,strideDepth:W,strideHeight:U,strideWidth:V}=h,G=R-1-h.padInfo.front,H=T-1-h.padInfo.top,j=A-1-h.padInfo.left;for(let t=0;t<N;++t)for(let e=0;e<F;++e)for(let n=0;n<D;++n){const r=n-G,s=Math.max(0,Math.ceil(r/W)),i=Math.min(z,(R+r)/W);for(let a=0;a<O;++a){const o=a-H,l=Math.max(0,Math.ceil(o/U)),u=Math.min(B,(T+o)/U);for(let c=0;c<M;++c){const h=c-j,d=Math.max(0,Math.ceil(h/V)),N=Math.min(P,(A+h)/V);let F=0;for(let n=s;n<i;++n){const s=n*W-r;for(let r=l;r<u;++r){const i=r*U-o;for(let a=d;a<N;++a){const o=x*t+v*n+w*r+k*a,l=C*(R-1-s)+S*(T-1-i)+E*(A-1-(a*V-h))+$*e;for(let t=0;t<L;++t)F+=b[o+t]*I[l+t]}}}p[f*t+m*n+g*a+y*c+e]=F}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},Pb=Ey(Ct,(t=>Math.cos(t))),Wb={kernelName:Ct,backendName:"cpu",kernelFunc:Pb},Ub=Ey(St,(t=>Math.cosh(t))),Vb={kernelName:St,backendName:"cpu",kernelFunc:Ub};function Gb(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=r;xy([s,i],"depthwiseConv2DNative");const c=_(s.shape),d=_(i.shape);let p=l;null==p&&(p=[1,1]),h(Ys(a,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${p}'`));const f=Us(s.shape,i.shape,a,p,o,u,!0),{filterHeight:m,filterWidth:g,dilationHeight:y,dilationWidth:b,padInfo:x}=f,v=x.left,w=x.top,k=f.outChannels/f.inChannels,I=new Cn(f.outShape,s.dtype),C=n.data.get(s.dataId).values,S=n.data.get(i.dataId).values,E=I.values;for(let t=0;t<f.batchSize;++t){const e=t*c[0],n=t*I.strides[0];for(let t=0;t<f.outHeight;++t){const r=n+t*I.strides[1],s=t*f.strideHeight-v;for(let t=0;t<m;++t){const n=s+t*y;if(n<0||n>=f.inHeight)continue;const i=t*d[0],a=e+n*c[1];for(let t=0;t<f.outWidth;++t){const e=r+t*I.strides[2],n=t*f.strideWidth-w;for(let t=0;t<g;++t){const r=n+t*b;if(r<0||r>=f.inWidth)continue;const s=i+t*d[1],o=a+r*f.inChannels;let l=e,u=s;for(let t=0;t<f.inChannels;++t){const e=C[o+t];for(let t=0;t<k;++t)E[l+t]+=e*S[u+t];l+=k,u+=k}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const Hb={kernelName:$t,backendName:"cpu",kernelFunc:Gb},jb={kernelName:Nt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;xy([s,i],"depthwiseConv2dNativeBackpropFilter");const h=Us(s.shape,c,a,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new Cn(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(s.dataId).values,w=new Cn(s.shape,s.dtype,v),k=n.data.get(i.dataId).values,I=new Cn(i.shape,i.dtype,k);for(let t=0;t<f;++t){const e=Math.max(0,Math.ceil((b-t)/d)),n=Math.min(h.outHeight,(h.inHeight+b-t)/d);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((y-r)/p)),i=Math.min(h.outWidth,(h.inWidth+y-r)/p);for(let a=0;a<h.outChannels;++a){const o=Math.trunc(a/x),l=a%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=e;c<n;++c){const e=t+c*d-b;for(let t=s;t<i;++t){const n=r+t*p-y;u+=w.get(l,e,n,o)*I.get(l,c,t,a)}}g.set(u,t,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},qb={kernelName:Rt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r;xy([s,i],"depthwiseConv2DNativeBackpropInput");const h=_(s.shape),d=_(i.shape),p=Us(c,i.shape,a,o,l,u,!0),f=new Cn(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(s.dataId).values,[v,w,k]=h,I=n.data.get(i.dataId).values,[C,S,E]=d,{batchSize:$,filterHeight:N,filterWidth:R,inChannels:T,inHeight:A,inWidth:F,outChannels:D,outHeight:O,outWidth:M,strideHeight:L,strideWidth:z}=p,B=N-1-p.padInfo.top,P=R-1-p.padInfo.left,W=D/T;for(let t=0;t<$;++t)for(let e=0;e<T;++e)for(let n=0;n<A;++n){const r=n-B,s=Math.max(0,Math.ceil(r/L)),i=Math.min(O,(N+r)/L);for(let a=0;a<F;++a){const o=a-P,l=Math.max(0,Math.ceil(o/z)),u=Math.min(M,(R+o)/z);let c=0;for(let n=s;n<i;++n){const s=n*L-r;for(let r=l;r<u;++r){const i=v*t+w*n+k*r,a=C*(N-1-s)+S*(R-1-(r*z-o))+E*e;for(let t=0;t<W;++t)c+=x[i+(e*W+t)]*I[a+t]}}m[g*t+y*n+b*a+e]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},Kb={kernelName:Tt,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s}=t,{strides:i,pad:a,dilations:o}=n,l=e,u=l.data.get(r.dataId).values,c=r.shape.length,h=l.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:f,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:I,filterWidth:C,dilationHeight:E,dilationWidth:$,outShape:N}=Bs(r.shape,s.shape,i,a,"NHWC",o),R=m(N),T=N.length,A=S(r.dtype,R);for(let t=0;t<p;++t)for(let e=0;e<b;++e){const n=e*w-v.top;for(let i=0;i<x;++i){const a=i*k-v.left;for(let o=0;o<y;++o){let l=Number.MIN_SAFE_INTEGER;for(let e=0;e<I;++e){const i=n+e*E;if(i>=0&&i<f)for(let n=0;n<C;++n){const p=a+n*$;if(p>=0&&p<g){const a=W([t,i,p,o],c,_(r.shape)),f=W([e,n,o],d,_(s.shape)),m=u[a]+h[f];m>l&&(l=m)}}}A[W([t,e,i,o],T,_(N))]=l}}}return{dataId:l.write(vn(A,r.dtype),N,r.dtype),shape:N,dtype:r.dtype}}},Xb={kernelName:Ft,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:i}=t,{strides:a,pad:o,dilations:l}=n,u=e,c=M(r.shape,u.data.get(r.dataId).values),d=M(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:C,dilationWidth:S,outShape:E}=Bs(r.shape,s.shape,a,o,"NHWC",l);h(i.rank===E.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${E.length}, but got `+i.rank));const $=M(E,u.data.get(i.dataId).values),N=B(s.shape,s.dtype);for(let t=0;t<p;++t)for(let e=0;e<y;++e){const n=e*v-x.top;for(let r=0;r<b;++r){const s=r*w-x.left;for(let i=0;i<g;++i){let a=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let e=0;e<k;++e){const r=n+e*C;if(r>=0&&r<f)for(let n=0;n<I;++n){const u=s+n*S;if(u>=0&&u<m){const s=c[t][r][u][i]+d[e][n][i];s>a&&(a=s,o=e,l=n)}}}N[o][l][i]+=$[t][e][r][i]}}}return{dataId:u.write(vn(N,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Yb={kernelName:At,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:i}=t,{strides:a,pad:o,dilations:l}=n,u=e,c=M(r.shape,u.data.get(r.dataId).values),d=M(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:C,dilationWidth:S,outShape:E}=Bs(r.shape,s.shape,a,o,"NHWC",l);h(i.rank===E.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${E.length}, but got `+i.rank));const $=M(E,u.data.get(i.dataId).values),N=B(r.shape,r.dtype);for(let t=0;t<p;++t)for(let e=0;e<y;++e){const n=e*v-x.top;for(let r=0;r<b;++r){const s=r*w-x.left;for(let i=0;i<g;++i){let a=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=s<0?0:s;for(let e=0;e<k;++e){const r=n+e*C;if(r>=0&&r<f)for(let n=0;n<I;++n){const u=s+n*S;if(u>=0&&u<m){const s=c[t][r][u][i]+d[e][n][i];s>a&&(a=s,o=r,l=u)}}}N[t][o][l][i]+=$[t][e][r][i]}}}return{dataId:u.write(vn(N,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Jb=Fy(((t,e)=>t/e)),Zb=qy(Dt,Jb),Qb={kernelName:Dt,backendName:"cpu",kernelFunc:Zb},tx=il,ex=al,nx=ol,rx=ll,sx=ul,ix=cl,ax=Ey(Ot,(t=>{const e=Math.sign(t),n=Math.abs(t),r=1/(1+tx*n);return e*(1-((((ix*r+sx)*r+rx)*r+nx)*r+ex)*r*Math.exp(-n*n))})),ox={kernelName:Ot,backendName:"cpu",kernelFunc:ax},lx=Ib((t=>Math.exp(t))),ux=$y(Mt,lx),cx={kernelName:Mt,backendName:"cpu",kernelFunc:ux},hx=Ib((t=>Math.expm1(t))),dx=$y(Lt,hx),px={kernelName:Lt,backendName:"cpu",kernelFunc:dx},fx=Fy(((t,e)=>t*e)),mx=Ky(((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n}))),gx=qy(he,fx,mx),yx={kernelName:he,backendName:"cpu",kernelFunc:gx};function bx(t,e,n,r,s){const i=os(r,e,n),a=m(n),o=_(r);if(i){const n=ls(e,o);return t.subarray(n,n+a)}const l=C(s,a);for(let s=0;s<a;++s){const i=W(U(s,n.length,_(n)).map(((t,n)=>t+e[n])),r.length,o);l[s]=t[i]}return l}function xx(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:i,size:a}=r;xy(s,"slice");const[o,l]=us(s,i,a);Xr(s,o,l);const u=bx(n.data.get(s.dataId).values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,u)}const vx={kernelName:De,backendName:"cpu",kernelFunc:xx},wx=Fy(((t,e)=>t-e)),kx=Ky(((t,e,n,r)=>({real:t-n,imag:e-r}))),Ix=qy(He,wx,kx),Cx={kernelName:He,backendName:"cpu",kernelFunc:Ix};function Sx(t,e,n){const r=t.shape,s=r[0],i=r[1],a=n.data.get(t.dataId),o=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[s,i],c=m(u),h=C("float32",c),d=C("float32",c);for(let t=0;t<s;t++){const r=xx({inputs:{x:o},backend:n,attrs:{begin:[t,0],size:[1,i]}}),s=xx({inputs:{x:l},backend:n,attrs:{begin:[t,0],size:[1,i]}}),a=Wy({inputs:{real:r,imag:s},backend:n}),{real:u,imag:c}=Ex(a,e,n),p=pl(u,c);for(let e=0;e<i;e++){const n=yl(p,e);h[t*i+e]=n.real,d[t*i+e]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),g=Wy({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}function Ex(t,e,n){const r=m(t.shape),s=n.data.get(t.dataId),i=n.data.get(s.complexTensorInfos.real.dataId).values,a=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((l=r)&l-1)){const s=$x(i,a,r,e,n),l=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(l,"float32",s.real),e=n.makeTensorInfo(l,"float32",s.imag),i=n.makeTensorInfo([],"float32",(o=r,"string"=="float32"?kn(o):vn([o],"float32"))),a=Ty({inputs:{x:i},backend:n}),u=Qb.kernelFunc({inputs:{a:t,b:i},backend:n}),c=Qb.kernelFunc({inputs:{a:e,b:a},backend:n}),h=n.data.get(u.dataId).values,d=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),{real:h,imag:d}}return s}return fl(function(t,e,n){const r=new Float32Array(2*e);for(let s=0;s<e;s++){let i=0,a=0;for(let r=0;r<e;r++){const o=vl(s*r,e,n),l=yl(t,r);i+=l.real*o.real-l.imag*o.imag,a+=l.real*o.imag+l.imag*o.real}n&&(i/=e,a/=e),bl(r,i,a,s)}return r}(pl(i,a),r,e));var o,l}function $x(t,e,n,r,s){if(1===n)return{real:t,imag:e};const i=pl(t,e),a=n/2,o=ml(i),l=o.real,u=o.imag,c=[l.length],h=s.makeTensorInfo(c,"float32",l),d=s.makeTensorInfo(c,"float32",u),p=Wy({inputs:{real:h,imag:d},backend:s}),f=gl(i),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),x=s.makeTensorInfo(y,"float32",g),v=Wy({inputs:{real:b,imag:x},backend:s}),w=$x(l,u,a,r,s),k=w.real,I=w.imag,C=[k.length],S=s.makeTensorInfo(C,"float32",k),E=s.makeTensorInfo(C,"float32",I),$=Wy({inputs:{real:S,imag:E},backend:s}),N=$x(m,g,a,r,s),R=N.real,T=N.imag,A=[R.length],F=s.makeTensorInfo(A,"float32",R),D=s.makeTensorInfo(A,"float32",T),_=Wy({inputs:{real:F,imag:D},backend:s}),O=xl(n,r),M=[O.real.length],L=s.makeTensorInfo(M,"float32",O.real),z=s.makeTensorInfo(M,"float32",O.imag),B=Wy({inputs:{real:L,imag:z},backend:s}),P=gx({inputs:{a:B,b:_},backend:s}),W=Jy({inputs:{a:$,b:P},backend:s}),U=Ix({inputs:{a:$,b:P},backend:s}),V=Vy({inputs:{input:W},backend:s}),G=Vy({inputs:{input:U},backend:s}),H=Rb({inputs:{input:W},backend:s}),j=Rb({inputs:{input:U},backend:s}),q=Ab({inputs:[V,G],backend:s,attrs:{axis:0}}),K=Ab({inputs:[H,j],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(E),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const Nx={kernelName:zt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,s=m(r.shape),i=r.shape[r.shape.length-1],a=Qy({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),o=Sx(a,!1,n),l=Qy({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}},Rx={kernelName:Bt,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{shape:r,value:s,dtype:i}=n,a=i||A(s),o=S(a,m(r));return function(t,e,n){t.fill(e)}(o,s),e.makeTensorInfo(r,a,o)}},Tx={kernelName:Pt,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,s=n,i=C(r.dtype,m(r.shape)),[a,o,l,u]=r.shape,c=s.data.get(r.dataId).values;for(let t=0;t<a;t++){const e=t*l*o*u;for(let t=0;t<o;t++){const n=t*(l*u);for(let r=0;r<l;r++){const s=r*u;for(let o=0;o<u;o++){const h=[a,t,r,o][2],d=Math.round(l-h),p=e+n+s+o;let f=c[p];d>=0&&d<l&&(f=c[e+n+d*u+o]),i[p]=f}}}}return{dataId:s.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Ax=Ib((t=>Math.floor(t))),Fx=$y(Wt,Ax),Dx={kernelName:Wt,backendName:"cpu",kernelFunc:Fx},_x={kernelName:rn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p}=r;let f=Db({inputs:{x:s,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const t=f;f=Jy({inputs:{a:f,b:a},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=f;f=Py(n,f,p,o),n.disposeIntermediateTensorInfo(t)}return f}},Ox={kernelName:"FusedDepthwiseConv2D",backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p}=r;let f=Gb({inputs:{x:s,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const t=f;f=Jy({inputs:{a:f,b:a},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=f;f=Py(n,f,p,o),n.disposeIntermediateTensorInfo(t)}return f}},Mx={kernelName:qt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,s=m(r.shape),i=r.shape[r.shape.length-1],a=Qy({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),o=Sx(a,!0,n),l=Qy({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}},Lx=Ey(Xt,(t=>Number.isFinite(t)?1:0),"bool"),zx={kernelName:Xt,backendName:"cpu",kernelFunc:Lx},Bx=Ey(Yt,(t=>Math.abs(t)===1/0?1:0),"bool"),Px={kernelName:Yt,backendName:"cpu",kernelFunc:Bx},Wx=Ey(Jt,(t=>Number.isNaN(t)?1:0),"bool"),Ux={kernelName:Jt,backendName:"cpu",kernelFunc:Wx},Vx=Ib((t=>Math.log(t))),Gx=$y(Zt,Vx),Hx={kernelName:Zt,backendName:"cpu",kernelFunc:Gx},jx=Ey(Qt,(t=>Math.log1p(t))),qx={kernelName:Qt,backendName:"cpu",kernelFunc:jx},Kx=Ey(te,(t=>t?0:1),"bool"),Xx={kernelName:te,backendName:"cpu",kernelFunc:Kx};function Yx(t,e,n,r){const s=C(r,m(n));for(let n=0;n<s.length;++n){const r=n*e;let i=t[r];for(let n=0;n<e;++n){const e=t[r+n];e>i&&(i=e)}s[n]=i}return s}function Jx(t,e,n,r,s){const i=e.length,a=m(e),o=_(e),l=_(s),u=C(n,m(s));for(let e=0;e<a;++e){const n=U(e,i,o),s=new Array(n.length);for(let t=0;t<s.length;t++)s[t]=n[r[t]];u[W(s,i,l)]=t[e]}return u}const Zx={kernelName:ne,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:s,keepDims:i}=e,a=n;let o=r.shape;const l=o.length,u=k(s,o);let c=u;const h=As(c,l);let d=a.data.get(r.dataId).values;if(null!=h){const t=new Array(l);for(let e=0;e<t.length;e++)t[e]=o[h[e]];d=Jx(d,o,r.dtype,h,t),c=Ds(c.length,l),o=t}xy(r,"max"),Ts("max",c,l);const[p,f]=Ns(o,c),g=Yx(d,m(f),p,r.dtype),y=a.write(g,p,r.dtype);let b=p;return i&&(b=Rs(p,u)),{dataId:y,shape:b,dtype:r.dtype}}},Qx={kernelName:se,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;xy(s,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;h(Ys(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Ps(s.shape,i,a,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&g(u.inShape,u.outShape))c=Ty({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=_(s.shape),r=bb(t,s.shape,s.dtype,e,u,"max");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},tv={kernelName:ie,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i,output:a}=e,o=i;xy([i,a],"maxPoolBackprop");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=Ps(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=Mr(d.outShape,o.dtype,xb(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=x-1-d.padInfo.top,I=Mr(o.shape,"float32"),C=n.data.get(s.dataId).values,S=Mr(s.shape,"float32",C);for(let t=0;t<d.batchSize;++t)for(let e=0;e<d.inChannels;++e)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const s=n-k,i=r-w;let a=0;for(let n=0;n<x;n+=y){const r=(s+n)/m;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let s=0;s<v;s+=b){const o=(i+s)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const l=x*v-1-f.get(t,r,o,e)===n*v+s?1:0;0!==l&&(a+=S.get(t,r,o,e)*l)}}I.set(a,t,n,r,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},ev={kernelName:oe,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=e,l=n;xy(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=Ps(r.shape,s,i,[1,1],a),[h,d]=function(t,e,n,r,s){const i=bb(t,0,n,_(e),s,"max"),a=xb(t,e,n,s,!0,r);return[i.values,a.values]}(u,r.shape,r.dtype,o,c),p=l.write(h,c.outShape,r.dtype),f=l.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},nv={kernelName:ce,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:i,mode:a}=r;xy(s,"mirrorPad");const o=i.map(((t,e)=>t[0]+s.shape[e]+t[1])),l=i.map((t=>t[0])),u=i.map(((t,e)=>t[0]+s.shape[e])),c="reflect"===a?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,p=_(s.shape),f=m(o),g=o.length,y=_(o),b=C(s.dtype,f);for(let t=0;t<f;t++){let e=U(t,g,y);for(let t=0;t<g;t++)e[t]<l[t]?e[t]=2*l[t]-e[t]-c:e[t]>=u[t]&&(e[t]=2*(u[t]-1)-e[t]+c);e=e.map(((t,e)=>t-l[e]));const n=W(e,d,p);b[t]=h[n]}return{dataId:n.write(b,o,s.dtype),shape:o,dtype:s.dtype}}},rv=fo,sv={kernelName:me,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:o,padToMaxOutputSize:l}=n,u=e;xy(r,"NonMaxSuppressionPadded");const c=u.data.get(r.dataId).values,h=u.data.get(s.dataId).values,{selectedIndices:d,validOutputs:p}=rv(c,h,i,a,o,l);return[d,p]}},iv=mo,av={kernelName:ge,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:o,softNmsSigma:l}=n,u=e;xy(r,"NonMaxSuppressionWithScore");const c=u.data.get(r.dataId).values,h=u.data.get(s.dataId).values,d=i,p=a,f=o,m=l,{selectedIndices:g,selectedScores:y}=iv(c,h,d,p,f,m);return[g,y]}},ov=Fy(((t,e)=>t!==e?1:0)),lv=qy(pe,ov,null,"bool"),uv={kernelName:pe,backendName:"cpu",kernelFunc:lv},cv={kernelName:xe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:i,constantValue:a}=r;xy(s,"pad");const o=i.map(((t,e)=>t[0]+s.shape[e]+t[1])),l=i.map((t=>t[0])),u=n.data.get(s.dataId).values,c=m(s.shape),h=s.shape.length,d=_(s.shape),p=m(o),f=o.length,g=_(o),y=C(s.dtype,p);0!==a&&y.fill(a);for(let t=0;t<c;t++)y[W(U(t,h,d).map(((t,e)=>t+l[e])),f,g)]=u[t];return{dataId:n.write(y,o,s.dtype),shape:o,dtype:s.dtype}}},hv=Ey(ke,(t=>1/t)),dv={kernelName:ke,backendName:"cpu",kernelFunc:hv},pv={kernelName:en,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:i,center:a}=e,o=n,l=C(r.dtype,m(r.shape)),[u,c,h,d]=r.shape,[p,f]=qo(a,c,h),g=Math.sin(s),y=Math.cos(s),b=o.data.get(r.dataId).values;for(let t=0;t<u;t++){const e=t*h*c*d;for(let t=0;t<c;t++){const n=t*(h*d);for(let r=0;r<h;r++){const s=r*d;for(let a=0;a<d;a++){const o=[u,t,r,a],m=o[2],x=o[1];let v=(m-p)*y-(x-f)*g,w=(m-p)*g+(x-f)*y;v=Math.round(v+p),w=Math.round(w+f);let k=i;"number"!=typeof i&&(k=3===a?255:i[a]),v>=0&&v<h&&w>=0&&w<c&&(k=b[e+w*(h*d)+v*d+a]),l[e+n+s+a]=k}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},fv=Ey(Re,(t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2==0?e:e+1})),mv={kernelName:Re,backendName:"cpu",kernelFunc:fv},gv=Ib((t=>1/Math.sqrt(t))),yv=$y(Te,gv),bv={kernelName:Te,backendName:"cpu",kernelFunc:yv},xv=rl,vv=sl,wv=Ey(Fe,(t=>t>=0?vv*t:xv*(Math.exp(t)-1))),kv={kernelName:Fe,backendName:"cpu",kernelFunc:wv},Iv=Ey(Le,(t=>1/(1+Math.exp(-t)))),Cv={kernelName:Le,backendName:"cpu",kernelFunc:Iv},Sv=Ey(Me,(t=>t<0?-1:t>0?1:0)),Ev={kernelName:Me,backendName:"cpu",kernelFunc:Sv},$v=Ey(_e,(t=>Math.sin(t))),Nv={kernelName:_e,backendName:"cpu",kernelFunc:$v},Rv=Ey(Oe,(t=>Math.sinh(t))),Tv={kernelName:Oe,backendName:"cpu",kernelFunc:Rv},Av=Math.log(1.1920928955078125e-7)+2,Fv=Ey(ze,(t=>{const e=t>-Av,n=t<Av,r=Math.exp(t);let s;return s=n?r:e?t:Math.log(1+r),s})),Dv={kernelName:ze,backendName:"cpu",kernelFunc:Fv};function _v(t){const{inputs:e,attrs:n,backend:r}=t,{x:s}=e,{perm:i}=n;xy(s,"transpose");const a=s.shape.length,o=new Array(a);for(let t=0;t<o.length;t++)o[t]=s.shape[i[t]];const l=Jx(r.data.get(s.dataId).values,s.shape,s.dtype,i,o);return{dataId:r.write(l,o,s.dtype),shape:o,dtype:s.dtype}}const Ov={kernelName:Xe,backendName:"cpu",kernelFunc:_v},Mv={kernelName:Pe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:i,paddings:a}=r;xy([s],"spaceToBatchND");const o=m(i),l=[[0,0]];l.push(...a);for(let t=1+i.length;t<s.shape.length;++t)l.push([0,0]);const u=cv.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),c=Ko(u.shape,i,o,!1),h=Xo(c.length,i.length,!1),d=Yo(u.shape,i,o,!1),p=Qy({inputs:{x:u},backend:n,attrs:{shape:c}}),f=_v({inputs:{x:p},backend:n,attrs:{perm:h}}),g=Qy({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}},Lv=Ey(Be,(t=>Math.sqrt(t))),zv={kernelName:Be,backendName:"cpu",kernelFunc:Lv},Bv={kernelName:Ge,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;xy(n,"square");const s=r.data.get(n.dataId).values,i=new Float32Array(s.length);for(let t=0;t<s.length;++t){const e=s[t];i[t]=e*e}return{dataId:r.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},Pv=Fy(((t,e)=>{const n=t-e;return n*n})),Wv=qy(Ve,Pv),Uv={kernelName:Ve,backendName:"cpu",kernelFunc:Wv},Vv=Ey(tn,((t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha})),Gv={kernelName:tn,backendName:"cpu",kernelFunc:Vv},Hv=Ey(je,(t=>Math.tan(t))),jv={kernelName:je,backendName:"cpu",kernelFunc:Hv},qv=Ey(qe,(t=>Math.tanh(t)));function Kv(t,e,n,r){const s=k(e,n)[0],i=[1,n[0],1];for(let t=0;t<s;t++)i[0]*=n[t];i[1]=n[s];for(let t=s+1;t<n.length;t++)i[2]*=n[t];const a={},o=new Int32Array(n[s]),l=new Cn(i,r,t),u=[],c=1===i[0]&&1===i[2];for(let e=0;e<n[s];e++){let n;if(c)n=t[e].toString();else{const t=[];for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)t.push(l.get(n,e,r));n=t.join(",")}if(void 0!==a[n])o[e]=a[n];else{const t=Object.keys(a).length;a[n]=t,o[e]=t,u.push(e)}}const h=i.slice();h[1]=Object.keys(a).length;const d=new Cn(h,r);u.forEach(((t,e)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)d.set(l.get(n,t,r),n,e,r)}));const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const Xv=[rb,ib,ob,ub,Zy,hb,pb,mb,yb,vb,wb,nb,kb,jy,Eb,Nb,Uy,Fb,Ob,Mb,_b,zb,Bb,Lb,Wb,Vb,Hb,jb,qb,Kb,Yb,Xb,Qb,Ry,ox,cx,px,Nx,Rx,Tx,Dx,_x,Ox,Ay,Mx,Tb,zx,Px,Ux,Hx,qx,Xx,Qx,tv,ev,Zx,nv,yx,sv,av,uv,cv,Oy,Gy,dv,Ly,By,tb,pv,mv,bv,kv,Cv,Ev,Nv,Tv,vx,Dv,Mv,zv,Bv,Uv,Gv,Cx,jv,{kernelName:qe,backendName:"cpu",kernelFunc:qv},Ov,{kernelName:Ye,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:i}=e;xy(i,"unique");const a=r.data.get(i.dataId).values,{outputValues:o,outputShape:l,indices:u}=Kv(a,s,i.shape,i.dtype);return[r.makeTensorInfo(l,i.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}}];for(const t of Xv)un(t);const Yv={},Jv={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Zv(t){if(!(t in Yv)){const e=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);return e.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete Yv[t]}),!1),1===t?e.getContext("webgl",Jv)||e.getContext("experimental-webgl",Jv):e.getContext("webgl2",Jv)}(t);if(null===e)return console.log("Could not get context for WebGL version",t),null;Yv[t]=e}const e=Yv[t];return e.isContextLost()?(delete Yv[t],Zv(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Yv[t])}var Qv,tw,ew;function nw(t,e){return[e,t]}function rw(t){const e=m(t);return b(Math.ceil(e/4))}function sw(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function iw(t,e){const n=t;let r,s,i,a,o,l,u,c,h,d;return 2===H().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,i=n.RGBA16F,a=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT):(r=t.RGBA,s=t.RGBA,i=t.RGBA,a=n.RGBA,o=t.RGBA,u=4,c=4,h=null!=e?e.HALF_FLOAT_OES:null,d=t.FLOAT),l=t.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function aw(t,e){const n=e();return H().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+e}}(t,e))}(t),n}function ow(t){return!!(H().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function lw(t,e){return gw(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(Qv||(Qv={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(tw||(tw={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(ew||(ew={}));const uw=/ERROR: [0-9]+:([0-9]+):/g;function cw(t,e){if(aw(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function hw(t,e,n,r,s,i,a){const o=t.getAttribLocation(e,n);return-1!==o&&(aw(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,r))),aw(t,(()=>t.vertexAttribPointer(o,s,t.FLOAT,!1,i,a))),aw(t,(()=>t.enableVertexAttribArray(o))),!0)}function dw(t,e,n,r){aw(t,(()=>function(t,e,n){(function(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(t,n),aw(t,(()=>t.activeTexture(t.TEXTURE0+n))),aw(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}(t,e,r))),aw(t,(()=>t.uniform1i(n,r)))}function pw(t,e,n){aw(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),aw(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function fw(t,e){aw(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),aw(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function mw(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+e}}(t,e))}function gw(t,e,n){const r=aw(t,(()=>e()));if(null==r)throw new Error(n);return r}function yw(t,e=2){return m(t.slice(0,t.length-e))}function bw(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function xw(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[yw(t),...bw(t)]),e}function vw(t){return t%2==0}function ww(t,e){if(g(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(vw(n)&&vw(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&vw(t[0])&&vw(e[0])}let kw,Iw;function Cw(t,e){return null!=t.getExtension(e)}function Sw(t){try{if(null!=Zv(t))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function Ew(t){const e=iw(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const s=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),s}function $w(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&h("complex64"!==t.dtype,(()=>e+" does not support complex64 tensors in the WebGL backend."))}))}const Nw=H();Nw.registerFlag("HAS_WEBGL",(()=>Nw.getNumber("WEBGL_VERSION")>0)),Nw.registerFlag("WEBGL_VERSION",(()=>Sw(2)?2:Sw(1)?1:0)),Nw.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),Nw.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===Nw.get("WEBGL_VERSION"))),Nw.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),Nw.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),Nw.registerFlag("WEBGL_PACK",(()=>Nw.getBool("HAS_WEBGL"))),Nw.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>Nw.getBool("WEBGL_PACK"))),Nw.registerFlag("WEBGL_PACK_CLIP",(()=>Nw.getBool("WEBGL_PACK"))),Nw.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),Nw.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>Nw.getBool("WEBGL_PACK"))),Nw.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>Nw.getBool("WEBGL_PACK"))),Nw.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>Nw.getBool("WEBGL_PACK"))),Nw.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>Nw.getBool("WEBGL_PACK"))),Nw.registerFlag("WEBGL_PACK_REDUCE",(()=>Nw.getBool("WEBGL_PACK"))),Nw.registerFlag("WEBGL_LAZILY_UNPACK",(()=>Nw.getBool("WEBGL_PACK"))),Nw.registerFlag("WEBGL_CONV_IM2COL",(()=>Nw.getBool("WEBGL_PACK"))),Nw.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==kw){const e=Zv(t);kw=e.getParameter(e.MAX_TEXTURE_SIZE)}return kw}(Nw.getNumber("WEBGL_VERSION")))),Nw.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==Iw){const e=Zv(t);Iw=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Iw)}(Nw.getNumber("WEBGL_VERSION")))),Nw.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=Nw.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=Zv(t);return e=Cw(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:Cw(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),Nw.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>Nw.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!function(){if("undefined"!=typeof navigator&&null!=navigator){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}())),Nw.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=Zv(t);if(1===t){if(!Cw(e,"OES_texture_float"))return!1}else if(!Cw(e,"EXT_color_buffer_float"))return!1;return Ew(e)}(Nw.getNumber("WEBGL_VERSION")))),Nw.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!Nw.getBool("WEBGL_FORCE_F16_TEXTURES")&&Nw.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),Nw.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(t){if(0===t)return!1;const e=Zv(t);if(1!==t){if(Cw(e,"EXT_color_buffer_float"))return Ew(e);const t="EXT_color_buffer_half_float";if(Cw(e,t)){const n=e.getExtension(t);return function(t,e){const n=iw(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,s),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(s),i}(e,n)}return!1}return!!Cw(e,"OES_texture_float")&&!!Cw(e,"WEBGL_color_buffer_float")&&Ew(e)}(Nw.getNumber("WEBGL_VERSION")))),Nw.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=Nw.getNumber("WEBGL_VERSION"))&&null!=Zv(t).fenceSync;var t})),Nw.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>Nw.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),Nw.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)}));const{simpleAbsImpl:Rw,addImpl:Tw,ceilImpl:Aw,expImpl:Fw,expm1Impl:Dw,floorImpl:_w,logImpl:Ow,maxImpl:Mw,multiplyImpl:Lw,rsqrtImpl:zw,sliceImpl:Bw,subImpl:Pw,transposeImpl:Ww,uniqueImpl:Uw}=s;class Vw{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>"T"+e));const n=[];this.variableNames.forEach((t=>{n.push(`float v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>"v"+t)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class Gw{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>"T"+e));const n=[];this.variableNames.forEach((t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>"v"+t)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}class Hw{constructor(t,e,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:i}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];const a="max"===e?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${a} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}function jw(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>`${t}.${e}`))}function qw(t,e){return 1===e?[t]:jw(t,e)}function Kw(){let t,e,n,r,s,i,a,o,l,u;return 2===H().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",s="texture",i="outputColor",a="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",s="texture2D",i="gl_FragColor",a="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:s,output:i,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function Xw(t,e,n="index"){const r=_(e);return r.map(((e,s)=>`int ${t[s]} = ${n} / ${e}; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * ${e}`:`index -= ${t[s]} * ${e}`};`)).join("")}function Yw(t){const e=_(t).map((t=>t.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}const Jw="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:Zw}=r;function Qw(t,e,n,r){const s=[];t.forEach((t=>{const e=m(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?s.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(s.push(`uniform sampler2D ${t.name};`),s.push(`uniform int offset${t.name};`))}));const i=s.join("\n"),a=t.map((t=>function(t,e,n=!1){let r="";r+=n?ek(t):tk(t);const s=t.shapeInfo.logicalShape,i=e.logicalShape;return s.length<=i.length&&(r+=n?function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=t.shapeInfo.logicalShape.length,a=e.logicalShape.length,o=Zw(t.shapeInfo.logicalShape,e.logicalShape),l=lk(a),u=a-i;let c;const h=["x","y","z","w","u","v"];c=0===i?"":a<2&&o.length>=1?"coords = 0;":o.map((t=>`coords.${h[t+u]} = 0;`)).join("\n");let d="";d=a<2&&i>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>"coords."+h[e+u])).join(", ");let p="return outputValue;";const f=1===m(t.shapeInfo.logicalShape),g=1===m(e.logicalShape);if(1!==i||f||g){if(f&&!g)p=1===a?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const t=i-2,e=i-1;o.indexOf(t)>-1&&o.indexOf(e)>-1?p="return vec4(outputValue.x);":o.indexOf(t)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(e)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(t,e):function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=e.texShape,a=t.shapeInfo.texShape,o=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&o===l&&null==t.shapeInfo.flatOffset&&g(a,i))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=lk(l),c=Zw(t.shapeInfo.logicalShape,e.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((t=>`coords.${p[t+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>"coords."+p[e+h])).join(", "),`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(t,e)),r}(t,e,r))).join("\n"),o=e.texShape,l=Kw(),u=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let c,h,d=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${nk}\n    ${rk}\n    ${sk}\n  `}(l);return e.isPacked?(c=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(g(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),s=r*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),s=r*Math.ceil(t[t.length-2]/2);let i=s,a="",o="b, r, c";for(let e=2;e<t.length-1;e++)i*=t[t.length-e-1],a=`\n      int b${e} = index / ${i};\n      index -= b${e} * ${i};\n    `+a,o=`b${e}, `+o;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${a}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${t.length}(${o});\n    }\n  `}(t,e)}}(e.logicalShape,o),h=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(l)):(c=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=e)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(t,e){return g(t,e)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `:1===t[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=Xw(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(t,e);case 4:return function(t,e){const n=Xw(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e);case 5:return function(t,e){const n=Xw(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=Xw(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(t.length+"-D output sampling is not yet supported")}var n}(e.logicalShape,o),h=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),r&&(d+=ik),[d,u,h,i,c,a,n].join("\n")}function tk(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[r,s]=t.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[i,a]=t.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${i}, ${a}, ${ak(e)});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${ok(t)}\n      }\n    `;const r=t.shapeInfo.texShape,s=r[0],i=r[1];if(1===i&&1===s)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const a=ak(e);return 1===i?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${s}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `:1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${a});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape;if(null!=s&&g(e,s)){const t=s[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${t}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:i,keptDims:a}=I(e),o=i;if(o.length<e.length){const e=["row","col"];return`\n      ${tk(uk(t,o))}\n      float ${r}(int row, int col) {\n        return ${r}(${ck(e,a)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${ok(t)}\n      }\n    `;const l=s[0],u=s[1],c=ak(n);return 1===u?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===l?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${l}, ${u}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[1]*e[2],i=e[2],{newShape:a,keptDims:o}=I(e),l=a;if(l.length<e.length){const e=["row","col","depth"];return`\n        ${tk(uk(t,l))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${ck(e,o)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${ok(t)}\n      }\n    `;const u=t.shapeInfo.texShape,c=u[0],h=u[1],d=t.shapeInfo.flatOffset;if(h===s&&null==d)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===i&&null==d)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${ak(n)};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[3],i=e[2]*s,a=e[1]*i,{newShape:o,keptDims:l}=I(e);if(o.length<e.length){const e=["row","col","depth","depth2"];return`\n      ${tk(uk(t,o))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${ck(e,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${a}, ${i}, ${s}, 1)));\n        ${ok(t)}\n      }\n    `;const u=t.shapeInfo.flatOffset,c=t.shapeInfo.texShape,h=c[0],d=c[1];if(d===a&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===s&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${a} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${d}, index + ${ak(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[4],i=e[3]*s,a=e[2]*i,o=e[1]*a,{newShape:l,keptDims:u}=I(e);if(l.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${tk(uk(t,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${ck(e,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${a}, ${i}, ${s})) +\n          depth3;\n        ${ok(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${a}, ${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} + depth * ${i} +\n          depth2 * ${s} + depth3 + ${ak(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:i}=I(e);if(s.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${tk(uk(t,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${ck(e,i)});\n      }\n    `}const a=e[5],o=e[4]*a,l=e[3]*o,u=e[2]*l,c=e[1]*u;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${a}, 1)));\n        ${ok(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${a})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${a} + depth4 + ${ak(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(e.length+"-D input sampling is not yet supported")}}function ek(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name;return`\n    vec4 ${"get"+e.charAt(0).toUpperCase()+e.slice(1)}() {\n      return ${Kw().texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],i=Kw();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${i.texture2D}(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,i=s[0],a=s[1],o=Kw();if(null!=s&&g(e,s))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(e[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===e[0]){const n=[1,2],s=["b","row","col"];return`\n        ${ek(uk(t,e.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${ck(s,n)});\n        }\n      `}const a=i[0],o=i[1],l=Math.ceil(e[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${a}, ${o}, ${l*Math.ceil(e[1]/2)}, ${l}, b, row, col);\n      return ${Kw().texture2D}(${n}, uv);\n    }\n  `}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=t.shapeInfo.texShape,a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],o=a[0],l=a[1],u=Math.ceil(e[n-1]/2);let c=u*Math.ceil(e[n-2]/2),h="int b, int row, int col",d=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let t=2;t<n-1;t++)h=`int b${t}, `+h,c*=e[n-t-1],d=`b${t} * ${c} + `+d;return`\n    vec4 ${s}(${h}) {\n      int index = ${d};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});\n      return ${Kw().texture2D}(${r}, uv);\n    }\n  `}(t)}}const nk="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",rk="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",sk="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",ik="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function ak(t){return"offset"+t}function ok(t){const e=t.name,n=m(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function lk(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function uk(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function ck(t,e){return e.map((e=>t[e])).join(", ")}class hk{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,h(t.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=t[t.length-1],i=Math.ceil(s/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,o=a.length,l=lk(o),u=qw("coords",o);let c,d;if(1===i){d=o+1;const t=lk(d);c=`\n        ${t} sourceLocR = ${t}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${t} sourceLocG = ${t}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${t} sourceLocA = ${t}(${u.join()}, 0);\n        --${u[o-1]};\n        ${t} sourceLocB = ${t}(${u.join()}, 0);\n        --${u[o-2]};`}else d=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],m=p.map((t=>"int "+t)),g=qw("sourceLocR",d-1).concat("inIdx.r"),y=qw("sourceLocG",d-1).concat("inIdx.g"),b=qw("sourceLocB",d-1).concat("inIdx.b"),x=qw("sourceLocA",d-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,k=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,I=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${a[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${a[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}class dk{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,i=t.dilationHeight,a=t.dilationWidth,o=t.effectiveFilterHeight,l=t.effectiveFilterWidth,u=o-1-t.padInfo.top,c=l-1-t.padInfo.left,h=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${a}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class pk{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=c-1-t.padInfo.front,f=h-1-t.padInfo.top,m=d-1-t.padInfo.left,g=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const fk="return (a < 0.) ? b * a : a;";class mk{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=Ci(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const gk="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";class yk{constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ci(e,n);const s=this.outputShape.length;let i="";if(r)if(0===s||1===m(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${lk(s)} coords = getOutputCoords();\n        `,1===s)i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=qw("coords",s);i+=`\n            bool nextRowOutOfBounds =\n              (${t[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${t[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}class bk{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class xk{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class vk{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}class wk{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,i="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${i}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class kk{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,i="channelsLast"===t.dataFormat,a=e-1-t.padInfo.top,o=n-1-t.padInfo.left,l=i?1:2,u=i?2:3,c=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ik{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.padInfo.front,i=t.padInfo.top,a=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${s};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${a};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ck{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=e-1-t.padInfo.front,l=n-1-t.padInfo.top,u=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Sk{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ek{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,i=e-1-t.padInfo.top,a=n-1-t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $k{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.padInfo.top,i=t.padInfo.left,a=t.strideHeight,o=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,c=t.filterHeight,h=t.filterWidth,d=4*Math.floor(t.inChannels/4),p=t.inChannels%4,f="channelsLast"===t.dataFormat,m=f?1:2,g=f?2:3,y=f?3:1;let b="",x="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const v=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${g}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${c}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${u};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${f}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===p}) {\n\n              if (${f}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===p}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===p}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${x}\n        setOutput(result);\n      }\n    `}}class Nk{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.filterDepth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${i}, ${a});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Rk{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.inHeight,i=t.inWidth,a=t.padInfo.top,o=t.padInfo.left,l=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,p=t.filterWidth,f=t.outChannels/t.inChannels;let m="",g="";n&&(m=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,g="result = activation(result);");const y=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${m}\n\n      const ivec2 strides = ivec2(${l}, ${u});\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${f};\n        int q = d2 - d1 * ${f};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${g}\n        setOutput(result);\n      }\n    `}}class Tk{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const s=t.inHeight,i=t.inWidth,a=t.padInfo.top,o=t.padInfo.left,l=t.strideHeight,u=t.strideWidth,h=t.dilationHeight,d=t.dilationWidth,p=t.filterHeight,f=t.filterWidth,m=f;let g="int xR; int xC; int xCOffset;";for(let t=0;t<p;t++)for(let e=0;e<f;e++)g+=`\n          vec4 xTexelR${t}C${2*e} = vec4(0.);\n          vec4 wR${t}C${e} = vec4(0.);\n          vec4 xR${t}C${e} = vec4(0.);`;for(let t=0;t<p;t++)for(let e=0;e<m;e++){const n=2*e;if(g+=`\n          xR = xRCorner + ${t*h};\n          xC = xCCorner + ${n*d};\n        `,1===u){if(n<f&&(g+=o%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    xTexelR${t}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${t}C${n} = vec4(previous.zw, xTexelR${t}C${n}.xy);\n                } else {\n                  xR${t}C${n} = vec4(0, 0, xTexelR${t}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${s} && xC >= 0 && xC < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xR${t}C${n} = xTexelR${t}C${n};\n              `,n+1<f)){const e=o%2==0?c(d):d;d%2==0&&o%2==1||d%2!=0&&o%2!=1?(g+=`\n                  xCOffset = xC + ${o%2} + ${e};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,d>1&&(g+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${s} &&\n                      xCOffset >= 0 && xCOffset < ${i}) {\n                      xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${t}C${n} = vec4(0.);\n                    }\n                  `),g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.xy);\n                `):g+=`\n                  xCOffset = xC + ${e};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${t}C${n+1} = xTexelR${t}C${n+2};\n                `}}else n<f&&(g+=`\n              if(xR >= 0 && xR < ${s}) {\n            `,o%2==1?(g+=`\n                xCOffset = xC + 1 - ${u};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${i}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n              `,n+1<f&&(g+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${u};\n                  if(xCOffset >= 0 && xCOffset < ${i}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${t}C${n+1} = vec4(xTexelR${t}C${n+2}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${u};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.xy, xTexelR${t}C${n+2}.xy);\n              `,n+1<f&&(g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n                `)),g+="}");n<f&&(g+=`\n            vec4 wTexelR${t}C${n} = getW(${t}, ${n}, d1, q);\n            wR${t}C${n} = vec4(wTexelR${t}C${n}.xz, wTexelR${t}C${n}.xz);\n          `,n+1<f&&(g+=`\n              vec4 wTexelR${t}C${n+1} = getW(${t}, ${n+1}, d1, q);\n              wR${t}C${n+1} =\n                vec4(wTexelR${t}C${n+1}.xz, wTexelR${t}C${n+1}.xz);`))}for(let t=0;t<p;t++)for(let e=0;e<f;e++)g+=`dotProd += xR${t}C${e} * wR${t}C${e};`;let y="",b="";n&&(y=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,b="result = activation(result);");const x=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${l}, ${u});\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${g}\n\n        vec4 result = dotProd;\n        ${x}\n        ${b}\n        setOutput(result);\n      }\n    `}}class Ak{constructor(t,e,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,o,l]=t,[u]=e,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[a-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(a-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+p],[b,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+f];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}class Fk{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const r=t.length,s=e?"0.0":`getX(${Dk(r,"coords")})`,i=t[t.length-1];let a="",o="";e?(a=n?"end != "+(i-1):"end != 0",o=n?"end + 1":"end - 1"):(a=n?"end + pow2 < "+i:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${lk(r)} coords = getOutputCoords();\n        int end = ${_k(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${a}) {\n          int idx = ${o};\n          ${_k(r,"coords")} = idx;\n          val += getX(${Dk(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function Dk(t,e){if(1===t)return""+e;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function _k(t,e){if(1===t)return""+e;if(2===t)return e+".y";if(3===t)return e+".z";if(4===t)return e+".w";throw Error(`Cumulative sum for rank ${t} is not yet supported`)}class Ok{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Qv.DENSE;const e=rw(t),n=Kw();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${Xw(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class Mk{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Qv.DENSE;const e=rw(t),n=Kw();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${Xw(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class Lk{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}class zk{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}class Bk{constructor(t){this.variableNames=["A"],this.outTexUsage=tw.DOWNLOAD;const e=Kw();this.outputShape=t,this.userCode=`\n      ${Jw}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class Pk{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=tw.DOWNLOAD;const e=Kw();this.outputShape=t,this.userCode=`\n      ${Jw}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class Wk{constructor(t,e,n=!1){this.variableNames=["A"];const r=Kw(),[s,i]=e;this.outputShape=t;let a="result";n&&(a="floor(result * 255. + 0.5)"),this.userCode=`\n      ${Yw(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${i};\n        int c = imod(flatIndex, ${i});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${i}.0, ${s}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}}class Uk{constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=Kw(),[s,i]=e;this.outputShape=t;let a="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let e=0;e<=1;e++)for(let n=0;n<=1;n++){const o=2*e+n;a+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${t[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${e} < ${t[1]}) {\n              localCoords[1] += ${e};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${i};\n              c = imod(flatIndex, ${i});\n              uv = (vec2(c, r) + halfCR) / vec2(${i}.0, ${s}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${Yw(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${a}\n\n        ${r.output} = ${o};\n      }\n    `}}class Vk{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}class Gk{constructor(t,e,n){this.variableNames=["A","indices"];const r=t.slice();r[n]=e,this.outputShape=r,this.rank=r.length;const s=lk(this.rank),i=function(t,e){const n=t.length;if(n>4)throw Error(`Gather for rank ${n} is not yet supported`);if(1===n)return"int(getIndices(resRC))";const r=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let n=0;n<t.length;n++)n===e?s.push(`int(getIndices(${r[n]}))`):s.push(""+r[n]);return s.join()}(t,n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${i}));\n      }\n    `}}class Hk{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const r=lk(e.length),s=lk(n.length),i=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${i};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}function jk(t,e,n,r,s,i){!function(t,e){const n=H().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const a=function(t){return gw(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),o=t.TEXTURE_2D;return aw(t,(()=>t.bindTexture(o,a))),aw(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),aw(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),aw(t,(()=>t.texParameteri(o,t.TEXTURE_MIN_FILTER,t.NEAREST))),aw(t,(()=>t.texParameteri(o,t.TEXTURE_MAG_FILTER,t.NEAREST))),aw(t,(()=>t.texImage2D(o,0,r,e,n,0,s,i,null))),aw(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),a}function qk(t){return t.internalFormatFloat}function Kk(t){return t.internalFormatHalfFloat}function Xk(t){return t.downloadTextureFormat}function Yk(t){return t.internalFormatPackedFloat}function Jk(t){return t.internalFormatPackedHalfFloat}class Zk{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=H().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){Yv[t]=e}(e,t)):this.gl=Zv(e);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===H().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=lw(this.gl,t),Cw(this.gl,e))this.textureHalfFloatExtension=lw(this.gl,e);else if(H().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Cw(this.gl,r))this.colorBufferHalfFloatExtension=lw(this.gl,r);else if(H().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Cw(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Cw(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(t){return function(t,e){const n=gw(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return aw(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),aw(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(t){return function(t,e){const n=gw(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return aw(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),aw(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(t){return gw(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=iw(this.gl,this.textureHalfFloatExtension)}get debug(){return H().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;aw(t,(()=>t.finish())),aw(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),aw(t,(()=>t.deleteFramebuffer(this.framebuffer))),aw(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),aw(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),aw(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=nw(e,n);return jk(t,s,i,qk(r),r.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=nw(e,n);return jk(t,s,i,Kk(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=nw(e,n);return jk(t,s,i,Xk(r),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){aw(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?aw(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):aw(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),aw(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),function(t,e,n,r,s,i){let a,o,l;aw(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),s instanceof Uint8Array?(a=new Uint8Array(n*r*4),o=t.UNSIGNED_BYTE,l=t.RGBA):(a=new Float32Array(n*r*4),o=t.FLOAT,l=i.internalFormatPackedFloat),a.set(s),aw(t,(()=>t.texImage2D(t.TEXTURE_2D,0,l,n,r,0,t.RGBA,o,a))),aw(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=sw(e,n);return jk(t,s,i,Jk(r),t.RGBA,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=sw(e,n);return jk(t,s,i,Yk(r),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(fw(this.gl,this.framebuffer),this.outputTexture=null),aw(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,r){const[s,i]=nw(e,n),a=new Uint8Array(e*n*4);return aw(t,(()=>t.readPixels(0,0,s,i,r.downloadTextureFormat,t.UNSIGNED_BYTE,a))),new Float32Array(a.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,r,s,i){return function(t,e,n,r,s,i,a,o){const l=t,u=new Float32Array(function(t,e){const[n,r]=sw(t,e);return n*r*4}(i,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,t,0,0,0,s,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n,r){const s=t.createBuffer();aw(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,s)));const i=16*e*n;return aw(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,i,t.STREAM_READ))),aw(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),aw(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),s}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(H().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(s,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=s}else H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const r=new Float32Array(e*n*4);return aw(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r))),r}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=function(t,e){const n=gw(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(aw(t,(()=>t.shaderSource(n,e))),aw(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=uw.exec(e);if(null==n)return console.log("Couldn't parse line number in error: "+e),void console.log(t);const r=+n[1],s=t.split("\n"),i=s.length.toString().length+2,a=s.map(((t,e)=>x((e+1).toString(),i)+t));let o=0;for(let t=0;t<a.length;t++)o=Math.max(a[t].length,o);const l=a.slice(0,r-1),u=a.slice(r-1,r),c=a.slice(r);console.log(l.join("\n")),console.log(e.split("\n")[0]),console.log("%c "+x(u[0],o),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e,t),r=function(t){const e=Kw();return function(t,e){const n=gw(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(aw(t,(()=>t.shaderSource(n,e))),aw(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e),s=function(t){return gw(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);return aw(e,(()=>e.attachShader(s,r))),aw(e,(()=>e.attachShader(s,n))),function(t,e){if(aw(t,(()=>t.linkProgram(e))),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,s),this.debug&&cw(e,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=function(t,e,n){return aw(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),hw(t,e,"clipSpacePos",n,3,20,0)&&hw(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),s}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&aw(this.gl,(()=>this.gl.deleteProgram(t)))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&cw(this.gl,this.program),aw(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return gw(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),aw(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),dw(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,s]=sw(e,n);this.setOutputMatrixTextureDriver(t,r,s)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&cw(this.gl,this.program),mw(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),aw(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),aw(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=lw(this.gl,2===H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await v((()=>this.disposed||this.isQueryAvailable(t,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||v((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),pw(this.gl,t,this.framebuffer),this.debug&&mw(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(pw(this.gl,this.outputTexture,this.framebuffer),this.debug&&mw(this.gl)):fw(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;pw(r,t,this.framebuffer),this.debug&&mw(r),this.outputTexture=t,aw(r,(()=>r.viewport(0,0,e,n))),aw(r,(()=>r.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),aw(this.gl,(()=>this.gl.scissor(t,e,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function Qk(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach(((t,n)=>{const r=t.logicalShape,s=e[n],i=s.shape;if(!g(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(t.isUniform&&s.isUniform)return;const a=t.texShape,o=s.isUniform?null:s.texData.texShape;if(!g(a,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${o} must match`)}))}class tI{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:r,inChannels:s,strideWidth:i,strideHeight:a,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:c,dataFormat:h}=n,{left:d,top:p}=o,f=s*r,m=Kw(),g="channelsLast"===h,y=g?0:1,b=g?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${a} - ${p};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${e[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${i}. - ${d}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${s}.));\n\n              if(d1 < ${e[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${s}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}class eI{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[];const i=e,a=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class nI{constructor(t,e,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}class rI{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=e,a=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}class sI{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,s=t.effectiveFilterHeight,i=t.effectiveFilterWidth,a=s-1-t.padInfo.top,o=i-1-t.padInfo.left,l=s*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class iI{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.dilationDepth,i=t.dilationHeight,a=t.dilationWidth,o=t.effectiveFilterDepth,l=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=o-1-t.padInfo.front,h=l-1-t.padInfo.top,d=u-1-t.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${a}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class aI{constructor(t,e,n,r=!1,s=!1,i=!1,a=null,o=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const l=r?t[1]:t[2],u=Math.ceil(l/2),c=r?"i * 2, rc.y":"rc.y, i * 2",h=s?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],p=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",m="";a&&(f=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,m="result = activation(result);");const g=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights");let y="rc.x",b="rc.x";t[0]<e[0]?y=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(b=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${f}\n\n      const float sharedDimension = ${u}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${u}; i++) {\n          int batchA = ${y};\n          int batchB = ${b};\n          vec4 a = getMatrixA(batchA, ${c});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${p[0]});\n          result += (${d[1]} * ${p[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class oI{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}class lI{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}class uI{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=qw("rc",e),r=lk(e),s=function(t,e,n){if(1===t)return"rc > "+e[0];let r="";for(let s=t-2;s<t;s++)r+=`${n[s]} >= ${e[s]}`,s<t-1&&(r+="||");return r}(e,t,n),i=function(t,e,n,r){if(1===t)return"";const s=r.slice(-2);return`\n    int r = ${s[0]};\n    int c = ${s[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}(e,t[t.length-1],t[t.length-2],n),a=function(t,e){const n=t.length,r=function(t,e){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let i=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let n=2;n<t;n++)i=e[e.length-1-n]+","+i;n.push(i)}return n}(n,e);return 1===n?`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(t,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${i}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}}class cI{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=lk(r),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class hI{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=lk(r),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=qw("rc",r),l=qw("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[s+" rc = outputLoc;",`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let t=0,e=1===r?2:4;t<e;t++)p+=`\n        ${h[t]}\n        if (${d}) {\n          result[${t}] = float(${n});\n        } else {\n          ${s} source = rc - start;\n          result[${t}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}class dI{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,a=t.strideHeight,o=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,g=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(b="avgValue / count");const x=4*Math.floor(i/4),v=i%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class pI{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,a=t.strideDepth,o=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,c=t.dilationHeight,h=t.dilationWidth,d=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,g=t.padInfo.top,y=t.padInfo.left;this.outputShape=t.outShape;const b="avg"===e;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(v="avgValue / count");const w=4*Math.floor(i/4),k=i%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}class fI{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=t;this.outputShape=[r,i];let a="0.0",o="";"prod"===e?a="1.0":"min"===e?(a="1.0 / 1e-20",o="min"):"max"===e&&(a="-1.0 / 1e-20",o="max");let l=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?l="sumValue":"prod"===e?l="prodValue":"all"===e?l="allValue":"any"===e&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,d="vec4";"all"===e?(a="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===e&&(a="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}class mI{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),t>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${t>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${t}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${t>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=e,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${Xw(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${Yw(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class gI{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,s]=e.shape,[,i,a]=t.shape,o=[n&&i>1?r-1:r,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class yI{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[s,i,a,o]=t;this.outputShape=[s,e,n,o];const l=[r&&e>1?i-1:i,r&&n>1?a-1:a],u=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/u[0]},\n          ${l[1]/u[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${a}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class bI{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,a,o]=t;this.outputShape=[s,e,n,o];const l=[r&&e>1?i-1:i,r&&n>1?a-1:a],u=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/u[0]},\n          ${l[1]/u[1]},\n          ${l[1]/u[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${a}.0,\n                                     ${a}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${o-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}class xI{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,s]=e.shape,[,i,a]=t.shape,o=[n&&i>1?r-1:r,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class vI{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[s,i,a,o]=t;this.outputShape=[s,e,n,o];const l=[r&&e>1?i-1:i,r&&n>1?a-1:a],u=[r&&e>1?e-1:e,r&&n>1?n-1:n],c=r?"0.5":"0.0";this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/u[0]},\n          ${l[1]/u[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${a}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class wI{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map(((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=lk(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class kI{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=qw("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,a=lk(n);function o(n){const r=t.map(((r,s)=>function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:""+r[n]}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return o(t)}(r.slice())};\n          if(${s}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",o(t)}(r.slice())};\n          }\n          if(${i}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}class II{constructor(t,e,n,r,s,i,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const o=lk(s.length),l=lk(i.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=e>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}class CI{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,s=t.inSize,i=t.numSegments,a=i*Math.ceil(s/n);this.outputShape=[r,a];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class SI{constructor(t,e,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],a=[];for(let r=0;r<e.length;r++)a.push(""+n[r]),r<t&&i.push(""+n[r]);r=i.join(),s=a.join()}const i=lk(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}class EI{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=lk(this.rank),n=`uniform int start[${this.rank}];`,r=function(t){if(1===t)return"sourceLoc";if(t<=6)return $I.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let s;s=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map(((t,e)=>`sourceLoc.${$I[e]} = start[${e}] + coords.${$I[e]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const $I=["x","y","z","w","u","v"];class NI{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=lk(this.rank),n=qw("coords",this.rank),r=qw("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${s})`,a=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${i};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map(((t,e)=>`start[${e}]`)).join()});`:t.map(((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${a}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}class RI{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=lk(n.length),i=lk(n.length);let a="";if(1===r)a="coords * strides + begin";else{let t=0;a=n.map(((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${t});\n      ${s} strides = ${s}(${e});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}class TI{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=FI(e,n),s=DI(t,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const i=AI(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const t=this.freeTextures[s].shift();return this.usedTextures[s].push(t),t}let a;return r===ew.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===ew.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===ew.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===ew.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===ew.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const s=FI(n,r),i=DI(e,s,r);i in this.freeTextures||(this.freeTextures[i]=[]);const a=AI(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=H().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=a):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const l=this.usedTextures[i],u=l.indexOf(t);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function AI(t,e,n,r,s){const i=function(t,e){switch(t){case ew.PACKED_2X2_FLOAT32:return Yk(e);case ew.PACKED_2X2_FLOAT16:return Jk(e);case ew.UNPACKED_FLOAT32:return qk(e);case ew.UNPACKED_FLOAT16:return Kk(e);case ew.PACKED_4X1_UNSIGNED_BYTE:return Xk(e);default:throw new Error("Unknown physical texture type "+t)}}(e,r);let a;if(s){const[e,n]=sw(t[0],t[1]);a=e*n}else{const[e,n]=nw(t[0],t[1]);a=e*n}return a*function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error("Unknown internal format "+e)}(n,i)}function FI(t,e){if(t===tw.UPLOAD)return ew.PACKED_2X2_FLOAT32;if(t===tw.RENDER||null==t)return function(t){return H().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?ew.PACKED_2X2_FLOAT32:ew.UNPACKED_FLOAT32:t?ew.PACKED_2X2_FLOAT16:ew.UNPACKED_FLOAT16}(e);if(t===tw.DOWNLOAD||t===tw.PIXELS)return ew.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+t)}function DI(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class _I{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[r]*e[r];this.outputShape=n,this.rank=n.length;const r=lk(this.rank),s=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let e=0;e<t.length;e++)r.push(`imod(${n[e]}, ${t[e]})`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}class OI{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const MI="return abs(x);",LI="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",zI="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",BI="return (x >= 0.0) ? x : (exp(x) - 1.0);",PI=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${rl};\n  float scale = ${sl};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,WI="return -x;",UI="return ceil(x);",VI="return floor(x);",GI="return exp(x);",HI="return exp(x) - 1.0;",jI=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${il};\n  float a1 = ${al};\n  float a2 = ${ol};\n  float a3 = ${ll};\n  float a4 = ${ul};\n  float a5 = ${cl};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,qI="return x;",KI="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",XI="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",YI="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n";class JI{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class ZI{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=qw("rc",e),r=lk(e),s=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),i=n.slice(-2),a=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${a}));\n      }\n    `}}const{segment_util:QI}=r,tC=Cl,eC=Sl,nC=El,rC=$l,sC={};function iC(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?KI:LI;if("elu"===t)return e?YI:BI;if("relu6"===t)return e?XI:zI;if("prelu"===t)return e?gk:fk;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class aC extends a{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!H().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=Zv(H().getNumber("WEBGL_VERSION"));this.binaryCache=((e=H().getNumber("WEBGL_VERSION"))in sC||(sC[e]={}),sC[e]),this.gpgpu=new Zk(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new TI(this.gpgpu),this.numMBBeforeWarning=null==H().global.screen?1024:H().global.screen.height*H().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new i(this,fs())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if((H().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||H().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:tw.UPLOAD,refCount:1,complexParentRefCount:0}),r}incRef(t){this.texData.get(t).refCount++}decRef(t){this.texData.has(t)&&this.texData.get(t).refCount--}move(t,e,n,r){if(H().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:tw.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensorInfos:s,slice:i,shape:a,isPacked:o}=e;if(null!=i){let e;e=o?new JI(a,qI):new OI(a,qI);const n=this.runWebGLProgram(e,[{dataId:t,shape:a,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=wn()),c="complex64"===r?pl(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(t),l&&(this.downloadWaitMs+=wn()-u),this.convertAndCacheOnCPU(t,c)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:r,slice:s,dtype:i,complexTensorInfos:a,isPacked:o}=e;if(null!=s){let e;e=o?new JI(r,qI):new OI(r,qI);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:i}],i),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if(!H().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===H().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==i&&H().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(t);const e=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(e.texture,...rw(r))}if(this.pendingRead.set(t,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const t=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]);u=pl(t[0],t[1])}else if(null==c)u=this.getValuesFromTexture(t);else{const t=m(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,t)}null!=l&&this.disposeIntermediateTensorInfo(l);const h=this.convertAndCacheOnCPU(t,u),d=this.pendingRead.get(t);return this.pendingRead.delete(t),d.forEach((t=>t(h))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t),this.pendingDeletes--),h}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!ow(n)){if(H().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),s=m(e);if(H().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...rw(e)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),i}const i=H().getBool("WEBGL_PACK")&&!0===r,a=i?xw(e):e,o=i?new Pk(a):new Bk(a),l=this.runWebGLProgram(o,[{shape:a,dtype:n,dataId:t}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),c}async time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const s=f(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),i=f(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(s);a.kernelMs=function(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}(t),a.getExtraProfileInfo=()=>t.map(((t,e)=>({name:i[e],ms:t}))).map((t=>`${t.name}: ${t.ms}`)).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:wn(),endMs:null}}endTimer(t){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=wn(),t)}async getQueryTime(t){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t){if(this.pendingDisposal.has(t))return;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(!this.texData.has(t))return;if(this.texData.get(t).complexParentRefCount>0)return void this.texData.get(t).refCount--;this.releaseGPUData(t);const{complexTensorInfos:e}=this.texData.get(t);null!=e&&(this.texData.get(e.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.real),this.texData.get(e.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.imag)),this.texData.delete(t)}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:s,isPacked:i,slice:a}=this.texData.get(t),o=a&&a.origDataId||t,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,s,i)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return H().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=fs().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=128){const n=this.getCPUBackend();return this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&t.every((t=>null==this.texData.get(t.dataId).texture&&m(t.shape)<e))}getGPGPUContext(){return this.gpgpu}slice(t,e,n){if(this.shouldExecuteOnCPU([t])){const r=Bw(this.texData.get(t.dataId).values,e,n,t.shape,t.dtype);return this.makeOutput(n,t.dtype,r)}if(0===m(n))return rr([],n,t.dtype);const{isPacked:r}=this.texData.get(t.dataId),s=os(t.shape,e,n);if(r||!s){const r=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new NI(n):new EI(n),s=r.getCustomSetupFunc(e);return this.compileAndRun(r,[t],null,s)}return this.uploadToGPU(t.dataId),this.shallowSlice(t,e,n)}shallowSlice(t,e,n){const r=this.texData.get(t.dataId),s=this.makeOutput(n,t.dtype),i=this.texData.get(s.dataId);Object.assign(i,r),i.shape=n,i.dtype=t.dtype;let a=ls(e,t.strides);r.slice&&(a+=r.slice.flatOffset),i.slice={flatOffset:a,origDataId:r.slice&&r.slice.origDataId||t.dataId};const o=this.dataRefCount.get(i.slice.origDataId)||1;return this.dataRefCount.set(i.slice.origDataId,o+1),s}stridedSlice(t,e,n,r){const s=this.tryRunOnCpuOrThrow([t],(()=>this.cpuBackend.stridedSlice(t,e,n,r)));if(s)return s;const i=Jr(e,n,r);if(i.some((t=>0===t)))return rr([],i);const a=new RI(e,r,i);return this.compileAndRun(a,[t])}reverse(t,e){const n=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new kI(t.shape,e):new wI(t.shape,e);return this.compileAndRun(n,[t])}neg(t){const e=this.tryRunOnCpuOrThrow([t],(()=>this.cpuBackend.neg(t)));if(e)return e;if(H().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,WI,t.dtype);const n=new OI(t.shape,WI);return this.compileAndRun(n,[t])}batchMatMul(t,e,n,r){const s=n?t.shape[2]:t.shape[1],i=r?e.shape[1]:e.shape[2],a=n?t.shape[1]:t.shape[2],o=Math.max(t.shape[0],e.shape[0]);if((1===s||1===i)&&a>1e3){n&&(t=Os(t,[0,2,1])),r&&(e=Os(e,[0,2,1]));const s=1===i?t:t.as3D(o,a,1),l=1===i?2:1,u=1===i?e.as3D(o,1,a):e;return Wi(s,u).sum(l,!0)}const l=Mn(t.dtype,e.dtype),u=new aI(t.shape,e.shape,[o,s,i],n,r);return this.compileAndRun(u,[t,e],l)}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:s,activation:i,preluActivationWeights:a}){const o=n?t.shape[2]:t.shape[1],l=r?e.shape[1]:e.shape[2],u=Math.max(t.shape[0],e.shape[0]),c=Mn(t.dtype,e.dtype),h=null!=s,d=null!=a,p=i?iC(i,!0):null,f=new aI(t.shape,e.shape,[u,o,l],n,r,h,p,d),m=[t,e];return s&&m.push(s),a&&m.push(a),this.compileAndRun(f,m,c)}localResponseNormalization4D(t,e,n,r,s){const i=H().getBool("WEBGL_PACK_NORMALIZATION")?new rI(t.shape,e,n,r,s):new eI(t.shape,e,n,r,s);return this.compileAndRun(i,[t])}LRNGrad(t,e,n,r,s,i,a){const o=new nI(e.shape,r,s,i,a);return this.compileAndRun(o,[e,n,t])}tile(t,e){if("string"===t.dtype){const n=this.readSync(t.dataId).map((t=>In(t))),r=Mr(t.shape,t.dtype,n);return eC(r,e)}const n=new _I(t.shape,e);return this.compileAndRun(n,[t])}pad(t,e,n){const r=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new hI(t.shape,e,n):new cI(t.shape,e,n);return this.compileAndRun(r,[t])}gather(t,e,n){const r=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.gather(t,e,n)));if(r)return r;const s=new Gk(t.shape,e.size,n);return this.compileAndRun(s,[t,e])}batchToSpaceND(t,e,n){h(t.rank<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const r=e.reduce(((t,e)=>t*e)),s=Ko(t.shape,e,r),i=Xo(s.length,e.length),a=Yo(t.shape,e,r),o=Jo(n,e.length),l=Zo(a,n,e.length);return Os(t.reshape(s),i).reshape(a).slice(o,l)}spaceToBatchND(t,e,n){h(t.rank<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const r=e.reduce(((t,e)=>t*e)),s=[[0,0]];s.push(...n);for(let n=1+e.length;n<t.shape.length;++n)s.push([0,0]);const i=t.pad(s),a=Ko(i.shape,e,r,!1),o=Xo(a.length,e.length,!1),l=Yo(i.shape,e,r,!1),u=Os(i.reshape(a),o);return _s(u,l)}reduce(t,e,n){const r=t.shape[0],s=t.shape[1],i=Di(s),a=Math.ceil(s/i),o=new fI({windowSize:i,inSize:s,batchSize:r,outSize:a},e),l=this.compileAndRun(o,[t],n);return 1===l.shape[1]?l:this.reduce(l,e,n)}argReduce(t,e,n=null){let r=t.shape[0],s=t.shape[1];null!=n&&(r=n.shape[0],s=n.shape[1]);const i=Di(s),a={windowSize:i,inSize:s,batchSize:r,outSize:Math.ceil(s/i)},o=new Hw(a,e,null==n),l=[t];null!=n&&l.push(n);const u=this.compileAndRun(o,l,"int32");return 1===u.shape[1]?u:this.argReduce(t,e,u)}argReducePacked(t,e,n=null){const r=null!=n?n.shape:t.shape,s=Di(r[r.length-1]),i=new hk(r,s,e,null==n),a=null==n?[t]:[t,n],o=this.compileAndRun(i,a,"int32");return o.rank===t.rank?this.argReducePacked(t,e,o):o}sum(t,e){Ts("sum",e,t.rank);const[n,r]=Ns(t.shape,e),s=m(r),i=t.as2D(-1,s),a=Ln(t.dtype);return this.reduce(i,"sum",a).reshape(n)}prod(t,e){const n=this.tryRunOnCpuOrThrow([t],(()=>this.cpuBackend.prod(t,e)));if(n)return n;const[r,s]=Ns(t.shape,e),i=m(s),a=t.as2D(-1,i),o=Ln(t.dtype);return this.reduce(a,"prod",o).reshape(r)}unsortedSegmentSum(t,e,n){let r=0;const s=As([r],t.rank);let i=t;null!=s&&(i=Os(t,s),r=Ds(1,t.rank)[0]);const a=QI.computeOutShape(i.shape,r,n),o=m([i.shape[r]]),l=i.as2D(-1,o),u=Ln(t.dtype);let c=this.segOpCompute(l,"unsortedSegmentSum",e,u,n).reshape(a);return null!=s&&(c=Os(c,Fs(s))),c}segOpCompute(t,e,n,r,s){const i=t.shape[0],a=t.shape[1],o=QI.segOpComputeOptimalWindowSize(a,s),l=new CI({windowSize:o,inSize:a,batchSize:i,numSegments:s},e),u=this.compileAndRun(l,[t,n],r);return u.shape[1]===s?u:(n=xa(0,s).tile([a/o]),this.segOpCompute(u,e,n,r,s))}argMinMaxReduce(t,e,n){const r=[e];if(Ts("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,t.rank),!H().getBool("WEBGL_PACK_REDUCE")||t.rank<=2){const[e,s]=Ns(t.shape,r),i=m(s),a=t.as2D(-1,i);return this.argReduce(a,n).reshape(e)}return this.argReducePacked(t,n)}argMin(t,e){return this.argMinMaxReduce(t,e,"min")}argMax(t,e){return this.argMinMaxReduce(t,e,"max")}cumsum(t,e,n,r){if(e!==t.rank-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${t.rank-1} but got axis=`+e);const s=t.shape[e];let i=t;for(let e=0;e<=Math.ceil(Math.log2(s))-1;e++){const n=new Fk(t.shape,!1,r),s=n.getCustomSetupFunc(e),a=i;i=this.compileAndRun(n,[i],i.dtype,s),a.dispose()}if(n){const e=new Fk(t.shape,n,r),s=i;i=this.compileAndRun(e,[i]),s.dispose()}return i}equal(t,e){if(H().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(equal(a, b));\n","bool");const n=new mk("return float(a == b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}less(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.less(t,e)));if(n)return n;if(H().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThan(a, b));\n","bool");const r=new mk("return float(a < b);",t.shape,e.shape);return this.compileAndRun(r,[t,e],"bool")}lessEqual(t,e){if(H().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThanEqual(a, b));\n","bool");const n=new mk("return float(a <= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}greater(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.greater(t,e)));if(n)return n;if(H().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThan(a, b));\n","bool");const r=new mk("return float(a > b);",t.shape,e.shape);return this.compileAndRun(r,[t,e],"bool")}greaterEqual(t,e){if(H().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThanEqual(a, b));\n","bool");const n=new mk("return float(a >= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalNot(t){const e=new OI(t.shape,"return float(!(x >= 1.0));");return this.compileAndRun(e,[t])}logicalAnd(t,e){if(H().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n","bool");const n=new mk("return float(a >= 1.0 && b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalOr(t,e){if(H().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n","bool");const n=new mk("return float(a >= 1.0 || b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}select(t,e,n){const r=new SI(t.rank,e.shape,e.rank);return this.compileAndRun(r,[t,e,n],Mn(e.dtype,n.dtype))}where(t){hl("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return rC(t.shape,e)}topk(t,e,n){const r=t.dataSync();return nC(r,t.shape,t.dtype,e,n)}min(t,e){Ts("min",e,t.rank);const[n,r]=Ns(t.shape,e),s=m(r),i=t.as2D(-1,s);return this.reduce(i,"min",i.dtype).reshape(n)}minimum(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.minimum(t,e)));if(n)return n;const r=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yk("\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new mk("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",t.shape,e.shape);return this.compileAndRun(r,[t,e])}mod(t,e){const n=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yk("\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new mk("if (b == 0.0) return NAN;\n  return mod(a, b);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}maximum(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.maximum(t,e)));if(n)return n;const r=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yk("\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new mk("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",t.shape,e.shape);return this.compileAndRun(r,[t,e])}all(t,e){Ts("all",e,t.rank);const[n,r]=Ns(t.shape,e),s=m(r),i=t.as2D(-1,s);return this.reduce(i,"all",i.dtype).reshape(n)}any(t,e){Ts("any",e,t.rank);const[n,r]=Ns(t.shape,e),s=m(r),i=t.as2D(-1,s);return this.reduce(i,"any",i.dtype).reshape(n)}floorDiv(t,e){const n="int32";if(H().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",n);const r=new mk("\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",t.shape,e.shape);return this.compileAndRun(r,[t,e],n)}packedUnaryOp(t,e,n){const r=new JI(t.shape,e);return this.compileAndRun(r,[t],n)}packedBinaryOp(t,e,n,r,s=!1){const i=new yk(n,t.shape,e.shape,s);return this.compileAndRun(i,[t,e],r)}makeComplexComponentTensorInfo(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}addN(t){if(1===t.length)return t[0];if(t.length>H().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(t.length/2),n=this.addN(t.slice(0,e)),r=this.addN(t.slice(e));return this.addN([n,r])}const e=t.map((t=>t.dtype)).reduce(((t,e)=>Mn(t,e))),n=t.map((t=>t.shape)),r=H().getBool("WEBGL_PACK")?new Gw(t[0].shape,n):new Vw(t[0].shape,n);return this.compileAndRun(r,t,e)}pow(t,e){const n=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yk("\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new mk("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",t.shape,e.shape),r=Mn(t.dtype,e.dtype);return this.compileAndRun(n,[t,e],r)}ceil(t){if(this.shouldExecuteOnCPU([t])){const e=Aw(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(H().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,UI,t.dtype);const e=new OI(t.shape,UI);return this.compileAndRun(e,[t])}floor(t){if(this.shouldExecuteOnCPU([t])){const e=_w(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(H().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,VI,t.dtype);const e=new OI(t.shape,VI);return this.compileAndRun(e,[t])}sign(t){const e=new OI(t.shape,"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n");return this.compileAndRun(e,[t])}isNaN(t){const e=new OI(t.shape,"return float(isnan(x));");return this.compileAndRun(e,[t],"bool")}isInf(t){const e=new OI(t.shape,"return float(isinf(x));");return this.compileAndRun(e,[t],"bool")}isFinite(t){const e=new OI(t.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(e,[t],"bool")}round(t){const e=new OI(t.shape,"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n");return this.compileAndRun(e,[t])}exp(t){if(this.shouldExecuteOnCPU([t])){const e=Fw(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(H().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,GI,t.dtype);const e=new OI(t.shape,GI);return this.compileAndRun(e,[t])}expm1(t){if(this.shouldExecuteOnCPU([t])){const e=Dw(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(H().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,HI,t.dtype);const e=new OI(t.shape,HI);return this.compileAndRun(e,[t])}softmax(t,e){const n=k([e],t.shape),r=Gi(t,n),s=Rs(r.shape,n),i=Hi(t,r.reshape(s)),a=this.exp(i),o=this.sum(a,n).reshape(s);return vi(a,o)}log(t){if(this.shouldExecuteOnCPU([t])){const e=Ow(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(H().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",t.dtype);const e=new OI(t.shape,"if (x < 0.0) return NAN;\n  return log(x);");return this.compileAndRun(e,[t])}log1p(t){const e=new OI(t.shape,"return log(1.0 + x);");return this.compileAndRun(e,[t])}sqrt(t){const e=new OI(t.shape,"return sqrt(x);");return this.compileAndRun(e,[t])}rsqrt(t){if(this.shouldExecuteOnCPU([t])){const e=zw(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}const e=new OI(t.shape,"return inversesqrt(x);");return this.compileAndRun(e,[t])}reciprocal(t){const e=new OI(t.shape,"return 1.0 / x;");return this.compileAndRun(e,[t])}relu(t){let e;return e=H().getBool("WEBGL_PACK")?new JI(t.shape,KI):new OI(t.shape,LI),this.compileAndRun(e,[t])}relu6(t){let e;return e=H().getBool("WEBGL_PACK")?new JI(t.shape,XI):new OI(t.shape,zI),this.compileAndRun(e,[t])}prelu(t,e){const n=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yk(gk,t.shape,e.shape):new mk(fk,t.shape,e.shape);return this.compileAndRun(n,[t,e])}elu(t){if(H().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,YI,t.dtype);const e=new OI(t.shape,BI);return this.compileAndRun(e,[t])}eluDer(t,e){const n=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yk("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",t.shape,e.shape):new mk("return (b >= 1.0) ? a : a * (b + 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}selu(t){const e=new OI(t.shape,PI);return this.compileAndRun(e,[t])}clip(t,e,n){let r;r=H().getBool("WEBGL_PACK_CLIP")?new xk(t.shape):new bk(t.shape);const s=r.getCustomSetupFunc(e,n);return this.compileAndRun(r,[t],null,s)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=Rw(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(H().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,MI,t.dtype);const e=new OI(t.shape,MI);return this.compileAndRun(e,[t])}complexAbs(t){const e=this.texData.get(t.dataId),n=new vk(t.shape),r=[this.makeComplexComponentTensorInfo(t,e.complexTensorInfos.real),this.makeComplexComponentTensorInfo(t,e.complexTensorInfos.imag)];return this.compileAndRun(n,r)}sigmoid(t){const e=new OI(t.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(e,[t])}softplus(t){const e=new OI(t.shape,"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n");return this.compileAndRun(e,[t])}asin(t){const e=new OI(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n");return this.compileAndRun(e,[t])}acos(t){const e=new OI(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n");return this.compileAndRun(e,[t])}atan(t){const e=new OI(t.shape,"if (isnan(x)) return x;\n  return atan(x);\n");return this.compileAndRun(e,[t])}sinh(t){const e=new OI(t.shape,"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}cosh(t){const e=new OI(t.shape,"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}tanh(t){const e=new OI(t.shape,"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n");return this.compileAndRun(e,[t])}asinh(t){const e=new OI(t.shape,"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));");return this.compileAndRun(e,[t])}acosh(t){const e=new OI(t.shape,"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));");return this.compileAndRun(e,[t])}atanh(t){const e=new OI(t.shape,"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;");return this.compileAndRun(e,[t])}erf(t){const e=new OI(t.shape,jI);return this.compileAndRun(e,[t])}step(t,e){const n=new OI(t.shape,function(t=0){return`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t});\n  `}(e));return this.compileAndRun(n,[t])}conv2dByMatMul(t,e,n,r,s,i){const a=t.shape,o=this.texData.get(t.dataId),l=n.inChannels,u=a[0]*a[1]*a[2],c=n.outChannels,d="channelsLast"===n.dataFormat,p=(1===u||1===c)&&l>1e3,f=a[2]%2!=0&&!!o.isPacked;if(p||!H().getBool("WEBGL_LAZILY_UNPACK")||!H().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!f){const o=d?a[0]*a[1]*a[2]:a[0]*a[2]*a[3],l=_s(t,[1,o,n.inChannels]),u=_s(e,[1,n.inChannels,n.outChannels]),c=this.fusedBatchMatMul({a:l,b:u,transposeA:!1,transposeB:!1,bias:r,activation:s,preluActivationWeights:i});return _s(c,n.outShape)}const m=d?a[0]*a[1]*(a[2]+1):a[0]*a[2]*(a[3]+1),g={dataId:t.dataId,shape:[1,m,n.inChannels],dtype:t.dtype},y=o.shape;o.shape=o.shape.slice(),o.shape[o.shape.length-2]++,h(ww(o.shape,g.shape),(()=>`packed reshape ${o.shape} to ${g.shape} isn't free`));const b=_s(e,[1,n.inChannels,n.outChannels]),x=this.fusedBatchMatMul({a:g,b,transposeA:!1,transposeB:!1,bias:r,activation:s,preluActivationWeights:i}),v=this.texData.get(x.dataId);return h(v.isPacked,(()=>"batchMatMul result is expected to be packed")),o.shape=y,v.shape=n.outShape,fs().makeTensorFromDataId(x.dataId,n.outShape,x.dtype)}conv2dWithIm2Row(t,e,n,r,s,i){const{filterWidth:a,filterHeight:o,inChannels:l,outWidth:u,outHeight:c,dataFormat:h}=n,d="channelsLast"===h,p=a*o*l,f=c*u,m=[p,f],g=t.squeeze([0]),y=e.reshape([1,p,-1]),b=new tI(m,g.shape,n),x=this.compileAndRun(b,[g]).reshape([1,m[0],m[1]]),v=null!=r,w=null!=i,k=s?iC(s,!0):null,I=new aI(x.shape,y.shape,[1,f,n.outChannels],!0,!1,v,k,w),C=[x,y];r&&C.push(r),w&&C.push(i);const S=this.compileAndRun(I,C);return d?S.reshape([1,c,u,n.outChannels]):S.reshape([1,n.outChannels,c,u])}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n,r,s,i);if(H().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n,r,s,i);const a=null!=r,o=null!=i,l=s?iC(s,!1):null,u=new $k(n,a,l,o),c=[t,e];return r&&c.push(r),i&&c.push(i),this.compileAndRun(u,c)}conv2d(t,e,n){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n);if(H().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n);const r=new $k(n);return this.compileAndRun(r,[t,e])}conv2dDerInput(t,e,n){const r=new kk(n);return this.compileAndRun(r,[t,e])}conv2dDerFilter(t,e,n){const r=new wk(n);return this.compileAndRun(r,[t,e])}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){const a=H().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1,o=s?iC(s,a):null,l=[t,e],u=null!=r,c=null!=i;let h;return u&&l.push(r),c&&l.push(i),a?(h=new Tk(n,u,o,c),this.compileAndRun(h,l)):(h=new Rk(n,u,o,c),this.compileAndRun(h,l))}depthwiseConv2D(t,e,n){let r;return H().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1?(r=new Tk(n),this.compileAndRun(r,[t,e])):(r=new Rk(n),this.compileAndRun(r,[t,e]))}depthwiseConv2DDerInput(t,e,n){const r=new Ek(n);return this.compileAndRun(r,[t,e])}depthwiseConv2DDerFilter(t,e,n){const r=new Sk(n);return this.compileAndRun(r,[t,e])}conv3d(t,e,n){const r=new Nk(n);return this.compileAndRun(r,[t,e])}conv3dDerInput(t,e,n){const r=new Ck(n);return this.compileAndRun(r,[t,e])}conv3dDerFilter(t,e,n){const r=new Ik(n);return this.compileAndRun(r,[t,e])}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let s=0;for(let n=0;n<t.rank;n++)n!==e&&(r[s++]=t.shape[n]);const i=new Array(t.rank).fill(0),a=t.shape.slice();a[e]=1;const o=new Array(n);for(let n=0;n<o.length;n++)i[e]=n,o[n]=this.slice(t,i,a).reshape(r);return o}avgPool3d(t,e){const n=new pI(e,"avg",!1);return this.compileAndRun(n,[t],"float32")}avgPool3dBackprop(t,e,n){const r=new pk(n);return this.compileAndRun(r,[t],e.dtype)}maxPool3d(t,e){const n=new pI(e,"max",!1);return this.compileAndRun(n,[t],"float32")}maxPool3dBackprop(t,e,n,r){const s=new pI(r,"max",!0),i=this.compileAndRun(s,[e]),a=new iI(r),o=this.compileAndRun(a,[t,i],e.dtype);return i.dispose(),o}resizeBilinear(t,e,n,r){const s=H().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new bI(t.shape,e,n,r):new yI(t.shape,e,n,r);return this.compileAndRun(s,[t],"float32")}resizeBilinearBackprop(t,e,n){const r=new gI(t,e,n);return this.compileAndRun(r,[t])}resizeNearestNeighbor(t,e,n,r){const s=new vI(t.shape,e,n,r);return this.compileAndRun(s,[t])}resizeNearestNeighborBackprop(t,e,n){const r=new xI(t,e,n);return this.compileAndRun(r,[t])}multinomial(t,e,n,r){const s=e?t:Ta(t),i=s.shape[0],a=s.shape[1],o=new oI(i,a,n),l=o.getCustomSetupFunc(r);return this.compileAndRun(o,[s],"int32",l)}oneHot(t,e,n,r){const s=new lI(t.size,e,n,r);return this.compileAndRun(s,[t])}diag(t){const e=new zk(t.size);return this.compileAndRun(e,[t])}cropAndResize(t,e,n,r,s,i){const a=new Ak(t.shape,e.shape,r,s,i);return this.compileAndRun(a,[t,e,n],"float32")}depthToSpace(t,e,n){h(e>1,(()=>"blockSize should be > 1 for depthToSpace, but was: "+e));const r=t.shape[0],s="NHWC"===n?t.shape[1]:t.shape[2],i="NHWC"===n?t.shape[2]:t.shape[3],a="NHWC"===n?t.shape[3]:t.shape[1],o=s*e,l=i*e,u=a/(e*e),c=new Lk("NHWC"===n?[r,o,l,u]:[r,u,o,l],e,n);return this.compileAndRun(c,[t])}split(t,e,n){return tC(t,e,n)}scatterND(t,e,n){const{sliceRank:r,numUpdates:s,sliceSize:i,strides:a,outputSize:o}=nl(0,t,n),l=[o/i,i],u=t.reshape([s,r]),c=e.reshape([s,i]);if(0===o)return kl(rr([]),n);const h=ks(0),d=new II(s,r,u.rank,c.rank,a,l);return this.compileAndRun(d,[c,u,h]).reshape(n)}sparseToDense(t,e,n,r){const{sliceRank:s,numUpdates:i,strides:a,outputSize:o}=nl(0,t,n),l=new II(i,s,t.rank,e.rank,a,[o,1],!1);return this.compileAndRun(l,[e,t,r]).reshape(n)}gatherND(t,e){const n=e.shape,r=n[n.length-1],[s,i,a,o]=Qo(t,e),l=e.reshape([i,r]),u=t.reshape([t.size/a,a]),c=new Hk(r,o,[i,a]);return this.compileAndRun(c,[u,l]).reshape(s)}fill(t,e,n){if("string"===(n=n||A(e))){const r=S(n,m(t));return r.fill(e),fs().makeTensor(r,t,n,this)}{const r=new Vk(t,e),s=r.getCustomSetupFunc(e);return this.compileAndRun(r,[],n,s)}}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported under string dtype");return this.fill(t.shape,1,t.dtype)}zerosLike(t){return this.fill(t.shape,"string"===t.dtype?"":0,t.dtype)}linspace(t,e,n){return Il(t,e,n)}makeTensorInfo(t,e,n){const r=this.write(n,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,n){const{dataId:r}=this.makeTensorInfo(t,e,n);return fs().makeTensorFromDataId(r,t,e,this)}unpackTensor(t){const e=new ZI(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new uI(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[yw(t.shape),...bw(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},s=[yw(e),...bw(e)],i=new mI(s,n),a=this.runWebGLProgram(i,[r],t.dtype,null,!0);return{dataId:a.dataId,shape:e,dtype:a.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:r,dtype:s}=e,i=xw(r);let a;return a=n?new Mk(i):new Ok(i),{dtype:s,shape:r,dataId:this.runWebGLProgram(a,[{shape:i,dtype:s,dataId:t}],s,null,!0).dataId}}runWebGLProgram(t,e,n,r,s=!1){const i=this.makeTensorInfo(t.outputShape,n),a=this.texData.get(i.dataId);if(t.packedOutput&&(a.isPacked=!0),t.outPackingScheme===Qv.DENSE){const e=rw(t.outputShape);a.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(a.usage=t.outTexUsage),0===m(i.shape))return a.values=C(i.dtype,0),i;const o=[],l=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&m(e.shape)<=H().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),o.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!ww(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),o.push(e),n=this.texData.get(e.dataId),t.shape=r}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const u={shape:i.shape,texData:a,isUniform:!1},c=function(t,e,n){let r="";e.concat(n).forEach((t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${n}_${e}`}));const s=t.userCode;let i=t.constructor.name;return i+="_"+r+"_"+s,i}(t,l,u),h=this.getAndSaveBinary(c,(()=>function(t,e,n,r){const s=e.userCode,i=n.map(((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}})),a=i.map((t=>t.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=Qw(i,o,s,e.packedInputs),u=t.createProgram(l);let c=null;const h=t.getUniformLocation(u,"NAN",!1);1===H().getNumber("WEBGL_VERSION")&&(c=t.getUniformLocation(u,"INFINITY",!1));const d={};for(let n=0;n<e.variableNames.length;n++){const r=e.variableNames[n],s=!1;d[r]=t.getUniformLocation(u,r,s),d["offset"+r]=t.getUniformLocation(u,"offset"+r,s)}return{program:e,source:l,webGLProgram:u,uniformLocations:d,inShapeInfos:a,outShapeInfo:o,infLoc:c,nanLoc:h}}(this.gpgpu,t,l,u))),d=null!=this.activeTimers;let p;if(d&&(p=this.startTimer()),function(t,e,n,r,s){Qk(e.inShapeInfos,n),Qk([e.outShapeInfo],[r]);const i=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(i,a[0],a[1]):t.setOutputMatrixTexture(i,a[0],a[1]),t.setProgram(e.webGLProgram),1===H().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach(((n,r)=>{const s=e.program.variableNames[r],i=e.uniformLocations[s],a=e.uniformLocations["offset"+s];if(null!=i)if(n.isUniform)if(m(n.shape)<2)t.gl.uniform1f(i,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(i,e)}else null!=n.texData.slice&&null!=a&&t.gl.uniform1i(a,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,i,r)})),null!=s&&s(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,h,l,u,r),o.forEach((t=>this.disposeIntermediateTensorInfo(t))),d&&(p=this.endTimer(p),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(p)})),!H().getBool("WEBGL_LAZILY_UNPACK")&&a.isPacked&&!1===s){const t=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),t}return i}compileAndRun(t,e,n,r,s=!1){n=n||e[0].dtype;const i=this.runWebGLProgram(t,e,n,r,s);return fs().makeTensorFromDataId(i.dataId,i.shape,i.dtype)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(H().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=gs((()=>{if(!H().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=H().getBool("DEBUG");H().set("DEBUG",!1);const e=this.abs(ks(1e-8)).dataSync()[0];if(H().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:s,texture:i,usage:a,isPacked:o}=e;if(null!=i)return;const l=null!=this.activeTimers;let u;l&&(u=wn());let h=e.texShape;if(null==h&&(h=function(t,e=!1){let n=H().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map(((e,n)=>n>=t.length-2?c(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=I(t);t=e.newShape}let r=m(t);if(t.length<=1&&r<=n)return[1,r];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=yw(t);let n=2,s=2;return t.length&&([n,s]=bw(t)),r=e*(n/2)*(s/2),b(r).map((t=>2*t))}return b(r)}(n,o),e.texShape=h),null!=s){const t=xw(n);let i,a=h[1],c=h[0];const d=s instanceof Uint8Array;o?([a,c]=sw(h[0],h[1]),i=new Uk(t,[c,a],d)):i=new Wk(t,[c,a],d);const p=this.makeTensorInfo([c,a],r);this.texData.get(p.dataId).usage=d?tw.PIXELS:tw.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),a,c,s);const f=!0,m=this.runWebGLProgram(i,[p],r,null,f),g=this.texData.get(m.dataId);e.texture=g.texture,e.texShape=g.texShape,e.isPacked=g.isPacked,e.usage=g.usage,this.disposeIntermediateTensorInfo(p),this.texData.delete(m.dataId),e.values=null,l&&(this.uploadWaitMs+=wn()-u)}else{const t=this.acquireTexture(h,a,r,o);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error("Unknown dtype "+e)}(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*N(e)}tryRunOnCpuOrThrow(t,e){if(this.shouldExecuteOnCPU(t))try{return e()}catch(t){if(H().getBool("IS_TEST"))throw new Error("CPU forwarding failed")}return null}}function oC(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}qn()&&xs("webgl",(()=>new aC),2);const lC={kernelName:jt,backendName:"webgl",kernelFunc:oC};function uC(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,i=n.makeTensorInfo(r.shape,"complex64"),a=n.texData.get(i.dataId),o=oC({inputs:{x:r},backend:n});n.texData.get(o.dataId).complexParentRefCount++;const l=oC({inputs:{x:s},backend:n});return n.texData.get(l.dataId).complexParentRefCount++,a.complexTensorInfos={real:o,imag:l},i}const cC={kernelName:gt,backendName:"webgl",kernelFunc:uC};function hC(t){return({inputs:e,backend:n})=>{const{x:r}=e,s=n,i=new OI(r.shape,t);return s.runWebGLProgram(i,[r],r.dtype)}}function dC({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:i}){return({inputs:a,backend:o})=>{const{a:l,b:u}=a,c=o;if(r&&"complex64"===l.dtype){const e=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,s]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,r]=e,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},i={dataId:r.dataId,dtype:r.dtype,shape:u.shape},a=new mk(t,l.shape,u.shape);return c.runWebGLProgram(a,[s,i],Mn(n.dtype,r.dtype))})),i=uC({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),i}const h=i||Mn(l.dtype,u.dtype);if(c.shouldExecuteOnCPU([l,u])&&null!=s){const t=c.texData.get(l.dataId),e=c.texData.get(u.dataId),[n,r]=s(l.shape,u.shape,t.values,e.values,h),i=c.makeTensorInfo(r,h);return c.texData.get(i.dataId).values=n,i}let d;return d=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new yk(e,l.shape,u.shape,n):new mk(t,l.shape,u.shape),c.runWebGLProgram(d,[l,u],h)}}const pC="return a + b;",fC=dC({opSnippet:pC,packedOpSnippet:pC,supportsComplex:!0,cpuKernelImpl:Tw}),mC={kernelName:Q,backendName:"webgl",kernelFunc:fC},gC=dC({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),yC={kernelName:at,backendName:"webgl",kernelFunc:gC},bC={kernelName:ot,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;$w(s,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;h(Ys(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Ps(s.shape,i,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&g(u.inShape,u.outShape))return oC({inputs:{x:s},backend:n});const c=new dI(u,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},xC={kernelName:lt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,a=i;$w([s,i],"avgPoolBackprop");const{filterSize:o,strides:l,pad:u}=r,c=Ps(a.shape,o,l,1,u),h=new dk(c);return n.runWebGLProgram(h,[s],a.dtype)}};class vC{constructor(t,e,n,r,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Ci(t,e),Ci(t,n);let a="0.0";null!=r&&(Ci(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="1.0";null!=s&&(Ci(t,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class wC{constructor(t,e,n,r,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ci(t,e),Ci(t,n);let a="vec4(0.0)";null!=r&&(Ci(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(Ci(t,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const kC={kernelName:Vt,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,mean:s,variance:i,offset:a,scale:o}=t;h(s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),h(null==a||s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),h(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,s,i];let c=null;null!=a&&(c=a.shape,u.push(a));let d=null;null!=o&&(d=o.shape,u.push(o));const p=H().getBool("WEBGL_PACK_NORMALIZATION")?new wC(r.shape,s.shape,i.shape,c,d,l):new vC(r.shape,s.shape,i.shape,c,d,l);return e.runWebGLProgram(p,u,u[0].dtype)}},IC=dC({opSnippet:"return float(a != b);",dtype:"bool"}),CC={kernelName:pe,backendName:"webgl",kernelFunc:IC};function SC(t){const{inputs:e,backend:n}=t,{input:r}=e;return oC({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const EC={kernelName:we,backendName:"webgl",kernelFunc:SC},$C={kernelName:pt,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r,attrs:s}=e,{x:i}=n,{dtype:a}=s;if("complex64"===a){if("complex64"===i.dtype)return oC({inputs:{x:i},backend:r});const e=Ji(i.shape),n=t({inputs:{x:i},backend:r,attrs:{dtype:"float32"}}),s=uC({inputs:{real:n,imag:e},backend:r});return e.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===i.dtype){const e=SC({inputs:{input:i},backend:r}),n=t({inputs:{x:e},backend:r,attrs:{dtype:a}});return r.disposeIntermediateTensorInfo(e),n}if(!E(i.dtype,a)){const t=oC({inputs:{x:i},backend:r});return{dataId:t.dataId,shape:t.shape,dtype:a}}if("int32"===a)return function(t,e){const n=new OI(t.shape,"return float(int(x));"),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,r);if("bool"===a){const t=r.makeTensorInfo([],"bool",C("bool",1)),e=IC({inputs:{a:i,b:t},backend:r});return r.disposeIntermediateTensorInfo(t),e}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${a}`)}};class NC{constructor(t){this.outputShape=[],this.outputShape=oi(t,1),this.variableNames=t.map(((t,e)=>"T"+e));const e=new Array(t.length-1);e[0]=t[0][1];for(let n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let t=1;t<e.length;t++){const r=e[t-1];n.push(`else if (yC < ${e[t]}) setOutput(getT${t}(yR, yC-${r}));`)}const r=e.length,s=e[e.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class RC{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=oi(t,e);const n=this.outputShape,r=n.length,s=lk(r),i=qw("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map(((t,e)=>"T"+e));const o=new Array(t.length-1);o[0]=t[0][e];for(let n=1;n<o.length;n++)o[n]=o[n-1]+t[n][e];const l=a[e],u=a.slice(-2),c=a.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let t=1;t<o.length;t++){const e=o[t-1];h+=`\n        if (${l} < ${o[t]}  && ${l} >= ${o[t-1]}) {\n          return getChannel(\n            getT${t}(${TC(a,l,e)}),\n            vec2(${TC(u,l,e)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${TC(a,l,p)}),\n          vec2(${TC(u,l,p)}));`,this.userCode=`\n      float getValue(${a.map((t=>"int "+t))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${n[r-2]} &&\n            ${i[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function TC(t,e,n){const r=t.indexOf(e);return t.map(((t,e)=>e===r?`${t} - ${n}`:t)).join()}function AC(t){const{inputs:e,backend:n}=t,{input:r}=e;return oC({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const FC={kernelName:Kt,backendName:"webgl",kernelFunc:AC};function DC(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:i}=r,a=n,o=m(s.shape),l=w(i,o),u=m(l);h(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=a.texData.get(s.dataId);return!c.isPacked||ww(s.shape,l)||null!==c.texture&&ww(c.shape,l)?(a.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(t,e,n){const r=[yw(t.shape),...bw(t.shape)],s={dtype:t.dtype,shape:r,dataId:t.dataId},i=[yw(e),...bw(e)],a=new mI(i,r),o=n.runWebGLProgram(a,[s],t.dtype,null,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}(s,l,a)}const _C={kernelName:Ce,backendName:"webgl",kernelFunc:DC};function OC(t,e,n){const r=t[0].dtype;if("complex64"===r){const r=t.map((t=>SC({inputs:{input:t},backend:n}))),s=t.map((t=>AC({inputs:{input:t},backend:n}))),i=OC(r,e,n),a=OC(s,e,n),o=uC({inputs:{real:i,imag:a},backend:n});return r.forEach((t=>n.disposeIntermediateTensorInfo(t))),s.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),o}if(t.length>H().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(t.length/2),s=OC(t.slice(0,r),e,n),i=OC(t.slice(r),e,n),a=OC([s,i],e,n);return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}if(H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const s=new RC(t.map((t=>t.shape)),e);return n.runWebGLProgram(s,t,r)}const s=oi(t.map((t=>t.shape)),e),i=t.map((t=>DC({inputs:{x:t},attrs:{shape:[-1,m(t.shape.slice(e))]},backend:n}))),a=new NC(i.map((t=>t.shape))),o=n.runWebGLProgram(a,i,r);i.forEach((t=>n.disposeIntermediateTensorInfo(t)));const l=DC({inputs:{x:o},attrs:{shape:s},backend:n});return n.disposeIntermediateTensorInfo(o),l}const MC={kernelName:yt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,i=k(s,e[0].shape)[0],a=oi(e.map((t=>t.shape)),i);if(0===m(a))return n.makeTensorInfo(a,e[0].dtype,[]);const o=e.filter((t=>m(t.shape)>0));return 1===o.length?o[0]:(ai(o.map((t=>t.shape)),i),OC(o,i,n))}},LC=hC("if (isnan(x)) return x;\n  return cos(x);\n"),zC={kernelName:Ct,backendName:"webgl",kernelFunc:LC},BC=dC({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),PC={kernelName:Dt,backendName:"webgl",kernelFunc:BC};class WC{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const s=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,i=n?r+".0":"1.0";let a;if("real"===t)a="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function UC(t,e,n){const r=n.texData.get(t.dataId),s=m(t.shape),i=t.shape[t.shape.length-1],a=DC({inputs:{x:t},backend:n,attrs:{shape:[s/i,i]}}).shape,o=new WC("real",a,e),l=new WC("imag",a,e),u=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:a},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:a}],c=n.runWebGLProgram(o,u,"float32"),h=n.runWebGLProgram(l,u,"float32"),d=uC({inputs:{real:c,imag:h},backend:n});n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h);const p=DC({inputs:{x:d},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(p),p}const VC={kernelName:zt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return UC(r,!1,n)}};class GC{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const HC={kernelName:Pt,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,s=new GC(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}};class jC{constructor(t){this.variableNames=["A"];const e=Kw(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class qC{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=Kw(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const KC={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:s}=e;const{numChannels:i}=r,a="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,u]=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[u,l],h=[u,l,i];(o||a)&&(null==XC&&(XC=document.createElement("canvas").getContext("2d")),XC.canvas.width=l,XC.canvas.height=u,XC.drawImage(s,0,0,l,u),s=XC.canvas);const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=tw.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const p=H().getBool("WEBGL_PACK")?new qC(h):new jC(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let XC;const YC={kernelName:qt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return UC(r,!0,n)}};class JC{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=t;this.outputShape=[r,i];const a=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=e){const t=1/e;l=`sumValue += dot(values * ${y(t)?t.toPrecision(2):t}, ones);`}let u="";s%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}function ZC(t,e,n,r){const s=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],r=Di(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e}(t.shape);let i=t;for(let a=0;a<s.length;a++){const{inSize:o,windowSize:l,outSize:u}=s[a];let c,h;c="mean"===n?0===a?new JC({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},o):new JC({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u}):new fI({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},n),h=i,i=r.runWebGLProgram(c,[i],e),h.dataId!==t.dataId&&r.disposeIntermediateTensorInfo(h)}return i}class QC{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];this.outputShape=n,this.rank=n.length;const r=lk(this.rank),s=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let e=0;e<t.length;e++)r[t[e]]=n[e];return r.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class tS{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=lk(this.rank),s=jw("rc",this.rank),i=new Array(this.rank);for(let t=0;t<e.length;t++)i[e[t]]=s[t];const a=`vec2(${i.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function eS(t,e,n){const r=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tS(t.shape,e):new QC(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}const nS={kernelName:ne,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:s,keepDims:i}=e,a=n,o=r.shape.length,l=k(s,r.shape);let u=l;const c=As(u,o),h=null!=c,d=a.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const t=a.texData.get(p.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=r.shape[c[t]];const n=Ww(t,r.shape,r.dtype,c,e);p=a.makeTensorInfo(e,r.dtype),a.texData.get(p.dataId).values=n}else p=eS(r,c,a);u=Ds(u.length,o)}Ts("max",u,o);const[f,g]=Ns(p.shape,u);let y,b=f;if(i&&(b=Rs(f,l)),d){const t=a.texData.get(p.dataId).values,e=Mw(t,m(g),b,r.dtype);y=a.makeTensorInfo(b,r.dtype),a.texData.get(y.dataId).values=e}else y=function(t,e,n,r){const s=m(e),i=DC({inputs:{x:t},attrs:{shape:[m(t.shape)/s,s]},backend:r}),a=ZC(i,t.dtype,"max",r),o=DC({inputs:{x:a},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}(p,g,b,a);return h&&a.disposeIntermediateTensorInfo(p),y}},rS={kernelName:se,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;$w(s,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;h(Ys(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Ps(s.shape,i,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&g(u.inShape,u.outShape))return oC({inputs:{x:s},backend:n});const c=new dI(u,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},sS={kernelName:ie,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i,output:a}=e,o=i;$w([i,a],"maxPoolBackprop");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=Ps(o.shape,l,u,1,c,h),p=new dI(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new sI(d),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},iS={kernelName:oe,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=e,l=n;h(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const u=[1,1];h(Ys(i,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));const c=Ps(r.shape,s,i,u,a),[d,p]=function(t,e,n,r){let s=new dI(n,"max",!1);const i=r.runWebGLProgram(s,[t],"float32");return s=new dI(n,"max",!0,!0,e),[i,r.runWebGLProgram(s,[t],"float32")]}(r,o,c,l);return[d,p]}},aS={kernelName:le,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{keepDims:s,axis:i}=e,a=n,o=r.shape.length,l=k(i,r.shape);let u=l;const c=As(u,o),h=null!=c,d=a.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const t=a.texData.get(f.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=r.shape[c[t]];const n=Ww(t,r.shape,r.dtype,c,e);f=a.makeTensorInfo(e,r.dtype),a.texData.get(f.dataId).values=n}else f=eS(r,c,a);p.push(f),u=Ds(u.length,o)}Ts("sum",u,o);const[g,y]=Ns(f.shape,u);let b=g;s&&(b=Rs(g,l));const x=function(t,e,n,r){const s=m(e),i=DC({inputs:{x:t},attrs:{shape:[m(t.shape)/s,s]},backend:r}),a=ZC(i,"float32","mean",r),o=DC({inputs:{x:a},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}(f,y,b,a);for(const t of p)a.disposeIntermediateTensorInfo(t);return x}};class oS{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=lk(r),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class lS{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=lk(r),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=qw("rc",r),l=qw("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const t=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${t}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const t=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${t}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${t}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const uS={kernelName:ce,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r}=t,{paddings:s,mode:i}=n,a=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lS(r.shape,s,i):new oS(r.shape,s,i);return e.runWebGLProgram(a,[r],r.dtype)}};class cS{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ci(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const hS="return a * b;",dS={kernelName:he,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{a:r,b:s}=e,i=Mn(r.dtype,s.dtype);if("complex64"===r.dtype){const t=n.texData.get(r.dataId),e=n.texData.get(s.dataId),i=new cS("return areal * breal - aimag * bimag;",r.shape,s.shape),a=new cS("return areal * bimag + aimag * breal;",r.shape,s.shape),o=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(i,o,"float32"),u=n.runWebGLProgram(a,o,"float32"),c=uC({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,s])){const t=n.texData.get(r.dataId),e=n.texData.get(s.dataId),[a,o]=Lw(r.shape,s.shape,t.values,e.values,i),l=n.makeTensorInfo(o,i);return n.texData.get(l.dataId).values=a,l}let a;return a=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yk(hS,r.shape,s.shape):new mk(hS,r.shape,s.shape),n.runWebGLProgram(a,[r,s],i)}},pS={kernelName:fe,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{hl("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:o}=n,l=e;return po(l.readSync(r.dataId),l.readSync(s.dataId),i,a,o)}},fS=fo,mS={kernelName:me,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{hl("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:o,padToMaxOutputSize:l}=n,u=e,c=u.readSync(r.dataId),h=u.readSync(s.dataId),{selectedIndices:d,validOutputs:p}=fS(c,h,i,a,o,l);return[d,p]}},gS=mo,yS={kernelName:ge,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{hl("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:o,softNmsSigma:l}=n,u=e,c=u.readSync(r.dataId),h=u.readSync(s.dataId),d=i,p=a,f=o,m=l,{selectedIndices:g,selectedScores:y}=gS(c,h,d,p,f,m);return[g,y]}};class bS{constructor(t,e,n,r){this.variableNames=["Image"],this.outputShape=[];const s=t[1],i=t[2],a=Math.sin(e).toFixed(3),o=Math.cos(e).toFixed(3);this.outputShape=t;const[l,u]=qo(r,s,i),c=l.toFixed(3),h=u.toFixed(3);let d="";d="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${c}) * ${o} - (float(y) - ${h}) * ${a};\n          float coordYFloat = (float(x) - ${c}) * ${a} + (float(y) - ${h}) * ${o};\n          int coordX = int(round(coordXFloat + ${c}));\n          int coordY = int(round(coordYFloat + ${h}));\n          ${d}\n          if(coordX >= 0 && coordX < ${i} && coordY >= 0 && coordY < ${s}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const xS={kernelName:en,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:i,center:a}=e,o=n,l=new bS(r.shape,s,i,a);return o.runWebGLProgram(l,[r],r.dtype)}},vS=hC("if (isnan(x)) return x;\n  return sin(x);\n"),wS={kernelName:_e,backendName:"webgl",kernelFunc:vS},kS={kernelName:Ge,backendName:"webgl",kernelFunc:hC("return x * x;")},IS="return (a - b) * (a - b);",CS=dC({opSnippet:IS,packedOpSnippet:IS}),SS={kernelName:Ve,backendName:"webgl",kernelFunc:CS},ES="return a - b;",$S=dC({opSnippet:ES,packedOpSnippet:ES,supportsComplex:!0,cpuKernelImpl:Pw}),NS={kernelName:He,backendName:"webgl",kernelFunc:$S},RS=hC("return tan(x);"),TS=[mC,yC,bC,xC,kC,$C,cC,MC,zC,PC,VC,HC,KC,lC,YC,FC,nS,rS,sS,iS,aS,uS,dS,pS,mS,yS,CC,EC,_C,xS,wS,kS,NS,SS,{kernelName:je,backendName:"webgl",kernelFunc:RS},{kernelName:Xe,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{perm:s}=e,i=n,a=r.shape.length,o=new Array(a);for(let t=0;t<o.length;t++)o[t]=r.shape[s[t]];let l;if(i.shouldExecuteOnCPU([r])){const t=i.texData.get(r.dataId).values,e=Ww(t,r.shape,r.dtype,s,o);l=i.makeTensorInfo(o,r.dtype),i.texData.get(l.dataId).values=e}else l=eS(r,s,i);return l}},{kernelName:Ye,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:i}=e;$w(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=r.readSync(i.dataId),{outputValues:o,outputShape:l,indices:u}=Uw(a,s,i.shape,i.dtype);return[r.makeTensorInfo(l,i.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}}];for(const t of TS)un(t);var AS=n(1758),FS=function(t,e){return(FS=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},DS=function(){return(DS=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var s in e=arguments[n])Object.prototype.hasOwnProperty.call(e,s)&&(t[s]=e[s]);return t}).apply(this,arguments)};function _S(t,e,n,r){return new(n||(n=Promise))((function(s,i){function a(t){try{l(r.next(t))}catch(t){i(t)}}function o(t){try{l(r.throw(t))}catch(t){i(t)}}function l(t){t.done?s(t.value):new n((function(e){e(t.value)})).then(a,o)}l((r=r.apply(t,e||[])).next())}))}function OS(t,e){var n,r,s,i,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(s=2&i[0]?r.return:i[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,i[1])).done)return s;switch(r=0,s&&(i=[2&i[0],s.value]),i[0]){case 0:case 1:s=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(s=(s=a.trys).length>0&&s[s.length-1])&&(6===i[0]||2===i[0])){a=0;continue}if(3===i[0]&&(!s||i[1]>s[0]&&i[1]<s[3])){a.label=i[1];break}if(6===i[0]&&a.label<s[1]){a.label=s[1],s=i;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(i);break}s[2]&&a.ops.pop(),a.trys.pop();continue}i=e.call(t,a)}catch(t){i=[6,t],r=0}finally{n=s=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}}function MS(t){var e="function"==typeof Symbol&&t[Symbol.iterator],n=0;return e?e.call(t):{next:function(){return t&&n>=t.length&&(t=void 0),{value:t&&t[n++],done:!t}}}}function LS(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,s,i=n.call(t),a=[];try{for(;(void 0===e||e-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(t){s={error:t}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(s)throw s.error}}return a}function zS(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(LS(arguments[e]));return t}function BS(t){return _S(this,void 0,void 0,(function(){var e,r,s,i,a;return OS(this,(function(o){switch(o.label){case 0:return e="file://",0!==t.indexOf("http://")&&0!==t.indexOf("https://")?[3,3]:[4,fetch(t)];case 1:return[4,o.sent().json()];case 2:return[2,o.sent()];case 3:return 0!==t.indexOf(e)?[3,5]:(r=n(2993),s=(0,AS.promisify)(r.readFile),a=(i=JSON).parse,[4,s(t.slice(e.length),{encoding:"utf-8"})]);case 4:return[2,a.apply(i,[o.sent()])];case 5:throw new Error("Unsupported URL scheme in metadata URL: "+t+". Supported schemes are: http://, https://, and (node.js-only) file://")}}))}))}var PS=null;function WS(t){return null==PS&&(PS=vs().epsilon()),gs((function(){var e=ra(t),n=e.mean,r=e.variance;return t.sub(n).div(r.sqrt().add(PS))}))}function US(t){return _S(this,void 0,void 0,(function(){return OS(this,(function(e){return[2,navigator.mediaDevices.getUserMedia({audio:null==t||t,video:!1})]}))}))}var VS=function(){function t(t){var e=this;if(null==t)throw new Error("Required configuration object is missing for BrowserFftFeatureExtractor constructor");if(null==t.spectrogramCallback)throw new Error("spectrogramCallback cannot be null or undefined");if(!(t.numFramesPerSpectrogram>0))throw new Error("Invalid value in numFramesPerSpectrogram: "+t.numFramesPerSpectrogram);if(t.suppressionTimeMillis<0)throw new Error("Expected suppressionTimeMillis to be >= 0, but got "+t.suppressionTimeMillis);if(this.suppressionTimeMillis=t.suppressionTimeMillis,this.spectrogramCallback=t.spectrogramCallback,this.numFrames=t.numFramesPerSpectrogram,this.sampleRateHz=t.sampleRateHz||44100,this.fftSize=t.fftSize||1024,this.frameDurationMillis=this.fftSize/this.sampleRateHz*1e3,this.columnTruncateLength=t.columnTruncateLength||this.fftSize,this.overlapFactor=t.overlapFactor,this.includeRawAudio=t.includeRawAudio,h(this.overlapFactor>=0&&this.overlapFactor<1,(function(){return"Expected overlapFactor to be >= 0 and < 1, but got "+e.overlapFactor})),this.columnTruncateLength>this.fftSize)throw new Error("columnTruncateLength "+this.columnTruncateLength+" exceeds fftSize ("+this.fftSize+").");this.audioContextConstructor=window.AudioContext||window.webkitAudioContext}return t.prototype.start=function(t){return _S(this,void 0,void 0,(function(){var e,n,r;return OS(this,(function(s){switch(s.label){case 0:if(null!=this.frameIntervalTask)throw new Error("Cannot start already-started BrowserFftFeatureExtractor");return e=this,[4,US(t)];case 1:return e.stream=s.sent(),this.audioContext=new this.audioContextConstructor,this.audioContext.sampleRate!==this.sampleRateHz&&console.warn("Mismatch in sampling rate: Expected: "+this.sampleRateHz+"; Actual: "+this.audioContext.sampleRate),n=this.audioContext.createMediaStreamSource(this.stream),this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=0,n.connect(this.analyser),this.freqDataQueue=[],this.freqData=new Float32Array(this.fftSize),this.includeRawAudio&&(this.timeDataQueue=[],this.timeData=new Float32Array(this.fftSize)),r=Math.max(1,Math.round(this.numFrames*(1-this.overlapFactor))),this.tracker=new jS(r,Math.round(this.suppressionTimeMillis/this.frameDurationMillis)),this.frameIntervalTask=setInterval(this.onAudioFrame.bind(this),this.fftSize/this.sampleRateHz*1e3),[2]}}))}))},t.prototype.onAudioFrame=function(){return _S(this,void 0,void 0,(function(){var t,e,n,r;return OS(this,(function(s){switch(s.label){case 0:return this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0?[2]:(this.freqDataQueue.push(this.freqData.slice(0,this.columnTruncateLength)),this.includeRawAudio&&(this.analyser.getFloatTimeDomainData(this.timeData),this.timeDataQueue.push(this.timeData.slice())),this.freqDataQueue.length>this.numFrames&&this.freqDataQueue.shift(),this.tracker.tick()?(t=GS(this.freqDataQueue),e=HS(t,[1,this.numFrames,this.columnTruncateLength,1]),n=void 0,this.includeRawAudio&&(r=GS(this.timeDataQueue),n=HS(r,[1,this.numFrames*this.fftSize])),[4,this.spectrogramCallback(e,n)]):[3,2]);case 1:s.sent()&&this.tracker.suppress(),ys([e,n]),s.label=2;case 2:return[2]}}))}))},t.prototype.stop=function(){return _S(this,void 0,void 0,(function(){return OS(this,(function(t){if(null==this.frameIntervalTask)throw new Error("Cannot stop because there is no ongoing streaming activity.");return clearInterval(this.frameIntervalTask),this.frameIntervalTask=null,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop(),[2]}))}))},t.prototype.setConfig=function(t){throw new Error("setConfig() is not implemented for BrowserFftFeatureExtractor.")},t.prototype.getFeatures=function(){throw new Error("getFeatures() is not implemented for BrowserFftFeatureExtractor. Use the spectrogramCallback field of the constructor config instead.")},t}();function GS(t){var e=t[0].length,n=new Float32Array(t.length*e);return t.forEach((function(t,r){return n.set(t,r*e)})),n}function HS(t,e){var n=new Float32Array(m(e));return n.set(t,n.length-t.length),rr(n,e)}var jS=function(){function t(t,e){var n=this;this.period=t,this.suppressionTime=null==e?0:e,this.counter=0,h(this.period>0,(function(){return"Expected period to be positive, but got "+n.period}))}return t.prototype.tick=function(){return this.counter++,this.counter%this.period==0&&(null==this.suppressionOnset||this.counter-this.suppressionOnset>this.suppressionTime)},t.prototype.suppress=function(){this.suppressionOnset=this.counter},t}();function qS(t){var e=0;t.forEach((function(t){e+=t.byteLength}));var n=new Uint8Array(e),r=0;return t.forEach((function(t){n.set(new Uint8Array(t),r),r+=t.byteLength})),n.buffer}function KS(t){if(null==t)throw new Error("Received null or undefind string");for(var e=unescape(encodeURIComponent(t)),n=new Uint8Array(e.length),r=0;r<e.length;++r)n[r]=e.charCodeAt(r);return n.buffer}function XS(t){if(null==t)throw new Error("Received null or undefind buffer");var e=new Uint8Array(t);return decodeURIComponent(escape(String.fromCharCode.apply(String,zS(e))))}var YS="TFJSSCDS",JS="_background_noise_",ZS=function(){function t(t){if(this.examples={},this.label2Ids={},null!=t)for(var e=function(t){h(null!=t,(function(){return"Received null or undefined buffer"}));var e=0;h(XS(t.slice(e,YS.length))===YS,(function(){return"Deserialization error: Invalid descriptor"})),e+=YS.length,e+=4;var n=new Uint32Array(t,e,1),r=e+=4;e=r+n[0];var s=XS(t.slice(r,e));return{manifest:JSON.parse(s),data:t.slice(e)}}(t),n=0,r=0;r<e.manifest.length;++r){var s=e.manifest[r],i=s.spectrogramNumFrames*s.spectrogramFrameSize;null!=s.rawAudioNumSamples&&(i+=s.rawAudioNumSamples),i*=4,this.addExample(tE({spec:s,data:e.data.slice(n,n+i)})),n+=i}}return t.prototype.addExample=function(t){h(null!=t,(function(){return"Got null or undefined example"})),h(null!=t.label&&t.label.length>0,(function(){return"Expected label to be a non-empty string, but got "+JSON.stringify(t.label)}));var e=function(){function t(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return t()+t()+"-"+t()+"-"+t()+"-"+t()+"-"+t()+t()+t()}();return this.examples[e]=t,t.label in this.label2Ids||(this.label2Ids[t.label]=[]),this.label2Ids[t.label].push(e),e},t.prototype.merge=function(t){var e,n,r,s;h(t!==this,(function(){return"Cannot merge a dataset into itself"}));var i=t.getVocabulary();try{for(var a=MS(i),o=a.next();!o.done;o=a.next()){var l=o.value,u=t.getExamples(l);try{for(var c=(r=void 0,MS(u)),d=c.next();!d.done;d=c.next()){var p=d.value;this.addExample(p.example)}}catch(t){r={error:t}}finally{try{d&&!d.done&&(s=c.return)&&s.call(c)}finally{if(r)throw r.error}}}}catch(t){e={error:t}}finally{try{o&&!o.done&&(n=a.return)&&n.call(a)}finally{if(e)throw e.error}}},t.prototype.getExampleCounts=function(){var t={};for(var e in this.examples){var n=this.examples[e];n.label in t||(t[n.label]=0),t[n.label]++}return t},t.prototype.getExamples=function(t){var e=this;h(null!=t,(function(){return"Expected label to be a string, but got "+JSON.stringify(t)})),h(t in this.label2Ids,(function(){return'No example of label "'+t+'" exists in dataset'}));var n=[];return this.label2Ids[t].forEach((function(t){n.push({uid:t,example:e.examples[t]})})),n},t.prototype.getData=function(t,e){var n=this;h(this.size()>0,(function(){return"Cannot get spectrograms as tensors because the dataset is empty"}));var r=this.getVocabulary();null!=t?h(-1!==r.indexOf(t),(function(){return"Label "+t+" is not in the vocabulary ("+JSON.stringify(r)+")"})):h(r.length>1,(function(){return"One-hot encoding of labels requires the vocabulary to have at least two words, but it has only "+r.length+" word."})),null==e&&(e={});var s,i,a=this.getSortedUniqueNumFrames();1===a.length?(s=null==e.numFrames?a[0]:e.numFrames,i=null==e.hopFrames?1:e.hopFrames):(h(null!=(s=e.numFrames)&&Number.isInteger(s)&&s>0,(function(){return"There are "+a.length+" unique lengths among the "+n.size()+" examples of this Dataset, hence numFrames is required. But it is not provided."})),h(s<=a[0],(function(){return"numFrames ("+s+") exceeds the minimum numFrames ("+a[0]+") among the examples of the Dataset."})),h(null!=(i=e.hopFrames)&&Number.isInteger(i)&&i>0,(function(){return"There are "+a.length+" unique lengths among the "+n.size()+" examples of this Dataset, hence hopFrames is required. But it is not provided."})));var o=null==e.normalize||e.normalize;return gs((function(){for(var a,u,c,d=[],p=[],f=[],m=0;m<r.length;++m){var g=r[m];if(null==t||g===t){var y=n.label2Ids[g],b=function(r){var a,l,u=n.examples[r].spectrogram,y=u.frameSize;null==c?c=y:h(y===c,(function(){return"Mismatch in frameSize  ("+y+" vs "+c+")"}));var b=u.data.length/y,x=null;g!==JS&&(x=null==u.keyFrameIndex?nE(u).dataSync()[0]:u.keyFrameIndex);var v=Ba(u.data,[b,y,1]),w=eE(b,x,s,i),k=function(n){var r=gs((function(){var t=v.slice([n[0],0,0],[n[1]-n[0],-1,-1]);return o?WS(t):t}));e.getDataset?p.push(r.dataSync()):d.push(r),null==t&&f.push(m)};try{for(var I=(a=void 0,MS(w)),C=I.next();!C.done;C=I.next())k(C.value)}catch(t){a={error:t}}finally{try{C&&!C.done&&(l=I.return)&&l.call(I)}finally{if(a)throw a.error}}ys(v)};try{for(var x=(a=void 0,MS(y)),v=x.next();!v.done;v=x.next())b(v.value)}catch(t){a={error:t}}finally{try{v&&!v.done&&(u=x.return)&&u.call(x)}finally{if(a)throw a.error}}}}null!=e.augmentByMixingNoiseRatio&&n.augmentByMixingNoise(e.getDataset?p:d,f,e.augmentByMixingNoiseRatio);var w=null==e.shuffle||e.shuffle;if(e.getDataset){var k=null==e.datasetBatchSize?32:e.datasetBatchSize,I=null==e.datasetValidationSplit?.15:e.datasetValidationSplit;h(I>0&&I<1,(function(){return"Invalid dataset validation split: "+I}));var C=p.map((function(t,e){return[t,f[e]]}));l(C),p=C.map((function(t){return t[0]}));var S=C.map((function(t){return t[1]})),E=function(t,e,n){var r,s,i,a,o,u,c,d;h(n>0&&n<1,(function(){return"validationSplit is expected to be >0 and <1, but got "+n}));for(var p=!Array.isArray(t[0]),f=e,m=[],g=0;g<f.length;++g){var y=f[g];null==m[y]&&(m[y]=[]),m[y].push(g)}var b=m.length,x=[],v=[];for(m.map((function(t){return l(t)})),g=0;g<b;++g)for(var w=m[g],k=Math.round(w.length*(1-n)),I=0;I<w.length;++I)I<k?x.push(w[I]):v.push(w[I]);if(p){var C=[],S=[],E=[],$=[];try{for(var N=MS(x),R=N.next();!R.done;R=N.next()){var T=R.value;C.push(t[T]),S.push(e[T])}}catch(t){r={error:t}}finally{try{R&&!R.done&&(s=N.return)&&s.call(N)}finally{if(r)throw r.error}}try{for(var A=MS(v),F=A.next();!F.done;F=A.next())T=F.value,E.push(t[T]),$.push(e[T])}catch(t){i={error:t}}finally{try{F&&!F.done&&(a=A.return)&&a.call(A)}finally{if(i)throw i.error}}return{trainXs:C,trainYs:S,valXs:E,valYs:$}}C=[],S=[],E=[],$=[];try{for(var D=MS(x),_=D.next();!_.done;_=D.next())T=_.value,C.push(t[T]),S.push(e[T])}catch(t){o={error:t}}finally{try{_&&!_.done&&(u=D.return)&&u.call(D)}finally{if(o)throw o.error}}try{for(var O=MS(v),M=O.next();!M.done;M=O.next())T=M.value,E.push(t[T]),$.push(e[T])}catch(t){c={error:t}}finally{try{M&&!M.done&&(d=O.return)&&d.call(O)}finally{if(c)throw c.error}}return{trainXs:C,trainYs:S,valXs:E,valYs:$}}(p,S,I),$=E.trainXs,N=E.trainYs,R=E.valXs,T=E.valYs,A=yy({xs:gy($).map((function(t){return Ba(t,[s,c,1])})),ys:gy(N).map((function(t){return aa([t],r.length).squeeze([0])}))});w&&(A=A.shuffle(p.length)),A=A.batch(k).prefetch(4);var F=yy({xs:gy(R).map((function(t){return Ba(t,[s,c,1])})),ys:gy(T).map((function(t){return aa([t],r.length).squeeze([0])}))});return[A,F=F.batch(k).prefetch(4)]}if(w){var D=[];d.forEach((function(t,e){D.push({x:t,y:f[e]})})),l(D),d=D.map((function(t){return t.x})),f=D.map((function(t){return t.y}))}var _=null==t?aa(ba(f,"int32"),r.length).asType("float32"):void 0;return{xs:Ma(d),ys:_}}))},t.prototype.augmentByMixingNoise=function(t,e,n){var r,s;if(null==t||0===t.length)throw new Error("Cannot perform augmentation because data is null or empty");for(var i=t[0]instanceof Float32Array,a=this.getVocabulary(),o=[],l=[],u=0;u<e.length;++u)a[e[u]]===JS?o.push(u):l.push(u);if(0===o.length)throw new Error("Cannot perform augmentation by mixing with noise when there is no example with label _background_noise_");var c=[],h=[],d=function(r){var s=o[function(t,e){return Math.floor((e-0)*Math.random())+0}(0,o.length)],a=i?ba(t[r]):t[r],l=i?ba(t[s]):t[s],u=gs((function(){return WS(a.add(l.mul(n)))}));i?c.push(u.dataSync()):c.push(u),h.push(e[r])};try{for(var p=MS(l),f=p.next();!f.done;f=p.next())d(f.value)}catch(t){r={error:t}}finally{try{f&&!f.done&&(s=p.return)&&s.call(p)}finally{if(r)throw r.error}}console.log("Data augmentation: mixing noise: added "+c.length+" examples"),c.forEach((function(e){return t.push(e)})),e.push.apply(e,zS(h))},t.prototype.getSortedUniqueNumFrames=function(){for(var t,e,n=new Set,r=this.getVocabulary(),s=0;s<r.length;++s){var i=r[s],a=this.label2Ids[i];try{for(var o=(t=void 0,MS(a)),l=o.next();!l.done;l=o.next()){var u=l.value,c=this.examples[u].spectrogram,h=c.data.length/c.frameSize;n.add(h)}}catch(e){t={error:e}}finally{try{l&&!l.done&&(e=o.return)&&e.call(o)}finally{if(t)throw t.error}}}var d=zS(n);return d.sort(),d},t.prototype.removeExample=function(t){if(!(t in this.examples))throw new Error("Nonexistent example UID: "+t);var e=this.examples[t].label;delete this.examples[t];var n=this.label2Ids[e].indexOf(t);this.label2Ids[e].splice(n,1),0===this.label2Ids[e].length&&delete this.label2Ids[e]},t.prototype.setExampleKeyFrameIndex=function(t,e){if(!(t in this.examples))throw new Error("Nonexistent example UID: "+t);var n=this.examples[t].spectrogram,r=n.data.length/n.frameSize;h(e>=0&&e<r&&Number.isInteger(e),(function(){return"Invalid keyFrameIndex: "+e+". Must be >= 0, < "+r+", and an integer."})),n.keyFrameIndex=e},t.prototype.size=function(){return Object.keys(this.examples).length},t.prototype.durationMillis=function(){var t=0;for(var e in this.examples){var n=this.examples[e].spectrogram,r=23.22|n.frameDurationMillis;t+=n.data.length/n.frameSize*r}return t},t.prototype.empty=function(){return 0===this.size()},t.prototype.clear=function(){this.examples={}},t.prototype.getVocabulary=function(){var t=new Set;for(var e in this.examples){var n=this.examples[e];t.add(n.label)}var r=zS(t);return r.sort(),r},t.prototype.serialize=function(t){var e,n,r,s,i=this.getVocabulary();h(!this.empty(),(function(){return"Cannot serialize empty Dataset"})),null!=t&&(Array.isArray(t)||(t=[t]),t.forEach((function(t){if(-1===i.indexOf(t))throw new Error('Word label "'+t+'" does not exist in the vocabulary of this dataset. The vocabulary is: '+JSON.stringify(i)+".")})));var a=[],o=[];try{for(var l=MS(i),u=l.next();!u.done;u=l.next()){var c=u.value;if(null==t||-1!==t.indexOf(c)){var d=this.label2Ids[c];try{for(var p=(r=void 0,MS(d)),f=p.next();!f.done;f=p.next()){var m=f.value,g=QS(this.examples[m]);a.push(g.spec),o.push(g.data)}}catch(t){r={error:t}}finally{try{f&&!f.done&&(s=p.return)&&s.call(p)}finally{if(r)throw r.error}}}}}catch(t){e={error:t}}finally{try{u&&!u.done&&(n=l.return)&&n.call(l)}finally{if(e)throw e.error}}return function(t){var e=KS(JSON.stringify(t.manifest)),n=KS(YS),r=new Uint32Array([1]),s=new Uint32Array([e.byteLength]);return qS([qS([n,r.buffer,s.buffer]),e,t.data])}({manifest:a,data:qS(o)})},t}();function QS(t){var e=null!=t.rawAudio,n={label:t.label,spectrogramNumFrames:t.spectrogram.data.length/t.spectrogram.frameSize,spectrogramFrameSize:t.spectrogram.frameSize};null!=t.spectrogram.keyFrameIndex&&(n.spectrogramKeyFrameIndex=t.spectrogram.keyFrameIndex);var r=t.spectrogram.data.buffer.slice(0);return e&&(n.rawAudioNumSamples=t.rawAudio.data.length,n.rawAudioSampleRateHz=t.rawAudio.sampleRateHz,r=qS([r,t.rawAudio.data.buffer])),{spec:n,data:r}}function tE(t){var e={frameSize:t.spec.spectrogramFrameSize,data:new Float32Array(t.data.slice(0,4*t.spec.spectrogramFrameSize*t.spec.spectrogramNumFrames))};null!=t.spec.spectrogramKeyFrameIndex&&(e.keyFrameIndex=t.spec.spectrogramKeyFrameIndex);var n={label:t.spec.label,spectrogram:e};return null!=t.spec.rawAudioNumSamples&&(n.rawAudio={sampleRateHz:t.spec.rawAudioSampleRateHz,data:new Float32Array(t.data.slice(4*t.spec.spectrogramFrameSize*t.spec.spectrogramNumFrames))}),n}function eE(t,e,n,r){if(h(Number.isInteger(t)&&t>0,(function(){return"snippetLength must be a positive integer, but got "+t})),null!=e&&h(Number.isInteger(e)&&e>=0,(function(){return"focusIndex must be a non-negative integer, but got "+e})),h(Number.isInteger(n)&&n>0,(function(){return"windowLength must be a positive integer, but got "+n})),h(Number.isInteger(r)&&r>0,(function(){return"windowHop must be a positive integer, but got "+r})),h(n<=t,(function(){return"windowLength ("+n+") exceeds snippetLength ("+t+")"})),h(e<t,(function(){return"focusIndex ("+e+") equals or exceeds snippetLength ("+t+")"})),n===t)return[[0,t]];var s=[];if(null==e){for(var i=0;i+n<=t;)s.push([i,i+n]),i+=r;return s}var a=Math.floor(n/2),o=e-a;for(o<0?o=0:o+n>t&&(o=t-n);!(o-r<0||e>=o-r+n);)o-=r;for(;o+n<=t&&!(e<o);)s.push([o,o+n]),o+=r;return s}function nE(t){return gs((function(){return function(t){return gs((function(){var e=t.data.length/t.frameSize;return za(t.data,[e,t.frameSize]).mean(-1)}))}(t).argMax()}))}var rE="0.4.2",sE="tfjs-speech-commands-saved-model-metadata",iE={localStorage:"undefined"==typeof window?null:window.localStorage},aE=.25,oE=function(){function t(e,n,r){this.MODEL_URL_PREFIX="https://storage.googleapis.com/tfjs-models/tfjs/speech-commands/v"+function(t){return t.split(".").slice(0,2).join(".")}(rE)+"/browser_fft",this.SAMPLE_RATE_HZ=44100,this.FFT_SIZE=1024,this.DEFAULT_SUPPRESSION_TIME_MILLIS=0,this.streaming=!1,this.transferRecognizers={},h(null==n&&null==r||null!=n&&null!=r,(function(){return"modelURL and metadataURL must be both provided or both not provided."})),null==n?(null==e?e=t.DEFAULT_VOCABULARY_NAME:h(-1!==t.VALID_VOCABULARY_NAMES.indexOf(e),(function(){return"Invalid vocabulary name: '"+e+"'"})),this.vocabulary=e,this.modelArtifactsOrURL=this.MODEL_URL_PREFIX+"/"+this.vocabulary+"/model.json",this.metadataOrURL=this.MODEL_URL_PREFIX+"/"+this.vocabulary+"/metadata.json"):(h(null==e,(function(){return"vocabulary name must be null or undefined when modelURL is provided"})),this.modelArtifactsOrURL=n,this.metadataOrURL=r),this.parameters={sampleRateHz:this.SAMPLE_RATE_HZ,fftSize:this.FFT_SIZE}}return t.prototype.listen=function(t,e){return _S(this,void 0,void 0,(function(){var n,r,s,i,a,o=this;return OS(this,(function(l){switch(l.label){case 0:if(this.streaming)throw new Error("Cannot start streaming again when streaming is ongoing.");return[4,this.ensureModelLoaded()];case 1:if(l.sent(),null==e&&(e={}),n=null==e.probabilityThreshold?0:e.probabilityThreshold,e.includeEmbedding&&(n=0),h(n>=0&&n<=1,(function(){return"Invalid probabilityThreshold value: "+n})),r=null!=e.invokeCallbackOnNoiseAndUnknown&&e.invokeCallbackOnNoiseAndUnknown,e.includeEmbedding&&(r=!0),e.suppressionTimeMillis<0)throw new Error("suppressionTimeMillis is expected to be >= 0, but got "+e.suppressionTimeMillis);return h((s=null==e.overlapFactor?.5:e.overlapFactor)>=0&&s<1,(function(){return"Expected overlapFactor to be >= 0 and < 1, but got "+s})),i=function(s,i){return _S(o,void 0,void 0,(function(){var i,a,o,l,u,c,h,d,p,f,m;return OS(this,(function(g){switch(g.label){case 0:return i=WS(s),e.includeEmbedding?[4,this.ensureModelWithEmbeddingOutputCreated()]:[3,2];case 1:return g.sent(),m=LS(this.modelWithEmbeddingOutput.predict(i),2),a=m[0],o=m[1],[3,3];case 2:a=this.model.predict(i),g.label=3;case 3:return[4,a.data()];case 4:return l=g.sent(),[4,(u=a.argMax(-1)).data()];case 5:return c=g.sent()[0],h=Math.max.apply(Math,zS(l)),ys([a,u,i]),h<n?[2,!1]:[3,6];case 6:return d=void 0,e.includeSpectrogram?(p={},[4,s.data()]):[3,8];case 7:p.data=g.sent(),p.frameSize=this.nonBatchInputShape[1],d=p,g.label=8;case 8:return f=!0,r||this.words[c]!==JS&&"_unknown_"!==this.words[c]||(f=!1),f&&t({scores:l,spectrogram:d,embedding:o}),[2,f]}}))}))},a=null==e.suppressionTimeMillis?this.DEFAULT_SUPPRESSION_TIME_MILLIS:e.suppressionTimeMillis,this.audioDataExtractor=new VS({sampleRateHz:this.parameters.sampleRateHz,numFramesPerSpectrogram:this.nonBatchInputShape[0],columnTruncateLength:this.nonBatchInputShape[1],suppressionTimeMillis:a,spectrogramCallback:i,overlapFactor:s}),[4,this.audioDataExtractor.start(e.audioTrackConstraints)];case 2:return l.sent(),this.streaming=!0,[2]}}))}))},t.prototype.ensureModelLoaded=function(){return _S(this,void 0,void 0,(function(){var t,e,n,r,s=this;return OS(this,(function(i){switch(i.label){case 0:return null!=this.model?[2]:[4,this.ensureMetadataLoaded()];case 1:return i.sent(),"string"!=typeof this.modelArtifactsOrURL?[3,3]:[4,zf(this.modelArtifactsOrURL)];case 2:return t=i.sent(),[3,5];case 3:return[4,zf(Kr(this.modelArtifactsOrURL.modelTopology,this.modelArtifactsOrURL.weightSpecs,this.modelArtifactsOrURL.weightData))];case 4:t=i.sent(),i.label=5;case 5:if(1!==t.inputs.length)throw new Error("Expected model to have 1 input, but got a model with "+t.inputs.length+" inputs");if(4!==t.inputs[0].shape.length)throw new Error("Expected model to have an input shape of rank 4, but got an input shape of rank "+t.inputs[0].shape.length);if(1!==t.inputs[0].shape[3])throw new Error("Expected model to have an input shape with 1 as the last dimension, but got input shape"+JSON.stringify(t.inputs[0].shape[3])+"}");if(2!==(e=t.outputShape).length)throw new Error("Expected loaded model to have an output shape of rank 2,but received shape "+JSON.stringify(e));if(e[1]!==this.words.length)throw new Error("Mismatch between the last dimension of model's output shape ("+e[1]+") and number of words ("+this.words.length+").");return this.model=t,this.freezeModel(),this.nonBatchInputShape=t.inputs[0].shape.slice(1),this.elementsPerExample=1,t.inputs[0].shape.slice(1).forEach((function(t){return s.elementsPerExample*=t})),this.warmUpModel(),n=this.parameters.fftSize/this.parameters.sampleRateHz*1e3,r=t.inputs[0].shape[1],this.parameters.spectrogramDurationMillis=r*n,[2]}}))}))},t.prototype.ensureModelWithEmbeddingOutputCreated=function(){return _S(this,void 0,void 0,(function(){var t,e;return OS(this,(function(n){switch(n.label){case 0:return null!=this.modelWithEmbeddingOutput?[2]:[4,this.ensureModelLoaded()];case 1:for(n.sent(),e=this.model.layers.length-2;e>=0;--e)if("Dense"===this.model.layers[e].getClassName()){t=this.model.layers[e];break}if(null==t)throw new Error("Failed to find second last dense layer in the original model.");return this.modelWithEmbeddingOutput=Lf({inputs:this.model.inputs,outputs:[this.model.outputs[0],t.output]}),[2]}}))}))},t.prototype.warmUpModel=function(){var t=this;gs((function(){for(var e=Ji([1].concat(t.nonBatchInputShape)),n=0;n<3;++n)t.model.predict(e)}))},t.prototype.ensureMetadataLoaded=function(){return _S(this,void 0,void 0,(function(){var t,e,n;return OS(this,(function(r){switch(r.label){case 0:return null!=this.words?[2]:"string"!=typeof this.metadataOrURL?[3,2]:[4,BS(this.metadataOrURL)];case 1:return e=r.sent(),[3,3];case 2:e=this.metadataOrURL,r.label=3;case 3:if(null==(t=e).wordLabels){if(null==(n=t.words))throw new Error('Cannot find field "words" or "wordLabels" in metadata JSON file');this.words=n}else this.words=t.wordLabels;return[2]}}))}))},t.prototype.stopListening=function(){return _S(this,void 0,void 0,(function(){return OS(this,(function(t){switch(t.label){case 0:if(!this.streaming)throw new Error("Cannot stop streaming when streaming is not ongoing.");return[4,this.audioDataExtractor.stop()];case 1:return t.sent(),this.streaming=!1,[2]}}))}))},t.prototype.isListening=function(){return this.streaming},t.prototype.wordLabels=function(){return this.words},t.prototype.params=function(){return this.parameters},t.prototype.modelInputShape=function(){if(null==this.model)throw new Error("Model has not been loaded yet. Load model by calling ensureModelLoaded(), recognize(), or listen().");return this.model.inputs[0].shape},t.prototype.recognize=function(t,e){return _S(this,void 0,void 0,(function(){var n,r,s,i,a,o,l,u,c,h,d,p,f;return OS(this,(function(m){switch(m.label){case 0:return null==e&&(e={}),[4,this.ensureModelLoaded()];case 1:return m.sent(),null!=t?[3,3]:[4,this.recognizeOnline()];case 2:n=m.sent(),t=n.data,m.label=3;case 3:if(t instanceof Nn)this.checkInputTensorShape(t),s=t,r=t.shape[0];else{if(t.length%this.elementsPerExample)throw new Error("The length of the input Float32Array "+t.length+" is not divisible by the number of tensor elements per per example expected by the model "+this.elementsPerExample+".");r=t.length/this.elementsPerExample,s=Pa(t,[r].concat(this.nonBatchInputShape))}return a={scores:null},e.includeEmbedding?[4,this.ensureModelWithEmbeddingOutputCreated()]:[3,5];case 4:return m.sent(),o=this.modelWithEmbeddingOutput.predict(s),i=o[0],a.embedding=o[1],[3,6];case 5:i=this.model.predict(s),m.label=6;case 6:return 1!==r?[3,8]:(l=a,[4,i.data()]);case 7:return l.scores=m.sent(),[3,10];case 8:return u=Ua(i),c=u.map((function(t){return t.data()})),h=a,[4,Promise.all(c)];case 9:h.scores=m.sent(),ys(u),m.label=10;case 10:return e.includeSpectrogram?(d=a,p={},t instanceof Nn?[4,t.data()]:[3,12]):[3,14];case 11:return f=m.sent(),[3,13];case 12:f=t,m.label=13;case 13:d.spectrogram=(p.data=f,p.frameSize=this.nonBatchInputShape[1],p),m.label=14;case 14:return ys(i),[2,a]}}))}))},t.prototype.recognizeOnline=function(){return _S(this,void 0,void 0,(function(){var t=this;return OS(this,(function(e){return[2,new Promise((function(e,n){t.audioDataExtractor=new VS({sampleRateHz:t.parameters.sampleRateHz,numFramesPerSpectrogram:t.nonBatchInputShape[0],columnTruncateLength:t.nonBatchInputShape[1],suppressionTimeMillis:0,spectrogramCallback:function(n){return _S(t,void 0,void 0,(function(){var t,r,s;return OS(this,(function(i){switch(i.label){case 0:return t=WS(n),[4,this.audioDataExtractor.stop()];case 1:return i.sent(),r=e,s={},[4,t.data()];case 2:return r.apply(void 0,[(s.data=i.sent(),s.frameSize=this.nonBatchInputShape[1],s)]),t.dispose(),[2,!1]}}))}))},overlapFactor:0}),t.audioDataExtractor.start()}))]}))}))},t.prototype.createTransfer=function(t){if(null==this.model)throw new Error("Model has not been loaded yet. Load model by calling ensureModelLoaded(), recognizer(), or listen().");h(null!=t&&"string"==typeof t&&t.length>1,(function(){return"Expected the name for a transfer-learning recognized to be a non-empty string, but got "+JSON.stringify(t)})),h(null==this.transferRecognizers[t],(function(){return"There is already a transfer-learning model named '"+t+"'"}));var e=new lE(t,this.parameters,this.model);return this.transferRecognizers[t]=e,e},t.prototype.freezeModel=function(){var t,e;try{for(var n=MS(this.model.layers),r=n.next();!r.done;r=n.next())r.value.trainable=!1}catch(e){t={error:e}}finally{try{r&&!r.done&&(e=n.return)&&e.call(n)}finally{if(t)throw t.error}}},t.prototype.checkInputTensorShape=function(t){var e=this.model.inputs[0].shape.length;if(t.shape.length!==e)throw new Error("Expected input Tensor to have rank "+e+", but got rank "+t.shape.length+" that differs ");var n=t.shape.slice(1),r=this.model.inputs[0].shape.slice(1);if(!g(n,r))throw new Error("Expected input to have shape [null,"+r+"], but got shape [null,"+n+"]")},t.VALID_VOCABULARY_NAMES=["18w","directional4w"],t.DEFAULT_VOCABULARY_NAME="18w",t}(),lE=function(t){function e(e,n,r){var s=t.call(this)||this;return s.name=e,s.parameters=n,s.baseModel=r,h(null!=e&&"string"==typeof e&&e.length>0,(function(){return"The name of a transfer model must be a non-empty string, but got "+JSON.stringify(e)})),s.nonBatchInputShape=s.baseModel.inputs[0].shape.slice(1),s.words=null,s.dataset=new ZS,s}return function(t,e){function n(){this.constructor=t}FS(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}(e,t),e.prototype.collectExample=function(t,e){return _S(this,void 0,void 0,(function(){var n,r,s,i,a=this;return OS(this,(function(o){if(h(!this.streaming,(function(){return"Cannot start collection of transfer-learning example because a streaming recognition or transfer-learning example collection is ongoing"})),h(null!=t&&"string"==typeof t&&t.length>0,(function(){return"Must provide a non-empty string when collecting transfer-learning example"})),null==e&&(e={}),null!=e.durationMultiplier&&null!=e.durationSec)throw new Error("durationMultiplier and durationSec are mutually exclusive, but are both specified.");return null!=e.durationSec?(h(e.durationSec>0,(function(){return"Expected durationSec to be > 0, but got "+e.durationSec})),r=this.parameters.fftSize/this.parameters.sampleRateHz,n=Math.ceil(e.durationSec/r)):null!=e.durationMultiplier?(h(e.durationMultiplier>=1,(function(){return"Expected duration multiplier to be >= 1, but got "+e.durationMultiplier})),n=Math.round(this.nonBatchInputShape[0]*e.durationMultiplier)):n=this.nonBatchInputShape[0],null!=e.snippetDurationSec&&(h(e.snippetDurationSec>0,(function(){return"snippetDurationSec is expected to be > 0, but got "+e.snippetDurationSec})),h(null!=e.onSnippet,(function(){return"onSnippet must be provided if snippetDurationSec is provided."}))),null!=e.onSnippet&&h(null!=e.snippetDurationSec,(function(){return"snippetDurationSec must be provided if onSnippet is provided."})),s=this.parameters.fftSize/this.parameters.sampleRateHz,i=s*n,this.streaming=!0,[2,new Promise((function(r){var s=null==e.snippetDurationSec?1:e.snippetDurationSec/i,o=1-s,l=Math.round(1/s),u=0,c=-1,h=[];a.audioDataExtractor=new VS({sampleRateHz:a.parameters.sampleRateHz,numFramesPerSpectrogram:n,columnTruncateLength:a.nonBatchInputShape[1],suppressionTimeMillis:0,spectrogramCallback:function(n,s){return _S(a,void 0,void 0,(function(){var i,a,o,d,p,f,m,g,y,b,x,v,w,k,I,C,S,E,$,N;return OS(this,(function(R){switch(R.label){case 0:return null!=e.onSnippet?[3,7]:(i=WS(n),o=(a=this.dataset).addExample,d={label:t},p={},[4,i.data()]);case 1:return d.spectrogram=(p.data=R.sent(),p.frameSize=this.nonBatchInputShape[1],p),e.includeRawAudio?(m={},[4,s.data()]):[3,3];case 2:return m.data=R.sent(),m.sampleRateHz=this.audioDataExtractor.sampleRateHz,f=m,[3,4];case 3:f=void 0,R.label=4;case 4:return o.apply(a,[(d.rawAudio=f,d)]),i.dispose(),[4,this.audioDataExtractor.stop()];case 5:return R.sent(),this.streaming=!1,this.collateTransferWords(),g=r,y={},[4,n.data()];case 6:return g.apply(void 0,[(y.data=R.sent(),y.frameSize=this.nonBatchInputShape[1],y)]),[3,13];case 7:return[4,n.data()];case 8:for(b=R.sent(),-1===c&&(c=b.length),x=c-1;0!==b[x]&&x>=0;)x--;return v=c-x-1,c=x+1,w=b.slice(b.length-v,b.length),h.push(w),null!=e.onSnippet&&e.onSnippet({data:w,frameSize:this.nonBatchInputShape[1]}),u++!==l?[3,13]:[4,this.audioDataExtractor.stop()];case 9:return R.sent(),this.streaming=!1,this.collateTransferWords(),k=function(t){if(t.length<2)throw new Error("Cannot normalize a Float32Array with fewer than 2 elements.");return null==PS&&(PS=vs().epsilon()),gs((function(){var e=ra(ba(t)),n=e.mean,r=e.variance,s=n.arraySync(),i=Math.sqrt(r.arraySync()),a=Array.from(t).map((function(t){return(t-s)/(i+PS)}));return new Float32Array(a)}))}(function(t){var e=0;t.forEach((function(t){return e+=t.length}));var n=new Float32Array(e),r=0;return t.forEach((function(t){n.set(t,r),r+=t.length})),n}(h)),I={data:k,frameSize:this.nonBatchInputShape[1]},S=(C=this.dataset).addExample,E={label:t,spectrogram:I},e.includeRawAudio?(N={},[4,s.data()]):[3,11];case 10:return N.data=R.sent(),N.sampleRateHz=this.audioDataExtractor.sampleRateHz,$=N,[3,12];case 11:$=void 0,R.label=12;case 12:S.apply(C,[(E.rawAudio=$,E)]),r(I),R.label=13;case 13:return[2,!1]}}))}))},overlapFactor:o,includeRawAudio:e.includeRawAudio}),a.audioDataExtractor.start(e.audioTrackConstraints)}))]}))}))},e.prototype.clearExamples=function(){var t=this;h(null!=this.words&&this.words.length>0&&!this.dataset.empty(),(function(){return"No transfer learning examples exist for model name "+t.name})),this.dataset.clear(),this.words=null},e.prototype.countExamples=function(){if(this.dataset.empty())throw new Error("No examples have been collected for transfer-learning model named '"+this.name+"' yet.");return this.dataset.getExampleCounts()},e.prototype.getExamples=function(t){return this.dataset.getExamples(t)},e.prototype.setExampleKeyFrameIndex=function(t,e){this.dataset.setExampleKeyFrameIndex(t,e)},e.prototype.removeExample=function(t){this.dataset.removeExample(t),this.collateTransferWords()},e.prototype.isDatasetEmpty=function(){return this.dataset.empty()},e.prototype.loadExamples=function(t,e){var n,r,s,i;void 0===e&&(e=!1);var a=new ZS(t);e&&this.clearExamples();var o=a.getVocabulary();try{for(var l=MS(o),u=l.next();!u.done;u=l.next()){var c=u.value,h=a.getExamples(c);try{for(var d=(s=void 0,MS(h)),p=d.next();!p.done;p=d.next()){var f=p.value;this.dataset.addExample(f.example)}}catch(t){s={error:t}}finally{try{p&&!p.done&&(i=d.return)&&i.call(d)}finally{if(s)throw s.error}}}}catch(t){n={error:t}}finally{try{u&&!u.done&&(r=l.return)&&r.call(l)}finally{if(n)throw n.error}}this.collateTransferWords()},e.prototype.serializeExamples=function(t){return this.dataset.serialize(t)},e.prototype.collateTransferWords=function(){this.words=this.dataset.getVocabulary()},e.prototype.collectTransferDataAsTensors=function(t,e){var n=this.nonBatchInputShape[0];t=t||aE;var r=Math.round(t*n),s=this.dataset.getData(null,DS({numFrames:n,hopFrames:r},e));return{xs:s.xs,ys:s.ys}},e.prototype.collectTransferDataAsTfDataset=function(t,e,n,r){void 0===e&&(e=.15),void 0===n&&(n=32);var s=this.nonBatchInputShape[0];t=t||aE;var i=Math.round(t*s);return this.dataset.getData(null,DS({numFrames:s,hopFrames:i,getDataset:!0,datasetBatchSize:n,datasetValidationSplit:e},r))},e.prototype.train=function(t){return _S(this,void 0,void 0,(function(){var e,n=this;return OS(this,(function(r){return h(null!=this.words&&this.words.length>0,(function(){return"Cannot train transfer-learning model '"+n.name+"' because no transfer learning example has been collected."})),h(this.words.length>1,(function(){return"Cannot train transfer-learning model '"+n.name+"' because only 1 word label ('"+JSON.stringify(n.words)+"') has been collected for transfer learning. Requires at least 2."})),null!=t.fineTuningEpochs&&h(t.fineTuningEpochs>=0&&Number.isInteger(t.fineTuningEpochs),(function(){return"If specified, fineTuningEpochs must be a non-negative integer, but received "+t.fineTuningEpochs})),null==t&&(t={}),null==this.model&&this.createTransferModelFromBaseModel(),this.secondLastBaseDenseLayer.trainable=!1,this.model.compile({loss:"categoricalCrossentropy",optimizer:t.optimizer||"sgd",metrics:["acc"]}),e=null==t.fitDatasetDurationMillisThreshold?6e4:t.fitDatasetDurationMillisThreshold,this.dataset.durationMillis()>e?(console.log("Detected large dataset: total duration = "+this.dataset.durationMillis()+" ms > "+e+" ms. Training transfer model using fitDataset() instead of fit()"),[2,this.trainOnDataset(t)]):[2,this.trainOnTensors(t)]}))}))},e.prototype.trainOnDataset=function(t){return _S(this,void 0,void 0,(function(){var e,n,r,s,i,a,o,l,u;return OS(this,(function(c){switch(c.label){case 0:return h(t.epochs>0,(function(){return"Invalid config.epochs"})),e=null==t.batchSize?32:t.batchSize,n=t.windowHopRatio||aE,r=LS(this.collectTransferDataAsTfDataset(n,t.validationSplit,e,{augmentByMixingNoiseRatio:t.augmentByMixingNoiseRatio}),2),s=r[0],i=r[1],a=wn(),[4,this.model.fitDataset(s,{epochs:t.epochs,validationData:t.validationSplit>0?i:null,callbacks:null==t.callback?null:[t.callback]})];case 1:return o=c.sent(),console.log("fitDataset() took "+(wn()-a).toFixed(2)+" ms"),null!=t.fineTuningEpochs&&t.fineTuningEpochs>0?(l=wn(),[4,this.fineTuningUsingTfDatasets(t,s,i)]):[3,3];case 2:return u=c.sent(),console.log("fitDataset() (fine-tuning) took "+(wn()-l).toFixed(2)+" ms"),[2,[o,u]];case 3:return[2,o]}}))}))},e.prototype.trainOnTensors=function(t){return _S(this,void 0,void 0,(function(){var e,n,r,s,i,a,o,u,c,d;return OS(this,(function(p){switch(p.label){case 0:e=t.windowHopRatio||aE,n=this.collectTransferDataAsTensors(e,{augmentByMixingNoiseRatio:t.augmentByMixingNoiseRatio}),r=n.xs,s=n.ys,console.log("Training data: xs.shape = "+r.shape+", ys.shape = "+s.shape),p.label=1;case 1:return p.trys.push([1,,6,7]),null!=t.validationSplit?(u=function(t,e,n){return h(n>0&&n<1,(function(){return"validationSplit is expected to be >0 and <1, but got "+n})),gs((function(){for(var r=e.argMax(-1).dataSync(),s=[],i=0;i<r.length;++i){var a=r[i];null==s[a]&&(s[a]=[]),s[a].push(i)}var o=s.length,u=[],c=[];for(s.map((function(t){return l(t)})),i=0;i<o;++i)for(var h=s[i],d=Math.round(h.length*(1-n)),p=0;p<h.length;++p)p<d?u.push(h[p]):c.push(h[p]);return{trainXs:Li(t,u),trainYs:Li(e,u),valXs:Li(t,c),valYs:Li(e,c)}}))}(r,s,t.validationSplit),i=u.trainXs,a=u.trainYs,o=[u.valXs,u.valYs]):(i=r,a=s),[4,this.model.fit(i,a,{epochs:null==t.epochs?20:t.epochs,validationData:o,batchSize:t.batchSize,callbacks:null==t.callback?null:[t.callback]})];case 2:return c=p.sent(),null!=t.fineTuningEpochs&&t.fineTuningEpochs>0?[4,this.fineTuningUsingTensors(t,i,a,o)]:[3,4];case 3:return d=p.sent(),[2,[c,d]];case 4:return[2,c];case 5:return[3,7];case 6:return ys([r,s,i,a,o]),[7];case 7:return[2]}}))}))},e.prototype.fineTuningUsingTfDatasets=function(t,e,n){return _S(this,void 0,void 0,(function(){var r,s,i;return OS(this,(function(a){switch(a.label){case 0:return r=this.secondLastBaseDenseLayer.trainable,this.secondLastBaseDenseLayer.trainable=!0,s=null==t.fineTuningOptimizer?"sgd":t.fineTuningOptimizer,this.model.compile({loss:"categoricalCrossentropy",optimizer:s,metrics:["acc"]}),[4,this.model.fitDataset(e,{epochs:t.fineTuningEpochs,validationData:n,callbacks:null==t.callback?null:[t.callback]})];case 1:return i=a.sent(),this.secondLastBaseDenseLayer.trainable=r,[2,i]}}))}))},e.prototype.fineTuningUsingTensors=function(t,e,n,r){return _S(this,void 0,void 0,(function(){var s,i,a;return OS(this,(function(o){switch(o.label){case 0:return s=this.secondLastBaseDenseLayer.trainable,this.secondLastBaseDenseLayer.trainable=!0,i=null==t.fineTuningOptimizer?"sgd":t.fineTuningOptimizer,this.model.compile({loss:"categoricalCrossentropy",optimizer:i,metrics:["acc"]}),[4,this.model.fit(e,n,{epochs:t.fineTuningEpochs,validationData:r,batchSize:t.batchSize,callbacks:null==t.fineTuningCallback?null:[t.fineTuningCallback]})];case 1:return a=o.sent(),this.secondLastBaseDenseLayer.trainable=s,[2,a]}}))}))},e.prototype.evaluate=function(t){return _S(this,void 0,void 0,(function(){var e=this;return OS(this,(function(n){return h(null!=t.wordProbThresholds&&t.wordProbThresholds.length>0,(function(){return"Received null or empty wordProbThresholds"})),h(this.words[0]===JS,(function(){return"Cannot perform evaluation when the first tag is not _background_noise_"})),[2,gs((function(){for(var n=[],r=0,s=e.collectTransferDataAsTensors(t.windowHopRatio),i=s.xs,a=s.ys.argMax(-1).dataSync(),o=e.model.predict(i),l=o.slice([0,1],[o.shape[0],o.shape[1]-1]).max(-1),u=o.shape[0],c=0;c<t.wordProbThresholds.length;++c){for(var h=t.wordProbThresholds[c],d=l.greater(ks(h)).dataSync(),p=0,f=0,m=0,g=0,y=0;y<u;++y)0===a[y]?(p++,d[y]&&m++):(f++,d[y]&&g++);var b=m/p,x=g/f;n.push({probThreshold:h,fpr:b,tpr:x}),console.log("ROC thresh="+h+": fpr="+b.toFixed(4)+", tpr="+x.toFixed(4)),c>0&&(r+=Math.abs(n[c-1].fpr-n[c].fpr)*(n[c-1].tpr+n[c].tpr)/2)}return{rocCurve:n,auc:r}}))]}))}))},e.prototype.createTransferModelFromBaseModel=function(){var t=this;h(null!=this.words,(function(){return"No word example is available for tranfer-learning model of name "+t.name}));for(var e=this.baseModel.layers,n=e.length-2;n>=0&&"dense"!==e[n].getClassName().toLowerCase();)n--;if(n<0)throw new Error("Cannot find a hidden dense layer in the base model.");this.secondLastBaseDenseLayer=e[n];var r,s=this.secondLastBaseDenseLayer.output;this.transferHead=new Mf(undefined),this.transferHead.add((r={units:this.words.length,activation:"softmax",inputShape:s.shape.slice(1),name:"NewHeadDense"},new Jm(r)));var i=this.transferHead.apply(s);this.model=Lf({inputs:this.baseModel.inputs,outputs:i})},e.prototype.modelInputShape=function(){return this.baseModel.inputs[0].shape},e.prototype.getMetadata=function(){return{tfjsSpeechCommandsVersion:rE,modelName:this.name,timeStamp:(new Date).toISOString(),wordLabels:this.wordLabels()}},e.prototype.save=function(t){return _S(this,void 0,void 0,(function(){var e,n,r;return OS(this,(function(s){return e=null!=t,t=t||uE(this.name),e||(n=iE.localStorage.getItem(sE),(r=null==n?{}:JSON.parse(n))[this.name]=this.getMetadata(),iE.localStorage.setItem(sE,JSON.stringify(r))),console.log("Saving model to "+t),[2,this.model.save(t)]}))}))},e.prototype.load=function(t){return _S(this,void 0,void 0,(function(){var e,n,r;return OS(this,(function(s){switch(s.label){case 0:if(e=null!=t,t=t||uE(this.name),!e){if(null==(n=JSON.parse(iE.localStorage.getItem(sE)))||null==n[this.name])throw new Error("Cannot find metadata for transfer model named "+this.name+'"');this.words=n[this.name].wordLabels,console.log("Loaded word list for model named "+this.name+": "+this.words)}return r=this,[4,zf(t)];case 1:return r.model=s.sent(),console.log("Loaded model from "+t+":"),this.model.summary(),[2]}}))}))},e.prototype.createTransfer=function(t){throw new Error("Creating transfer-learned recognizer from a transfer-learned recognizer is not supported.")},e}(oE);function uE(t){return"indexeddb://tfjs-speech-commands-model/"+t}function cE(t,e,n,r){if(h(null==n&&null==r||null!=n&&null!=r,(function(){return"customModelURL and customMetadataURL must be both provided or both not provided."})),null!=n&&h(null==e,(function(){return"vocabulary name must be null or undefined when modelURL is provided."})),"BROWSER_FFT"===t)return new oE(e,n,r);throw"SOFT_FFT"===t?new Error("SOFT_FFT SpeechCommandRecognizer has not been implemented yet."):new Error("Invalid fftType: '"+t+"'")}function hE(t,e,n,r,s,i,a){try{var o=t[i](a),l=o.value}catch(t){return void n(t)}o.done?e(l):Promise.resolve(l).then(r,s)}function dE(t){return function(){var e=this,n=arguments;return new Promise((function(r,s){var i=t.apply(e,n);function a(t){hE(i,r,s,a,o,"next",t)}function o(t){hE(i,r,s,a,o,"throw",t)}a(void 0)}))}}function pE(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var fE={tfjsSpeechCommandsVersion:"0.4.0",modelName:"TMv2",timeStamp:"2021-03-26T18:25:49.755Z",wordLabels:["Background Noise","iji","skizb","stop","dandax","verev"]},mE=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.options={includeSpectogram:!0,overlapFactor:.5,invokeCallbackOnNoiseAndUnkown:!1,probabilityThershold:.75}}var e,n,r,s,i;return e=t,(n=[{key:"buildModel",value:(i=dE(regeneratorRuntime.mark((function t(){var e;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=cE("BROWSER_FFT",void 0,chrome.extension.getURL("/model.json"),fE),t.next=3,e.ensureModelLoaded();case 3:return t.abrupt("return",e);case 4:case"end":return t.stop()}}),t)}))),function(){return i.apply(this,arguments)})},{key:"startAssistant",value:(s=dE(regeneratorRuntime.mark((function t(e){var n;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.buildModel();case 2:this.recognizer=t.sent,n=this.recognizer.wordLabels(),this.recognizer.listen((function(t){var r=t.scores,s=r.reduce((function(t,e){return t&&t>e?t:e})),i=r.findIndex((function(t){return t===s})),a=n[i];e&&e(a)}),this.options);case 5:case"end":return t.stop()}}),t,this)}))),function(t){return s.apply(this,arguments)})},{key:"stopAssistant",value:(r=dE(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.recognizer.stopListening();case 2:case"end":return t.stop()}}),t,this)}))),function(){return r.apply(this,arguments)})},{key:"saySpeech",value:function(t){var e=new window.SpeechSynthesisUtterance(t);window.speechSynthesis.speak(e)}}])&&pE(e.prototype,n),t}();function gE(t,e,n,r,s,i,a){try{var o=t[i](a),l=o.value}catch(t){return void n(t)}o.done?e(l):Promise.resolve(l).then(r,s)}function yE(t){return function(){var e=this,n=arguments;return new Promise((function(r,s){var i=t.apply(e,n);function a(t){gE(i,r,s,a,o,"next",t)}function o(t){gE(i,r,s,a,o,"throw",t)}a(void 0)}))}}var bE=document.createElement("button");bE.id="start-btn",bE.innerHTML="Click to start";var xE=!1,vE=null,wE=new mE;function kE(){return(kE=yE(regeneratorRuntime.mark((function t(e){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:"Background Noise"!==e&&console.log(e),t.t0=e,t.next="stop"===t.t0?4:"iji"===t.t0?6:"verev"===t.t0?8:"skizb"===t.t0?10:"dandax"===t.t0?12:14;break;case 4:return NE(),t.abrupt("break",14);case 6:return EE("down"),t.abrupt("break",14);case 8:return EE("up"),t.abrupt("break",14);case 10:return EE("top"),t.abrupt("break",14);case 12:return $E(),t.abrupt("break",14);case 14:vE=null;case 15:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function IE(t){vE||(vE=t,function(t){kE.apply(this,arguments)}(t))}bE.onclick=yE(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(xE){t.next=8;break}return bE.innerText="Starting...",t.next=4,wE.startAssistant(IE);case 4:xE=!0,bE.innerText="Stop Assistant",t.next=13;break;case 8:return bE.innerText="Stopping...",t.next=11,wE.stopAssistant();case 11:xE=!1,bE.innerText="Start Assistant";case 13:case"end":return t.stop()}}),t)}))),window.onload=function(){bE.style="\n    outline: 0;\n    border: 0;\n    background-color: #2ecc71;\n    padding: 7px 12px;\n    color: #fff;\n    font-size: 16px;\n    font-weight: 600;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: all 250ms ease-in-out;\n    position: absolute;\n    z-index: 99999999999999999;\n  ",document.body.prepend(bE)};var CE=100,SE=null;function EE(t){switch(t.toLowerCase().trim()){case"down":CE+=800;break;case"up":CE-=800;break;default:CE=0}window.scroll({top:CE,behavior:"smooth"})}function $E(){SE||(SE=setInterval((function(){CE+=150,window.scroll({top:CE,behavior:"smooth"})}),1e3))}function NE(){SE&&(clearInterval(SE),SE=null)}})()})();